<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKabatoncue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMiniBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Launches missiles from his mouth and waits, usually placed over Kabatoncue Platform

event_inherited();

introSprite = sprKabatoncueTeleport;
dead = false;
healthpointsStart = 16;
healthpoints = healthpointsStart;
contactDamage = 4;
category = "bulky, nature, rocky";

// Enemy specific code
dir = image_xscale;
init = 1;

cooldownTimer = 0;
cooldownMax = 64;

earJiggle = 0;
canCreateMissiles = 0;
missilesCreated = 0;
imageOffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    if (canCreateMissiles &gt; 0)
    {
        canCreateMissiles -= 1;
    }
    
    // Set current image of hippo.
    image_index = (4 * earJiggle) + imageOffset;
    
    // Hippo animation setup.
    if (cooldownTimer &gt; (cooldownMax * (missilesCreated + 1)) - 32)
    {
        imageOffset += 0.125;
    }
    if (cooldownTimer &gt;= (cooldownMax * (missilesCreated + 1)))
    {
        imageOffset = 0;
    }
    
    // create hippo missiles.
    if (canCreateMissiles == 0 || (cooldownTimer &gt;= cooldownMax &amp;&amp; missilesCreated == 1))
    {
        cooldownTimer += 1;
        if (cooldownTimer == cooldownMax * (missilesCreated + 1))
        {
            var inst = instance_create(x + (image_xscale * 22), y + 20, objKabatoncueMissile);
            with (inst)
            {
                direction = 180 * (other.image_xscale &lt; 0);
                missileID = other.id;
            }
            
            missilesCreated += 1;
            
            if (cooldownTimer &gt;= cooldownMax * 2)
            {
                cooldownTimer = 0;
                missilesCreated = 0;
                imageOffset = 0;
            }
        }
    }
}
else if (dead)
{
    calibrateDirection();
    image_index = 0;
    cooldownTimer = 0;
    earJiggle = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

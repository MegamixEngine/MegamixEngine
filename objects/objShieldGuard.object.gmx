<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprShieldGuard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMM4ShieldAttacker</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// The Shield Attacker from Powered Up. It's slower and can have its shield knocked off with Charge Shots + other weapons.

event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "shield attackers";

grav = 0;

// Enemy specific code
phase = 1;

dir = image_xscale;

moveSprite = sprite_index;
turnSprite = sprShieldGuardTurn;

moveSpeed = 1;
imgSpeed = 0.2;
turnSpeed = 0.05;
hasShield = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set this so xcoll can be used
event_inherited();

if (entityCanStep())
{
    if (hasShield == false)
    {
        turnSprite = sprShieldGuardNoShieldTurn;
        moveSprite = sprShieldGuardNoShield;
    }
    
    //Keeping this in case stuff breaks
    /*if (phase == 1)
    {
        if (xcoll != 0)
        {
            phase = 2;
            sprite_index = turnSprite;
            image_index = 0;
        }
        else
        {
            xspeed = moveSpeed * image_xscale;
            image_speed = imgSpeed;
        }
    }
    else
    {
        xspeed = 0;
        image_speed = turnSpeed;
        
        if (image_index &gt;= image_number - 1)
        {
            image_index = 0;
            phase = 1;
            sprite_index = moveSprite;
            image_xscale *= -1;
        }
    }*/
}
else if (dead)
{
    image_index = 0;
    phase = 1;
    image_xscale = dir;
    sprite_index = sprShieldGuard;
    turnSprite = sprShieldGuardTurn;
    moveSprite = sprShieldGuard;
    hasShield = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase == 1)
{
    if (hasShield == true)
    {
        if (sign(bboxGetXCenterObject(other.id) - bboxGetXCenter()) == image_xscale)
        {
            if ((other.object_index == objBusterShotCharged) || (other.object_index == objBreakDash))
            {
                sprite_index = sprShieldGuardNoShield;
                var i = instance_create(x, y, objShieldGuardShield);
                i.xspeed = -2 * image_xscale;
                i.yspeed = -4;
                i.image_xscale = image_xscale;
                hasShield = false;
                
                if (other.object_index == objBreakDash)
                {
                    with (objSlashEffect)
                    {
                        image_alpha = 0;
                    }
                }
                with (other)
                {
                    guardCancel = 1;
                    if ((penetrate &lt; 2) &amp;&amp; (pierces &lt; 2))
                    {
                        event_user(EV_DEATH);
                    }
                }
            }
            else
            {
                other.guardCancel = 1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

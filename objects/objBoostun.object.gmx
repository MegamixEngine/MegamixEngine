<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBoostun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// An enemy that flies into the air when walking off a ledge. It then flies after Mega Man and fires missiles at him.
event_inherited();

healthpointsStart = 3;
contactDamage = 4;
facePlayer = true;

blockCollision = 0;
category = "flying";
grav = 0;

imgIndex = 0; // Used to handle animation
imgSpd = 0.1; // Animation speed
animBack = false; // Reverse animation?

radius = 6 * 16; // Range Mega Man must enter before Boostun flies
phase = 0; // Current phase
angle = 0;
moveTimer = 60; // Steps until action is performed
shootTimer = 60; // Steps until missile is fired
flyTimer = 30; // time to wait before flying
missile = noone; // Missile
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // Walk on the ground
        case 0:
            xspeed = 0.7 * image_xscale;
            if (animBack == false)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 3)
                {
                    imgIndex = 1;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt; 0)
                {
                    imgIndex = 1;
                    animBack = false;
                }
            }
            if ((!positionCollision(x + 12 * image_xscale, bbox_bottom + 2))
                || (distance_to_object(target) &lt; radius))
            {
                imgIndex = 3;
                animBack = false;
                phase = 1;
            }
            break;
        // Fly into the air
        case 1: // Initial movement 
            moveTimer--;
            if (moveTimer &gt; 0)
            {
                yspeed = -1;
            }
            else
            {
                xspeed = 0;
                yspeed = 0;
                
                // Shoot
                if (instance_exists(target))
                {
                    shootTimer--;
                    
                    // Get target
                    var megaDir = point_direction(x, y, target.x, target.y + 5);
                    
                    // Set angle
                    if (image_xscale == 1)
                    {
                        // aim from east to south
                        if ((megaDir &lt;= 360) &amp;&amp; (megaDir &gt; 338) || (megaDir &gt;= 0) &amp;&amp; (megaDir &lt; 22))
                        {
                            angle = 0;
                        }
                        else if ((megaDir &lt;= 338) &amp;&amp; (megaDir &gt; 315))
                        {
                            angle = 338;
                        }
                        else if ((megaDir &lt;= 315) &amp;&amp; (megaDir &gt; 293))
                        {
                            angle = 315;
                        }
                        else if ((megaDir &lt;= 293) &amp;&amp; (megaDir &gt; 280))
                        {
                            angle = 293;
                        }
                        else if (megaDir &gt;= 270)
                        {
                            angle = 270;
                        } // aim from east to north
                        else if ((megaDir &gt;= 22) &amp;&amp; (megaDir &lt; 45))
                        {
                            angle = 22;
                        }
                        else if ((megaDir &gt;= 45) &amp;&amp; (megaDir &lt; 67))
                        {
                            angle = 45;
                        }
                        else if ((megaDir &gt;= 67) &amp;&amp; (megaDir &lt; 80))
                        {
                            angle = 67;
                        }
                        else if (megaDir &lt;= 90)
                        {
                            angle = 90;
                        }
                    } // If facing left...
                    else
                    {
                        // aim from west to south
                        if ((megaDir &gt;= 180) &amp;&amp; (megaDir &lt; 202) || (megaDir &lt;= 180) &amp;&amp; (megaDir &gt; 158))
                        {
                            angle = 180;
                        }
                        else if ((megaDir &gt;= 202) &amp;&amp; (megaDir &lt; 225))
                        {
                            angle = 202;
                        }
                        else if ((megaDir &gt;= 225) &amp;&amp; (megaDir &lt; 247))
                        {
                            angle = 225;
                        }
                        else if ((megaDir &gt;= 247) &amp;&amp; (megaDir &lt; 260))
                        {
                            angle = 247;
                        }
                        else if ((megaDir &gt;= 260) &amp;&amp; (megaDir &lt;= 270))
                        {
                            angle = 270;
                        } // aim from west to north
                        else if ((megaDir &lt;= 158) &amp;&amp; (megaDir &gt; 135))
                        {
                            angle = 158;
                        }
                        else if ((megaDir &lt;= 135) &amp;&amp; (megaDir &gt; 112))
                        {
                            angle = 135;
                        }
                        else if ((megaDir &lt;= 112) &amp;&amp; (megaDir &gt; 100))
                        {
                            angle = 112;
                        }
                        else if (megaDir &gt;= 90)
                        {
                            angle = 90;
                        }
                    }
                    angle = wrapAngle(angle);
                    
                    if (shootTimer &lt; 0)
                    {
                        if (!instance_exists(missile))
                        {
                            var i = instance_create(x + 4 * image_xscale, y - 9, objBoostunMissile);
                            missile = i.id;
                            i.parent = id;
                            i.dir = angle;
                            i.image_xscale = image_xscale;
                            playSFX(sfxMissileLaunch);
                            
                            // Set image used for missile
                            switch (angle)
                            {
                                case 0:
                                    i.image_index = 0;
                                    break;
                                case 22:
                                    i.image_index = 1;
                                    i.image_yscale = -1;
                                    break;
                                case 45:
                                    i.image_index = 2;
                                    i.image_yscale = -1;
                                    break;
                                case 67:
                                    i.image_index = 3;
                                    i.image_yscale = -1;
                                    break;
                                case 90:
                                    i.image_index = 4;
                                    i.image_yscale = -1;
                                    break;
                                case 112:
                                    i.image_index = 3;
                                    i.image_yscale = -1;
                                    break;
                                case 135:
                                    i.image_index = 2;
                                    i.image_yscale = -1;
                                    break;
                                case 158:
                                    i.image_index = 1;
                                    i.image_yscale = -1;
                                    break;
                                case 180:
                                    i.image_index = 0;
                                    break;
                                case 202:
                                    i.image_index = 1;
                                    break;
                                case 225:
                                    i.image_index = 2;
                                    break;
                                case 247:
                                    i.image_index = 3;
                                    break;
                                case 270:
                                    i.image_index = 4;
                                    break;
                                case 293:
                                    i.image_index = 3;
                                    break;
                                case 315:
                                    i.image_index = 2;
                                    break;
                                case 338:
                                    i.image_index = 1;
                                    break;
                                case 360:
                                    i.image_index = 0;
                                    break;
                            }
                        }
                        else
                        {
                            flyTimer--;
                            if (flyTimer &lt;= 0)
                            {
                                moveTowardPoint(target.x, target.y, 1);
                            }
                        }
                    }
                }
            }
            
            // Animation
            if (animBack == false)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 5)
                {
                    imgIndex = 4;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt;= 3)
                {
                    imgIndex = 4;
                    animBack = false;
                }
            }
            break;
    }
}
else if (dead)
{
    healthpoints = healthpointsStart;
    imgIndex = 0;
    phase = 0;
    animBack = false;
    moveTimer = 60;
    shootTimer = 60;
    flyTimer = 30;
    angle = 0;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

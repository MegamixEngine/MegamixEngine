<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMonkikki</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 4;
contactDamage = 4;

categories = "nature, primate";

jumpHeight = 48;

attackTimer = 60 * 3;

image_speed = 0;

landTimer = 0;
throwTimer = 0;
breatheTimer = 0;

grav = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    var jumping = false;
    if (ground)
    {
        landTimer--;
    }
    throwTimer--;
    attackTimer--;
    breatheTimer++;
    if (ground &amp;&amp; throwTimer &gt; 0)
    {
        jumping = false;
    }
    if (instance_exists(target) &amp;&amp; landTimer &lt;= 0)
    {
        if (abs(x - target.x) &lt;= 80)
        {
            jumping = true;
        }
    }
    
    if (!ground)
    {
        jumping = true;
    }
    
    if (jumping)
    {
        breatheTimer = 0;
        image_index = 4;
        landTimer = 3;
        if (throwTimer &gt; 0)
        {
            image_index = 5;
        }
        if (ground)
        {
            yspeed = -sqrt(abs(2 * grav * 48));
        }
    }
    else
    {
        image_index = (breatheTimer div 8) mod 2;
        if (attackTimer &lt; 15)
        {
            image_index = 2;
        }
        if (throwTimer &gt; 0)
        {
            image_index = 3;
        }
    }
    
    if (attackTimer mod 15 == 3)
        calibrateDirection();
    
    // throw banana
    if (attackTimer &lt; 0)
    {
        attackTimer = 60 * 2;
        throwTimer = 16;
        with (instance_create(x + 18 * image_xscale, y + 4, objEnemyBullet))
        {
            image_xscale = other.image_xscale;
            contactDamage = 2;
            canHit = true;
            sprite_index = sprBanana;
            target = other.target;
            if (instance_exists(other.target))
            {
                aimAtTarget(2.5);
            }
            else
            {
                xspeed = 1.8 * other.image_xscale;
                yspeed = 1.2;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

attackTimer = 60 * 2;
throwTimer = 0;
landTimer = 0;
breatheTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

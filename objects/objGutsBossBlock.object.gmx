<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGutsBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

blockCollision = 0;
grav = 0;

contactDamage = 4;

phase = 0;
timer = 0;

reflectable = 0;
ignoreCollision = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (global.frozen == false &amp;&amp; global.timeStopped == false)
{
    if (phase == 0)
    {
        if (!place_meeting(x, y - 2, objGutsMan))
            y += 4;
        else
            phase = 1;
    }
    else if (!ignoreCollision)
    {
        timer += 1;
        if (checkSolid(0, 0, 1, 1) &amp;&amp; xspeed != 0 &amp;&amp; yspeed != 0)
        {
            for (var i = 0; i &lt;= 1; i += 1) // X
                for (var j = 0; j &lt;= 1; j += 1) // Y
                {
                    var rubble = instance_create(x - (8 * sign(xspeed)) + i * 16,
                        y - 8 + j * 16, objGutsBossBlockRubble);
                    if (i == 0)
                        rubble.yspeed = -2 + (j / 2);
                    rubble.xspeed = (4 - j) * sign(xspeed);
                }
            instance_destroy();
        }
    }
    
    
    if (timer == 30)
    {
        var spd;
        spd = 4;
        if (instance_exists(target))
        {
            var angle;
            angle = point_direction(spriteGetXCenter(), spriteGetYCenter(),
                spriteGetXCenterObject(target),
                spriteGetYCenterObject(target));
            
            xspeed = cos(degtorad(angle)) * spd;
            yspeed = -sin(degtorad(angle)) * spd;
        }
        else
        {
            xspeed = spd;
            yspeed = 0;
        }
    }
}

if (!ignoreCollision &amp;&amp; (!insideView()) || (!instance_exists(objGutsMan)))
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

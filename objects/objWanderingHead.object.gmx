<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWanderingHead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 6;

facePlayerOnSpawn = true;
grav = 0;
category = "bird";
despawnRange=8;

// @cc - Determines how fast Wandering Head moves
moveSpeed = 2;

animTimer = 4;

xPrev = 0;
yPrev = 0;
xScaleStart = image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if(xcoll!=0)
    {
        xspeed = xcoll;
    }
    if(ycoll!=0)
    {
        yspeed = ycoll;
    }
    if(image_index==0)
    {
        if (xcoll != 0)
        {
            image_index = 2;
            xPrev = xcoll;
            yPrev = yspeed;
            xspeed=xcoll;
        }
        if (ycoll != 0)
        {
            image_index = 1;
            xPrev = xspeed;
            yPrev = ycoll;
            yspeed=ycoll;
        }
    }
    
    if (image_index == 1)
    {
        xspeed = 0;
        yspeed = 0;
        animTimer--;
        if (animTimer == 0)
        {
            yspeed = -yPrev;
            xspeed = xPrev;
            if (sign(yPrev)&lt;0)
            {
                image_index = 3;
            }
            else
            {
                image_index = 4;
            }
            animTimer = 4;
        }
    }
    else if (image_index == 2)
    {
        xspeed = 0;
        yspeed = 0;
        animTimer--;
        if (animTimer == 0)
        {
            xspeed = -xPrev;
            yspeed = yPrev;
            image_xscale *= -1;
            if (sign(xPrev)&lt;0)
            {
                image_index = 4;
            }
            else
            {
                image_index = 3;
            }
            animTimer = 4;
        }
    }
    
    if ((image_index == 3) || (image_index == 4))
    {
        animTimer--;
        if (animTimer == 0)
        {
            image_index = 0;
            animTimer = 4;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(spawned)
{
    image_xscale = xScaleStart;
    xspeed = moveSpeed * image_xscale;
    yspeed = -moveSpeed;
    xPrev = xspeed;
    yPrev = yspeed;
    image_index = 0;
    animTimer = 4;
    despawnRange=8+abs(moveSpeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

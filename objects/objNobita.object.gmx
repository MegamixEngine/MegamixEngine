<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNobita</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "grounded, semi bulky";

facePlayerOnSpawn = true;

// Enemy specific code
moveTimer = 0;
directionStore = 0;

upOrDown = false;
flag0 = false;

moveDist = 64;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (!upOrDown)
        image_index += 0.15;
    if (upOrDown)
        image_index -= 0.15;
    
    if (xspeed == 0 &amp;&amp; yspeed == 0 &amp;&amp; sprite_index != sprNobita2)
    {
        xspeed = 1 * image_xscale;
    }
    
    // turn round
    if (xspeed != 0)
        moveTimer += 1;
    
    if (moveTimer &gt;= moveDist)
    {
        xspeed = 0;
        image_index = 0;
        sprite_index = sprNobita2;
        moveTimer = 0;
    }
    
    // if it walks off an edge or hits a wall, turn round.
    if ((xspeed == 0 &amp;&amp; sprite_index != sprNobita2
        || !place_meeting(x + sprite_width / 2, y + image_yscale * 2,
        objSolid)) &amp;&amp; sprite_index != sprNobita2)
    {
        xspeed = 0;
        image_index = 0;
        sprite_index = sprNobita2;
    }
    
    // if
    if (image_index &gt;= 9 &amp;&amp; sprite_index == sprNobita2)
    {
        upOrDown = true;
        image_index -= 0.15;
    }
    
    if (image_index == 0 &amp;&amp; upOrDown == true)
    {
        image_index = 0;
        sprite_index = sprNobita;
        upOrDown = false;
        image_xscale = -image_xscale;
    }
    
    // if direction is different to direction store, reset move timer.
    if (image_xscale != directionStore &amp;&amp; sprite_index == sprNobita)
    {
        directionStore = image_xscale;
        moveTimer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On spawn
xspeed = 0;
yspeed = 0;
image_index = 0;
directionStore = image_xscale;
moveTimer = 0;
sprite_index = sprNobita;
upOrDown = false;
flag0 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

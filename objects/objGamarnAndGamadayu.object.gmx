<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGamarnIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMiniBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 15;
healthpoints = healthpointsStart;
contactDamage = 6;
canIce = false;

category = "bulky, nature";

doesIntro = false;

dir = image_xscale;

// Enemy specific code
shootTimer = 0;
frogAnimTimer = 0;
frogFrame = 0;
rideFrame = 0;
attack = choose(0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    shootTimer += 1;
    
    if (attack == 0)
    {
        if (shootTimer == 100)
        {
            rideFrame = 1;
        }
        
        if (shootTimer == 120)
        {
            rideFrame = 2;
            for (var i = 1; i &lt;= 2; i += 1)
            {
                var bomb = instance_create(round(x - 4 * image_xscale), round(y - 48), objGamadayuBomb);
                if (instance_exists(target))
                {
                    with (bomb)
                    {
                        xspeed = xSpeedAim(x, y, other.target.x, other.target.y, yspeed, grav);
                        xspeed = xspeed / other.i;
                    }
                }
            }
        }
        if (shootTimer == 122)
        {
            rideFrame = 3;
        }
        
        if (shootTimer == 150)
        {
            shootTimer = 0;
            rideFrame = 0;
            attack = choose(0, 1);
        }
    }
    
    if (attack == 1)
    {
        if (shootTimer == 100)
        {
            frogFrame += 2;
            var laser = instance_create(round(x + 32 * image_xscale), round(y + 10), objGamarnLaser);
            laser.image_xscale = image_xscale;
        }
        
        if (shootTimer == 150)
        {
            shootTimer = 0;
            frogFrame -= 2;
            attack = choose(0, 1);
        }
    }
    
    
    if (frogAnimTimer &lt; 5)
    {
        frogAnimTimer += 1;
    }
    else
    {
        if (frogFrame == 1)
        {
            frogFrame = 0;
        }
        else if (frogFrame == 0)
        {
            frogFrame = 1;
        }
        
        if (frogFrame == 2)
        {
            frogFrame = 3;
        }
        else if (frogFrame == 3)
        {
            frogFrame = 2;
        }
        
        frogAnimTimer = 0;
    }
}
else if (!insideView())
{
    image_index = 0;
    shootTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xb = bboxGetXCenterObject(other.id);
var yb = bboxGetYCenterObject(other.id);

if (!(yb &lt; y - 8 &amp;&amp; yb &gt; y - 28) || !(image_xscale &lt; 0 &amp;&amp; xb &lt; x || image_xscale &gt; 0 &amp;&amp; xb &gt; x))
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (iFrames == 1 || iFrames == 3)
{
    d3d_set_fog(true, c_white, 0, 0);
}

draw_sprite_ext(sprGamarn, frogFrame, round(x), round(y), image_xscale,
    image_yscale, image_angle, image_blend, image_alpha);
draw_sprite_ext(sprGamadayu, rideFrame, round(x - 6 * image_xscale),
    round(y - 48), image_xscale, image_yscale, image_angle, image_blend,
    image_alpha);

if (iFrames == 1 || iFrames == 3)
{
    d3d_set_fog(false, 0, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

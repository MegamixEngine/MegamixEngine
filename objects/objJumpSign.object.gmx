<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJumpSign</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

blockCollision = 0;
grav = 0;
bubbleTimer = -1;

xOffset = noone;
dir = 1;
timer = 0;
stopRange = 16;
spd = 4;
image_speed = 0.12;

respawnRange = -1;
despawnRange = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// the x origin is suppose to be 24 to make the most sense, and what I reprogrammed it thinking it was, but it's feature locked
// at 56, which is like past the actual width of the sprite, so have fun with a bunch of silly magic number shenanigans   :Y

event_inherited();

if (!global.frozen &amp;&amp; !dead
    &amp;&amp; !(bbox_right &lt; view_xview[0]
    || bbox_left &gt; view_xview[0] + view_wview[0]
    || bbox_bottom &lt; view_yview[0]
    || bbox_top &gt; view_yview[0] + view_hview))
{
    if (timer == 0)
    {
        // determine which side we're facing
        if (x - 32 &lt; view_xview[0] + view_wview[0]
            / 2) //- 32 here because facing right be default and because stupid sprite origins
        {
            dir = 1;
        }
        else
        {
            dir = -1;
        }
        
        xOffset = x
            - view_xview[0]; // save the offset from the left side of the screen
        timer = 1;
    }
    
    if (timer &gt;= 1)
    {
        x = view_xview[0]
            + xOffset; // move back to the previous spot on the screen
        
        if (timer == 1 &amp;&amp; ((dir == -1
            &amp;&amp; bbox_right &lt;= view_xview[0] + view_wview[0] - stopRange)
            || (dir == 1 &amp;&amp; bbox_left &gt; view_xview[0] + stopRange)))
        {
            timer = 2;
            
            if (dir == 1)
            {
                xOffset = ((x) - bbox_left) + stopRange;
            }
            else
            {
                xOffset = view_wview[0] + ((x) - bbox_right) - stopRange;
            }
        }
        
        if (timer &gt;= 2)
        {
            if (timer == 2)
            {
                if (sprite_index == sprSlideSign)
                {
                    playSFX(sfxSlideSlide);
                }
                else
                {
                    playSFX(sfxJumpJump);
                }
                
                timer = 3;
            }
            else
            {
                if (timer &gt;= 70) // &lt;-- time until they leave
                {
                    xOffset += -spd * dir * 3;
                }
                else
                {
                    timer += 1;
                }
            }
        }
        else
        {
            xOffset += spd * dir;
        }
    }
}
else if (dead)
{
    timer = 0;
    dir = 1;
    xOffset = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHopps</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "nature";

facePlayer = false;
facePlayerOnSpawn = true;

image_speed = 0;

// Enemy specific code
liftOff = false;
xSOffset = 0;
radius = 96;
cooldownTimer = 0;
cooldownTimerMax1 = 56;
cooldownTimerMax2 = 24;
imageTimer = 0;
imageTimerMax = 5;
activated = false;
delay = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(xcoll!=0)
{
    xspeed=xcoll;
}
if (entityCanStep())
{
    cooldownTimer += 1;
    
    // basic AI, if Mega Man is within range, activate Hopps.
    if (instance_exists(target))
    {
        if ((abs(target.x - x) &lt;= radius &amp;&amp; target.x &lt; x &amp;&amp; image_xscale == -1
            and image_index == 0 &amp;&amp; !liftOff &amp;&amp; !activated)
            or (abs(target.x - x) &lt;= radius &amp;&amp; target.x &gt;= x &amp;&amp; image_xscale == 1
            and image_index == 0 &amp;&amp; !liftOff &amp;&amp; !activated))
        {
            activated = true;
            image_index = 1;
            imageTimer = 0;
        }
    }
    if (imageTimer &gt;= imageTimerMax &amp;&amp; image_index == 1)
    {
        image_index += 1;
        imageTimer = 0;
    }
    if (activated &amp;&amp; ground &amp;&amp; imageTimer == imageTimerMax &amp;&amp; image_index == 2)
    {
        delay = 5;
        imageTimer = 0;
        liftOff = true;
        image_index = 3;
        xspeed = 2 * image_xscale;
        yspeed = -5;
        activated = false;
        cooldownTimer = 0;
    }
    if (!ground)
        image_index = 3;
    if (ground &amp;&amp; !liftOff &amp;&amp; !activated)
        image_index = 0;
    if (delay &gt; 0)
        delay -= 1;
    if (ground &amp;&amp; delay == 0)
    {
        xspeed = 0;
        imageTimer += 1;
    }
    if (ground &amp;&amp; liftOff &amp;&amp; imageTimer &lt; imageTimerMax)
        image_index = 1;
    if (ground &amp;&amp; liftOff &amp;&amp; imageTimer == imageTimerMax)
    {
        image_index = 0;
        imageTimer = 0;
        image_xscale = image_xscale * -1;
        liftOff = false;
    }
    if ((ground &amp;&amp; cooldownTimer &gt;= cooldownTimerMax1)
        || (!ground &amp;&amp; cooldownTimer &gt;= cooldownTimerMax2))
    {
        // If megaman exists, grab his angle, otherwise grab some random different angle.
        cooldownTimer = 0;
        var getAngle;
        if (instance_exists(target) &amp;&amp; !ground)
            getAngle = point_direction(spriteGetXCenter(),
                spriteGetYCenter(), target.x, target.y);
        else if (image_xscale == 1)
            getAngle = 0;
        else if (image_xscale == -1)
            getAngle = 180;
        var ID = instance_create(spriteGetXCenter() + image_xscale * 4,
            spriteGetYCenter() + 3, objMM5AimedBullet);
        {
            ID.dir = getAngle;
            ID.xscale = image_xscale;
            ID.moveAtSpeed = 2;
        }
        playSFX(sfxEnemyShootClassic);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_index = 0;
imageTimer = 0;
liftOff = false;
cooldownTimer = 0;
imageTimer = 0;
activated = false;
delay = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

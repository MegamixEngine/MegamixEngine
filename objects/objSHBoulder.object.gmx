<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprStoneHead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Boulder dropper for [objStoneHead](objStoneHead.html), it can drop any object but its recomended to stick to the default,
// if changed please also change its sprite_index.
// Note: These rocks are connected, use the templates to not worry about creation code,
// follow the guides and the names, the directions in the name indicate first where the previous rock
// should be and at last where the next boulder should be, if any.
// To invert the direction in which the templates connect change its image_xscale or image_yscale in the editor
// Note: be careful not to make an infinite loop between the boulders, that would crash the game
event_inherited();
init = 0;
blockCollision = 0;
canHit = false;
isEnd = false;
isStart = false;
endRef = noone;
startRef = noone;
grav = 0;
boulderCount = 0;
sprite_index = sprStoneHead;
nextBoulder = noone;
prevBoulder = noone;

//@cc custom sprite
customSprite = noone;

//@cc particle used to mark stone head's position
particleSprite = sprStoneHeadParticle;

//@cc this indicates if this boulder connects from left to right (1)or from right to left (-1)
dir = 1;

//@cc indicates exaclty where the other boulders are, use the templates instead of this object to not
// worry about this
nextYdir = 0;
nextXdir = 1;
prevXdir = -1;
prevYdir = 0;

//@cc object_index of the object to drop
customDrop = -1;

//@cc initial xspeed of the dropped object
dropXspeed = 0;

//@cc initial yspeed of the dropped object
dropYspeed = 0;

//@cc gravity of the dropped object
dropGrav = 0.15;

//@cc collision of the dropped object
dropBlockCollision = false;

//@cc code to execute on the dropped object
code = "";

//@cc script to execute on the dropped object
script = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (init)
{
    if (customSprite != noone)
        sprite_index = customSprite;
    init = 0;
    
    if (!isStart)
    {
        event_user(0);
    }
    
    if (!isEnd)
    {
        event_user(1);
    }
    
    if (isStart)
    {
        var i = 0;
        var ref = self;
        while (ref != noone)
        {
            i += 1;
            ref = ref.nextBoulder;
        }
        boulderCount = i;
        ref = self.nextBoulder;
        while (ref != noone)
        {
            ref.boulderCount = i;
            ref.startRef = self;
            ref = ref.nextBoulder;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// spawnParticle
var i = instance_create(x, y, objStoneHeadParticle);
i.sprite_index = particleSprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SpawnBoulderProjectile
if (customDrop &lt;= 0)
    customDrop = objSHFallingBoulder;
var i = instance_create(x, y, customDrop);
i.xspeed = dropXspeed;
i.yspeed = dropYspeed;
i.grav = dropGrav;
i.respawn = false;
i.blockCollision = dropBlockCollision;
with (i)
{
    if (other.script != noone)
        script_execute(other.script);
    if (other.code != "")
        stringExecutePartial(other.code);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GetEnd


if (!isEnd)
{
    if (nextBoulder.nextBoulder == noone)
        endRef = nextBoulder;
    else
    {
        with (nextBoulder)
            event_user(1);
        endRef = nextBoulder.endRef;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get Start


if (!isStart)
{
    if (prevBoulder.prevBoulder == noone)
        startRef = prevBoulder;
    else
    {
        with (prevBoulder)
            event_user(0);
        startRef = prevBoulder.startRef;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dir == 1)
{
    prevBoulder = instance_place(x + 5 * prevXdir, y + 5 * prevYdir, objSHBoulder);
    nextBoulder = instance_place(x + 5 * nextXdir, y + 5 * nextYdir, objSHBoulder);
}
else
{
    prevBoulder = instance_place(x + 5 * nextXdir, y + 5 * nextYdir, objSHBoulder);
    nextBoulder = instance_place(x + 5 * prevXdir, y + 5 * prevYdir, objSHBoulder);
}

if (nextBoulder == noone)
{
    endRef = self;
    isEnd = true;
}
if (prevBoulder == noone)
{
    startRef = self;
    isStart = true;
}
init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrazyRazySplit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "grounded, cluster";

blockCollision = 0;
grav = 0;

facePlayerOnSpawn = true;

// Enemy specific code
yspeed = -3;

stopTimer = 20;
yMax = 0;
turnTimer = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (turnTimer &gt; -1)
    {
        turnTimer -= 1;
    }
    if (turnTimer == 0)
    {
        calibrateDirection();
        xspeed = image_xscale * 1.5;
        turnTimer = 60;
    }
    
    if (stopTimer &gt; -1)
    {
        stopTimer -= 1;
    }
    if (stopTimer == 0)
    {
        yspeed = 0;
        yMax = y;
        calibrateDirection();
        xspeed = image_xscale * 1.5;
    }
    
    if (instance_exists(target))
    {
        if (collision_rectangle(x - 32, y, x + 32, y + 512, target, false, true) &amp;&amp; yspeed == 0)
        {
            yspeed = 4;
            image_index = 1;
        }
        if (y &gt;= target.y) &amp;&amp; (yspeed == 4)
        {
            image_index = 2;
            xspeed = image_xscale * 2;
        }
    }
    if (y &gt; view_yview + 224 - 16 &amp;&amp; yspeed == 4)
    {
        yspeed = -4;
    }
    if (yspeed == -4 &amp;&amp; y &lt;= yMax)
    {
        yspeed = 0;
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

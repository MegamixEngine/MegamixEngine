<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJumpRoller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// An enemy that rolls around and jumps at the player when they approach.
// Use objJumpRollerFlameField to let it shoot fire from its head when it touches it.

// Creation code (all optional):
// col = &lt;number&gt;. Color of the enemy. 0 = blue (default); 1 = orange; 2 = green

event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 2;
category = "fire";

facePlayerOnSpawn = true;

// Enemy specific code
image_speed = 0;

animTimer = 0;
wheelTimer = 0;

imgOffset = 0;
wheelVal = 0;

flameTimer = 20;
jumpCooldown = -1;

col = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    xSpeedTurnaround();
    
    // bounce up and down
    if (ground &amp;&amp; jumpCooldown &lt; 45)
    {
        animTimer++;
        wheelTimer++;
        
        // hey hey hey what a perfect place to put the fire code
        if (place_meeting(x, y, objJumpRollerFlameField))
        {
            flameTimer++;
            
            if (flameTimer == 30 || flameTimer == 40)
            {
                playSFX(sfxJumpRollerFlame);
                instance_create(x, y - 4, objJumpRollerFlame);
                
                if (flameTimer == 40)
                {
                    flameTimer = 0;
                }
            }
        }
    }
    
    // Weird code since the enemy hangs on these frames for slightly longer
    if (animTimer == 8 + ((imgOffset == 1 || imgOffset == 3) * 4))
    {
        imgOffset++;
        
        if (imgOffset &gt; 3)
        {
            imgOffset = 0;
        }
        
        animTimer = 0; // reset
    }
    
    // Wheel rolling
    if (wheelTimer == 4)
    {
        wheelVal = !wheelVal;
        wheelTimer = 0;
    }
    
    // Jump when target is near
    if (instance_exists(target) &amp;&amp; jumpCooldown == -1 &amp;&amp; ground) // prerequisites
    {
        // actual check
        if (collision_rectangle(x - 32, view_yview, x + 32, view_yview + view_hview, target, false, true))
        {
            xspeed = 1.2 * image_xscale; // slow down buckaroo!
            yspeed = -4.75;
            ground = false;
            jumpCooldown = 100; // yea
            
            // set jump frame
            imgOffset = 8;
        }
    }
    
    // air handling
    if (!ground)
    {
        // reset stuff
        wheelVal = 0;
        
        animTimer = 0;
        wheelTimer = 0;
        
        flameTimer = 0;
        
        if (yspeed &gt;= 0 &amp;&amp; imgOffset == 8)
        {
            imgOffset = 9;
        }
    }
    
    // landing
    if (ground &amp;&amp; imgOffset == 9)
    {
        jumpCooldown = 25; // hold it
        imgOffset = 1;
        xspeed = 0;
    }
    
    // handle jump cooldown
    if (jumpCooldown &gt; -1)
    {
        jumpCooldown--;
        
        if (jumpCooldown == 10)
        {
            calibrateDirection();
            xspeed = 1.5 * image_xscale;
            imgOffset = 2;
        }
    }
}

image_index = (imgOffset + (wheelVal * 4)) + (col * 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

animTimer = 0;
wheelTimer = 0;

imgOffset = 0;
wheelVal = 0;

flameTimer = 20;

xspeed = 1.5 * image_xscale;
jumpCooldown = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

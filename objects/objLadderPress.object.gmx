<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLadderPress</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>mskLadderPress</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// An invincible ladder trap. It slides up and down them and slams shut at regular intervals
event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 4;

isTargetable = false;

// @cc - Change colour (0 = red (default); 1 = yellow; 2 = green;)
col = 0;
imgIndex = 0;

grav = 0;
blockCollision = false;

moveSpeed = 1;

yDir = 1;

image_speed = 0;
phaseTimer = 0;

despawnRange = -1;
respawnRange = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var clampTime = 60 * 2.5;

if (entityCanStep())
{
    blockCollision = 0;
    grav = 0;
    phaseTimer++;
    if (!position_meeting(x + 8, y, objLadder))
    {
        grav = 0.25;
        phaseTimer = 0;
    }
    else if (phaseTimer &lt;= 22)
    {
        // rest
        yspeed = 0;
        y = round(y);
    }
    else if (phaseTimer &gt;= clampTime)
    {
        // clamp down
        yspeed = 0;
        var animTable = makeArray(1, 2, 3, 2, 3, 3, 3, 3, 3, 3, 2, 1, 0);
        imgIndex = animTable[(phaseTimer - clampTime) div 4];
        if (imgIndex == 0)
            phaseTimer = 0;
    }
    else
    {
        yspeed = yDir * abs(moveSpeed);
        
        // move up/down ladder
        var turnAround = false;
        if (!position_meeting(x + 8, y + yDir * 16, objLadder))
            turnAround = true;
        if (y &gt;= global.sectionBottom - 32 || y &lt;= global.sectionTop + 16)
            turnAround = true;
        var i = instance_position(x + 8, y + yDir, objGenericStopper);
        if (i != noone &amp;&amp; i.objectToStop == object_index)
            turnAround = true;
        if (turnAround)
        {
            yDir *= -1;
            yspeed *= -1;
        }
    }
}
image_index = imgIndex + (4 * col);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (spawned)
{
    yDir = 1;
    phaseTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.damage = 0;
other.guardCancel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

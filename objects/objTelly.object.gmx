<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTelly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A famous enemy that appears in plenty of levels. It will slowly inch towards Mega Man on a grid pattern.

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 2;

category = "cluster, floating";

grav = 0;
blockCollision = 0;
canHit = true;

// Enemy specific code
left = true;
cycleHold = false;

//@cc Speed the telly will come at the player in pixels per frame.
travelSpeed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* you know, I'm pretty sure the difference with the tracking methods in the original game was actually just the same tracking method, but having number
errors with the nes limitations when the player was far away. but whatever */

event_inherited();

// Animation
if (image_index &lt; 0)
{
    image_index = (image_number) + (image_index mod (image_number - 1));
}

if (entityCanStep())
{
    if (instance_exists(target))
    {
        var pDistX = target.x - x;
        var pDistY = target.y - y;
        
        // If the player is really close, target them directly.
        if (distance_to_object(target) &lt;= 32)
        {
            xspeed = 0;
            yspeed = 0;
            
            if (cycleHold)
            {
                cycleHold = false;
            }
            
            mp_linear_step(target.x, target.y, travelSpeed, false);
        }
        else
        {
            // if coming off of being close to mega man, or the telly is facing straight towards us or straight away, then update movement
            if ((xspeed == 0 &amp;&amp; yspeed == 0)
                || (!cycleHold &amp;&amp; (((image_index div 1) == 0)
                || ((image_index div 1) == 2)
                || ((image_index div 1) == 4))))
            {
                cycleHold = true;
                
                xspeed = 0;
                yspeed = 0;
                
                pDistX = target.x - x;
                pDistY = target.y - y;
                
                // move in the axis that has more distance between this and mega man
                if (abs(pDistX) &gt; abs(pDistY))
                {
                    xspeed = travelSpeed * sign(pDistX);
                }
                if (abs(pDistX) &lt; abs(pDistY))
                {
                    yspeed = travelSpeed * sign(pDistY);
                }
            }
            else if (cycleHold &amp;&amp; !(((image_index div 1) == 0)
                || ((image_index div 1) == 2)
                || ((image_index div 1) == 4)))
            {
                cycleHold = false;
            }
        }
        
        if ((pDistX) != 0)
        {
            image_speed = -0.125 * sign(pDistX);
        }
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

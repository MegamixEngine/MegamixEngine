<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSeaMine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// usesRng = &lt;boolean&gt;. If true, the sea mine will use RNG to determine if it'll blow up if you get close. Default true.

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 6;

grav = 0;

// Enemy specific code
yspeed = -0.25;
actionTimer = 0;
action = 1;

usesRng = true;

inWater = -1; // shouldn't have collision with the water
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (instance_exists(target))
    {
        if (abs(target.x - x) &lt; 64)
        {
            if (abs(target.y - y) &lt; 32)
            {
                if (action != 5)
                {
                    if (irandom(40) == 0 || !usesRng)
                    {
                        image_speed = 0.2;
                        action = 5;
                        actionTimer = 0;
                        yspeed = 0;
                    }
                }
            }
        }
    }
    
    if (action)
    {
        actionTimer += 1;
        switch (action)
        {
            case 1:
                if (actionTimer == 64)
                {
                    action += 1;
                    actionTimer = 0;
                    yspeed = 0;
                }
                break;
            case 2:
                if (actionTimer == 29)
                {
                    action += 1;
                    actionTimer = 0;
                    yspeed = 0.25;
                }
                break;
            case 3:
                if (actionTimer == 64)
                {
                    action += 1;
                    actionTimer = 0;
                    yspeed = 0;
                }
                break;
            case 4:
                if (actionTimer == 29)
                {
                    action = 1;
                    actionTimer = 0;
                    yspeed = -0.25;
                }
                break;
            case 5:
                if (actionTimer == 64)
                {
                    dead = 1;
                    instance_create(spriteGetXCenter(), spriteGetYCenter(),
                        objHarmfulExplosion);
                    playSFX(sfxExplosion2);
                }
                break;
        }
    }
}
else if (dead)
{
    yspeed = -0.25;
    actionTimer = 0;
    action = 1;
    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.penetrate != 2)
{
    other.guardCancel = 1;
}
else
{
    other.guardCancel = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

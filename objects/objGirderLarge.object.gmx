<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlutoGirderLarge</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// A girder that remains stationary until Mega Man is under or over it, at which point, it will drop down.
event_inherited();

canHit = false;
isSolid = true;
blockCollision = false;
grav = 0;
bubbleTimer = -1;
contactDamage = 4;
faction = 0;

phase = 0;
moveTimer = 60;
origX = x;
shakeDir = 0;
shakeTimer = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if ((!global.frozen) &amp;&amp; (!dead) &amp;&amp; (!global.timeStopped))
{
    switch (phase)
    {
        case 0:
            with (objMegaman) // if (instance_exists(target))
            {
                if (distance_to_point(other.x, y) &lt; other.sprite_width / 2)
                {
                    with (other)
                    {
                        phase = 1;
                        x--;
                        shakeDir = 'left';
                    }
                }
            }
            break;
        case 1:
            moveTimer--;
            if (moveTimer &gt; 0)
            {
                shakeTimer--;
                if (shakeTimer == 0)
                {
                    if (shakeDir == 'left')
                    {
                        x += 2;
                        shakeDir = 'right';
                    }
                    else
                    {
                        x -= 2;
                        shakeDir = 'left';
                    }
                    shakeTimer = 4;
                }
            }
            else
            {
                x = origX;
                yspeed = abs(yspeed);
                grav = gravAccel;
                
                with (objMegaman)
                {
                    if (place_meeting(x, y - gravDir * 4 - (other.yspeed * (other.yspeed &gt; 0)), other))
                    {
                        if ((canHit == true) &amp;&amp; (iFrames == 0))
                        {
                            with (other)
                            {
                                entityEntityCollision();
                            }
                        }
                    }
                }
            }
            break;
    }
}
else if (dead)
{
    phase = 0;
    moveTimer = 60;
    shakeDir = 0;
    shakeTimer = 4;
    grav = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNitronBlue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// When Mega Man is close, it swoops down and drops three fireballs that spout into small flame geysers
event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "fire, floating";

grav = 0;
blockCollision = 0;

// Enemy specific code
phase = 0;
radius = 4.5 * 16;
dipTimer = 0;

image_speed = 0.1;

//@cc 0 = blue; 1 = orange;
col = 0;
init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = 0;
    switch (col)
    {
        case 0:
            sprite_index = sprNitronBlue;
            break;
        case 1:
            sprite_index = sprNitronOrange;
            break;
    }
}

event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // start movement towards mega man
        case 0:
            if (instance_exists(target))
            {
                calibrateDirection();
                xspeed = 1 * image_xscale;
                phase = 1;
            }
            break;
        // flying towards megaman
        case 1:
            if (instance_exists(target))
            {
                if (abs(target.x - x) &lt;= radius)
                {
                    phase = 2;
                    xspeed = 1.5 * image_xscale;
                    yspeed = 2;
                }
            }
            break;
        // dip down &amp; shoot
        case 2:
            if (dipTimer == 0 || dipTimer == 25 || dipTimer == 50)
            {
                var fire = instance_create(x, y + sprite_height / 2,
                    objNitronFire);
                fire.col = col;
            }
            if (dipTimer == 75)
            {
                phase = 3;
                xspeed = 0;
                yspeed = -3;
            }
            yspeed -= 0.05;
            dipTimer += 1;
            break;
        // fly away
        case 3: // don't need to do anything here  :P
    }
}
else if (dead)
{
    phase = 0;
    dipTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

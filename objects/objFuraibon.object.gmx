<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFuraibonPurple</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// An Up'n'Down type enemy that parachutes down and explodes on death/contact.
event_inherited();

healthpointsStart = 1;
healthpoints = 1;
respawn = false;
grav = 0;
yspeed = -3;
contactDamage = 4;

imgIndex = 0;
imgSpd = 0.2;
phase = 0;
animBack = false;
animDelay = 6;

pierces = 0; // Die on contact with the player
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // activate if target approaches
        case 0:
            if (instance_exists(target))
            {
                if (y &gt;= target.y)
                {
                    imgIndex += imgSpd;
                    if (imgIndex == 2)
                    {
                        imgIndex = 0;
                    }
                }
                else
                {
                    phase = 1;
                }
            }
            break;
        // jump up + float down
        case 1:
            if (yspeed &lt; 0)
            {
                yspeed += 0.1;
                if (imgIndex &lt; 6)
                {
                    imgIndex += imgSpd;
                }
            }
            else
            {
                y += 1;
                if (animDelay == 6)
                {
                    if (animBack == false)
                    {
                        imgIndex += 0.1;
                        
                        if (imgIndex == 10)
                        {
                            imgIndex = 9;
                            animBack = true;
                            animDelay = 0;
                        }
                    }
                    else
                    {
                        imgIndex -= 0.1;
                        
                        if (imgIndex &lt; 7)
                        {
                            imgIndex = 7.9;
                            animBack = false;
                            animDelay = 0;
                        }
                    }
                }
                else
                {
                    animDelay++;
                }
            }
            break;
    }
    
    // Check for wind/rain objects
    if (instance_place(x, y, objToadRain))
    {
        xspeed = instance_place(x, y, objToadRain).blowSpeed;
    }
                
    if (instance_exists(objTenguWind))
    {
        if (instance_nearest(x, y, objTenguWind).activated)
        {
            xspeed = instance_nearest(x, y, objTenguWind).windSpeed * instance_nearest(x, y, objTenguWind).dir;
        }
    }
                
    if (instance_place(x, y, objWindRight))
    {
        if (instance_place(x, y, objWindRight).dir == "right")
        {
            xspeed = instance_place(x, y, objWindRight).spd;
        }
        else if (instance_place(x, y, objWindRight).dir == "left")
        {
            xspeed = -(instance_place(x, y, objWindRight).spd);
        }
        else if (instance_place(x, y, objWindRight).dir == "up")
        {
            yspeed = 1.2 - instance_place(x, y, objWindRight).spd;
        }
        else if (instance_place(x, y, objWindRight).dir == "right")
        {
            yspeed = 1 + instance_place(x, y, objWindRight).spd;
        }
    }
                
    if (instance_place(x, y, objSandstorm))
    {
        xspeed = instance_place(x, y, objSandstorm).dir * 0.5;
    }
    
    // blow up on ground hit
    if ((xcoll) || (ycoll))
    {
        var i = instance_create(x, y, objHarmfulExplosion);
        i.contactDamage = 4;
        playSFX(sfxMM9Explosion);
        itemDrop = -1;
    }
}
image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// destroy the parachute
if other.y &lt;= y - 2 &amp;&amp; image_index &gt;= 5
{
    instance_create(x, y - 2, objExplosion);
    healthpoints += 1;
    
    imgIndex = 3;
    grav = gravAccel;
    phase = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var i = instance_create(x, y, objHarmfulExplosion);
i.contactDamage = 4;
playSFX(sfxMM9Explosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

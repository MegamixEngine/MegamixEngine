<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGorillaTankHand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):

event_inherited();

image_xscale = -1;

respawn = true;

healthpointsStart = 16;
healthpoints = healthpointsStart;
contactDamage = 4;

grav = 0;
blockCollision = false;
isTargetable = false;

// Enemy specific code
attack = false;
shootTimer = 0;
image_speed = 0;
parent = noone;
dir = 1;
getX = x;
getY = y;
spd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(parent))
{
    if (healthpoints &gt; parent.healthpoints)
    {
        healthpoints = parent.healthpoints;
    }
    else
    {
        parent.healthpoints = healthpoints;
    }
}

if (entityCanStep())
{
    if (attack == true)
    {
        shootTimer += 1;
        if (shootTimer == 1)
        {
            getX = x;
            getY = y;
            spd = 4;
            image_speed = 0.5;
            if (instance_exists(target))
            {
                var angle;
                angle = round(point_direction(spriteGetXCenter(),
                    spriteGetYCenter(),
                    spriteGetXCenterObject(target),
                    spriteGetYCenterObject(target) + 16) / 22.5) * 22.5;
                
                xspeed = cos(degtorad(angle)) * spd;
                yspeed = -sin(degtorad(angle)) * spd;
            }
            else
            {
                xspeed = spd * image_xscale;
                yspeed = 0;
            }
        }
        
        
        if (x &lt; view_xview + 16 || x &gt; view_xview + view_wview - 16
            || y &lt; view_yview + 16 || y &gt; view_yview + view_hview - 16)
        {
            dir = -1;
        }
        
        if (dir == -1)
        {
            spd = 2;
            var angle;
            angle = round(point_direction(spriteGetXCenter(), spriteGetYCenter(), getX, getY));
            
            xspeed = cos(degtorad(angle)) * spd;
            yspeed = -sin(degtorad(angle)) * spd;
        }
    }
    
    // dir
    if (dir == -1 &amp;&amp; point_distance(spriteGetXCenter(), spriteGetYCenter(), getX, getY) &lt;= spd)
    {
        xspeed = 0;
        yspeed = 0;
        x = getX;
        y = getY;
        dir = 1;
        image_single = 0;
        attack = false;
        shootTimer = 0;
    }
}
else if (!insideView())
{
    if (instance_exists(target))
    {
        if (target.x &lt; x)
        {
            image_xscale = -1;
        }
        else
        {
            image_xscale = 1;
        }
    }
    
    image_index = 0;
    shootTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.damage = 0;
other.guardCancel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

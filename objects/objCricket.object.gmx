<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCricket</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

event_inherited();
canHit = false;

grav = 0;
blockCollision = 0;
behaviourTypes = 1;

isSolid = 2;

offset = 0;

dir = image_xscale;

startDir = dir;
init = 1;

//@cc how many hops before heading the other direction, -1 will be infinite)
hops = 3;

startHops = -9999;

phase = 0;
timer = 0;

y -= 3;

active = false;
ground = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(startHops==-9999)
	startHops = hops;
if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    if (phase == 0)
    {
        if (instance_exists(target))
        {
            if (place_meeting(x, y - 1, target) &amp;&amp; target.ground
                &amp;&amp; !place_meeting(x, y, target))
            {
                active = true;
            }
        }
    }
    
    if (active)
    {
        timer += 1;
        switch (timer)
        {
            case -9:
                yspeed = 0;
                break;
            case -5:
                image_index = 0;
                yspeed = -5;
                break;
            case -4:
                yspeed = 0;
                break;
            case 10:
                image_index = 1;
                yspeed = 5;
                break;
            case 11:
                yspeed = 0;
                break;
            case 30:
                image_index = 2;
                yspeed = -8;
                playSFX(sfxCricket);
                break;
            case 31:
                yspeed = 0;
                break;
            case 33:
                image_index = 3;
                yspeed = -4 - 5;
                break;
            case 34:
                yspeed += 5;
                break;
        }
        
        if (timer &gt; 33)
        {
            yspeed += 0.15;
            xspeed = dir;
            
            while (checkSolid(xspeed, 0))
            {
                xspeed -= dir * 0.1;
            }
            
            if (yspeed &gt; 0)
            {
                while (checkSolid(0, yspeed))
                {
                    yspeed -= 0.1;
                }
            }
            else
            {
                if (checkSolid(0, yspeed))
                {
                    yspeed = 0;
                }
            }
            
            if (checkSolid(0, 1))
            {
                xspeed = 0;
                yspeed = 5;
                timer = -10;
                image_index = 1;
                if (hops != -1)
                {
                    hops -= 1;
                }
                if (hops == 0)
                {
                    hops = startHops;
                    dir = -dir;
                }
            }
        }
    }
    
    image_xscale = dir;
}
else if (dead)
{
    image_index = 0;
    active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(spawned)
{
    dir = startDir;
    image_xscale = dir;
    image_index = 0;
    active = false;
    hops = startHops;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

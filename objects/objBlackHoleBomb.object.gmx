<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlackHoleBombInactive</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 3;

image_speed = 0.4;

penetrate = 3;
pierces = 2;
attackDelay = 20;
killOverride = true;

blownUp = false;
canHit = false;
canDamage = false;
destroyTimer = 0;

playSFX(sfxBlackHoleBomb);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// pls no endless sfx
event_inherited();

audio_stop_sound(sfxBlackHoleBombOpen);
audio_stop_sound(sfxBlackHoleBomb);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (instance_exists(parent))
    {
        if (!blownUp)
        {
            // using distance to point as a cooldown cuz im lazy lol
            if ((global.keyShootPressed[parent.playerID]) &amp;&amp; distance_to_point(xstart, ystart) &gt; 4)
            {
                sprite_index = sprBlackHoleBomb;
                mask_index = sprBlackHoleBombHitbox;
                audio_stop_sound(sfxBlackHoleBomb);
                playSFX(sfxBlackHoleBombOpen);
                canHit = true;
                canDamage = true;
                xspeed = 0;
                yspeed = 0;
                blownUp = true;
            }
            else
            {
                // Loop audio if game isn't paused
                if (!audio_is_playing(sfxBlackHoleBomb)) &amp;&amp; (!dead)
                {
                    playSFX(sfxBlackHoleBomb);
                }
                var dir = (global.keyDown[parent.playerID] - global.keyUp[parent.playerID]) * (sign(parent.image_yscale));
                if (dir != 0)
                {
                    if (yspeed * sign(yspeed) &lt; 2)
                    {
                        yspeed += dir * 0.05;
                    }
                }
                else
                {
                    yspeed -= 0.05 * sign(yspeed);
                }
            }
        }
    }
    
    if (blownUp) // eventually pitter out
    {
        if (!audio_is_playing(sfxBlackHoleBombOpen)) &amp;&amp; (!dead)
            playSFX(sfxBlackHoleBombOpen);
        
        destroyTimer += 1;
        if (destroyTimer &gt;= 240)
            instance_destroy();
    }
}
else // Kill sounds when pausing game
{
    audio_stop_sound(sfxBlackHoleBomb);
    audio_stop_sound(sfxBlackHoleBombOpen);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtEnemyProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canDamage)
{
    switch (other.reflectable)
    {
        case 0:
            exit;
            break;
        case -1:
        case 1:
            playSFX(getGenericSFX(SFX_ENEMYHIT));
            event_user(EV_ATTACK);
            with (other)
            {
                event_user(EV_DEATH);
            }
            break;
        /*case -1:
            playSFX(getGenericSFX(SFX_ENEMYHIT));
            with (other)
            {
                i = instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
                event_user(EV_DEATH);
            }
            break;
        case 1:
            playSFX(getGenericSFX(SFX_ENEMYHIT));
            event_user(EV_ATTACK);
            with (other)
            {
                event_user(EV_DEATH);
            }
            break;*/
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (performShoot)
{
    var ammoCost = 4 - (2 * (global.energySaver &gt; 0));
    i = fireWeapon(16, 0, objBlackHoleBomb, 1, ammoCost, 1, 0);
    with (i)
    {
        xspeed = other.image_xscale * 1; // zoom
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("BLACK HOLE BOMB", make_color_rgb(128, 0, 240), make_color_rgb(160, 132, 248), sprWeaponIconsBlackHoleBomb);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other)
{
    par = object_is_ancestor(object_index, prtMiniBoss) || (boss == 1);
    shot = object_is_ancestor(object_index, prtEnemyProjectile);
    if (par || (!canHit &amp;&amp; !shot) || !killOverride)
    {
        exit;
    }
    
    if (healthpoints - global.damage &lt;= 0)
    {
        var _i;
        _i = instance_create(x, y, objBHBEffect);
        _i.sprite_index = sprite_index;
        _i.image_index = image_index;
        _i.image_xscale = image_xscale;
        _i.image_yscale = image_yscale;
        _i.targetX = other.x;
        _i.targetY = other.y;
        if (useShader)
        {
            _i.useShader = true;
            for(a = 0; a &lt; 3; a++)
            {
                _i.replaceColor[a] = replaceColor[a];
                _i.newColor[a] = newColor[a];
            }
        }
        playSFX(getGenericSFX(SFX_ENEMYHIT));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// unique ricochet animation
i = instance_create(x, y, objBigExplosion);
playSFX(getGenericSFX(SFX_EXPLOSIONMM9Alt));
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

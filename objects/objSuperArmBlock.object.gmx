<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSuperArmBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//@cc set the depth in creation code to change what layer this applies to.
layer = 1000000;

if (place_meeting(x, y, objSolid))
{
    carveSolid(bbox_left, bbox_top, bbox_right, bbox_bottom);
    with (objSolid)
    {
        if (place_meeting(x, y, other))
        {
            instance_destroy();
        }
    }
    
    isSolid = 1;
}
tileN = 0;

// Super Arm interaction setup
category = "superArmTarget";
superArmFlashTimer = 0;
superArmFlashOwner = noone;
superArmFlashInterval = 1;
superArmHoldOwner = noone;
superArmDeathOnDrop = true;
superArmThrown = false;

canHit = false;
contactDamage = 0;

grav = 0;
blockCollision = 0;
shiftVisible = 1;
bubbleTimer = -1;

tileN = 0;
tileWidth = makeArray();
tileHeight = makeArray();
tileOffsetY = makeArray();
tileOffsetX = makeArray();
tileLeft = makeArray();
tileTop = makeArray();
tiles = makeArray();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// change depth
if (superArmHoldOwner != noone)
{
    depth = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// remove solids under self
depth = layer;

carveSolid(bbox_left, bbox_top, bbox_bottom, bbox_right, true);
with (objSolid)
{
    if (place_meeting(x, y, other))
    {
        other.isSolid = true;
        instance_destroy();
    }
}

// place pickups under the super arm block so they become Hidden Boys
if (place_meeting(x, y, prtPickup))
{
    with instance_place(x, y, prtPickup)
    {
        depth = other.layer + 1;
        blockCollision = 0;
        grav = 0;
    }
}

// find underlying tiles
for (var ix = bbox_left + 8; ix &lt; bbox_right; ix += 16)
{
    for (var iy = bbox_top + 8; iy &lt; bbox_bottom; iy += 16)
    {
        var tile = tile_layer_find(depth, ix, iy);
        if (tile != -1)
        {
            tileOffsetX[tileN] = tile_get_x(tile) - x;
            tileOffsetY[tileN] = tile_get_y(tile) - y;
            tileLeft[tileN] = tile_get_left(tile);
            tileTop[tileN] = tile_get_top(tile);
            tileWidth[tileN] = tile_get_width(tile);
            tileHeight[tileN] = tile_get_height(tile);
            tiles[tileN++] = tile_get_background(tile);
            tile_delete(tile);
        }
    }
}

if (tileN &lt;= 0)
{
    printErr("Warning: a super arm block at " + string(x) + "," + string(y) + " had no underlying tiles. (Did you remember to set its layer to the tile layer?)");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead)
{
    for (var i = 0; i &lt; tileN; i++)
    {
        draw_background_part(tiles[i], tileLeft[i], tileTop[i], tileWidth[i], tileHeight[i], floor(x) + tileOffsetX[i], floor(y) + tileOffsetY[i]);
    }
    
    if (superArmFlashTimer mod (2 * superArmFlashInterval) &gt;= superArmFlashInterval || superArmHoldOwner != noone || superArmThrown)
    {
        // flash
        draw_set_blend_mode(bm_add);
        for (var i = 0; i &lt; tileN; i++)
        {
            draw_background_part(tiles[i], tileLeft[i], tileTop[i], tileWidth[i], tileHeight[i], floor(x) + tileOffsetX[i], floor(y) + tileOffsetY[i]);
        }
        draw_set_blend_mode(bm_normal);
        draw_set_alpha(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

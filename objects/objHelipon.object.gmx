<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHelipon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "flying";

grav = 0;
blockCollision = 0;

facePlayerOnSpawn = true;

// Enemy specific code
ground = 1;
hovering = 1;

actionTimer = 0;
action = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (action)
    {
        var iaction = action;
        actionTimer += 1;
        switch (action)
        {
            case 1:
                if (!(actionTimer mod 4))
                {
                    if (image_index == 0)
                    {
                        image_index = 1;
                    }
                    else
                    {
                        image_index = 0;
                    }
                }
                if (hovering)
                {
                    if (instance_exists(target))
                    {
                        correctDirection(point_direction(bboxGetXCenter(),
                            bboxGetYCenter(),
                            bboxGetXCenterObject(target),
                            bboxGetYCenterObject(target)),
                            2); // Speed at which it changes it's angle
                    }
                    speed = 0.75;
                    if (actionTimer &gt;= 200)
                    {
                        if (!checkSolid(0, 0))
                        {
                            hovering = 0;
                            grav = 0.25;
                            blockCollision = 1;
                            speed = 0;
                        }
                    }
                }
                break;
            case 2:
                if (actionTimer == 6)
                {
                    action += 1;
                    image_index = 3;
                }
                break;
            case 3:
                if (actionTimer == 6)
                {
                    action += 1;
                    image_index = 4;
                }
                break;
            case 4:
                if (actionTimer == 6)
                {
                    action += 1;
                    image_index = 5;
                }
                break;
            case 5:
                if (actionTimer == 6)
                {
                    action += 1;
                    image_index = 6;
                }
                break;
            case 6:
                if (actionTimer == 6)
                {
                    action += 1;
                    image_index = 7;
                }
                break;
            case 7:
                if (actionTimer == 40)
                {
                    action += 1;
                    image_index = 8;
                }
                break;
            case 8:
                if (actionTimer == 5)
                {
                    action += 1;
                    image_index = 9;
                }
                break;
            case 9:
                if (actionTimer == 5)
                {
                    action += 1;
                    image_index = 10;
                }
                break;
            case 10:
                if (actionTimer == 8)
                {
                    action += 1;
                    var i = instance_create(x + 5 * image_xscale, bbox_top + 1,
                        objEnemyBullet);
                    i.xspeed = image_xscale * 2;
                    i.contactDamage = 2;
                }
                break;
            case 11:
                if (actionTimer == 8)
                {
                    action += 1;
                    image_index = 9;
                }
                break;
            case 12:
                if (actionTimer == 5)
                {
                    action += 1;
                    image_index = 8;
                }
                break;
            case 13:
                if (actionTimer == 5)
                {
                    action = 7;
                    image_index = 7;
                }
                break;
        }
        if (action != iaction)
        {
            actionTimer = 0;
        }
    }
    
    if (image_index &gt;= 7)
    {
        facePlayer = true;
    }
    else
    {
        facePlayer = false;
    }
    
    if (!hovering)
    {
        if (action == 1)
        {
            if (ground &amp;&amp; yspeed == 0)
            {
                image_index = 2;
                action = 2;
                actionTimer = 0;
            }
        }
    }
}
else if (dead)
{
    direction = 60;
    if (image_xscale == -1)
    {
        direction += 60;
    }
    
    actionTimer = 0;
    action = 1;
    
    grav = 0;
    blockCollision = 0;
    hovering = 1;
    image_index = 0;
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// spawn event
event_inherited();

if (spawned)
{
    direction = 60;
    if (image_xscale == -1)
    {
        direction += 60;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

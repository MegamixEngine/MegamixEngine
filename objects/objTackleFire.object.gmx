<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTackleFire</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 2;
contactStart = contactDamage;

category = "floating, cluster, fire";

blockCollision = 0;
grav = 0;

//facePlayerOnSpawn = true;
dummyLogic = false;

// Enemy specific code
image_speed = 0.25;

timer = 0;
phase = 1;

//@cc how long it is until the tackle fire pops up.
popDelay = 1;

//@cc how long it is until the tackle fire drops down.
alarmDrop = 60;

//@cc whether to drop down from its original position or to drop down at a random position.
randomOffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    image_speed = 0.25;
    timer += 1;
    if (dummyLogic)
    {
        phase = 0;
    }
    switch (phase)
    {
        case 0: // controlled externally 
            if (xspeed != 0)
            {
                image_xscale = sign(xspeed);
            }
            break;
        case 1: // wait 
            if (timer &gt;= popDelay)
            {
                yspeed = -3;
                phase = 2;
            }
            break;
        case 2: // Go up 
            if (y &lt; global.sectionTop)
            {
                yspeed = 0;
                timer = 0;
                if (randomOffset)
                {
                    x = random_range(view_xview[0] + 32, view_xview[0] + view_wview[0] - 32);
                }
                phase = 3;
            }
            break;
        case 3: // wait and then drop down 
            if (timer &gt; alarmDrop)
            {
                yspeed = 1;
                xspeed = choose(-0.5, 0.5);
                image_xscale = sign(xspeed);
                phase = 4;
            }
            break;
    }
}
else
{
    image_speed = 0;
}

visible = (yspeed != 0) || dummyLogic;
canHit = visible;
contactDamage = contactStart * visible;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On spawn
event_inherited();
timer = 0;
phase = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

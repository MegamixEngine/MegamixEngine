<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprProtomanEncounter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// performs two functions.
// 1: blows up terrain (use boss barriers), as in mega man 3.
// 2: drops items like Eddie (set itemDrop variable), as in mega man V gb.

event_inherited();

grav = 0;
blockCollision = 0;

facePlayerOnSpawn = true;

imgIndex = 2;

introType = 0;

animTimer = 0;
blinkTimer = 0;
phase = 0;
startIntro = true;

// set this to something in creation code if desired
itemDrop = -1;
protoLock = false;

// @cc if true, protoman will go away instantly when he does his thing instead of waiting
instantLeave = false;

itemDropped = false;//Makes it easier to prevent double-item-drops with cutscene skip.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    with (objBossBarrier)
    {
        delay = 24;
    }
        
    if (startIntro)
    {
        protoLock = lockPoolLock(global.playerLock[PL_LOCK_MOVE],
                    global.playerLock[PL_LOCK_SLIDE],
                    global.playerLock[PL_LOCK_SHOOT],
                    global.playerLock[PL_LOCK_TURN],
                    global.playerLock[PL_LOCK_CHARGE],
                    global.playerLock[PL_LOCK_CLIMB],
                    global.playerLock[PL_LOCK_JUMP],
                    global.playerLock[PL_LOCK_PAUSE],
                    global.playerFrozen);
        itemDropped = false;
        with (objMegaman)
        {
            isSlide = false;
            slideLock = lockPoolRelease(slideLock);
            slideChargeLock = lockPoolRelease(slideChargeLock);
            mask_index = mskMegaman;
            xspeed = 0;
            yspeed = 0;                   
            if (x &lt; other.x)
            {
                image_xscale = 1;
            }
            else
            {
                image_xscale = -1;
            }
            /*if (abs(other.maxFanOutDistance) &gt; 0)
            {
                playerFanOut(20 * image_xscale, other.maxFanOutDistance);
            }*/
        }
        
        //Don't stop the music in speedrun mode to prevent NSF bug
        if (!global.autoCutsceneSkip)
        {
            stopMusic();
        }
        
        playSFX(sfxWhistle);
        if (!instance_exists(objCutsceneSkipMenu))
        {
            with (instance_create(x,y,objCutsceneSkipMenu))
            {
                parent = other;
            }
        }
        visible = false;
        y = view_yview[0] + 8;
        startIntro = false;
    }
    if (phase == 2)
    {
        y -= 8;
        if (y &lt; view_yview[0] - 16)
        {
            instance_destroy();
        }
    }
    else if (y &lt; ystart) // descend
    {
        if !audio_is_playing(sfxWhistle)
        {
            y += 8;
            visible = true;
        }
    }
    else
    {
        y = ystart;
        
        if (phase == 0)
        {
            animTimer++;
            if animTimer == 1
            {
                playSFX(getGenericSFX(SFX_TELEIN,-1));
            }
        }
        else
        {
            animTimer--;
        }
        
        imgIndex = 4 - (animTimer div 4 mod 2);
        
        if (animTimer &gt; 16)
        {
            blinkTimer += 1;
            imgIndex = ((blinkTimer mod 20 + 8 + 1) &gt;= 20); //0 + ((animTimer mod 29) &gt;= 20);
            if (animTimer &gt; 150)
            {
                animTimer = 15;
                phase = 1;
            }
            
            // item dropping
            if (itemDrop != -1 &amp;&amp; animTimer == 100)
            {
                with (instance_create(x, y, itemDrop))
                {
                    xspeed = other.image_xscale * 1.5;
                    yspeed = -3;
                }
                itemDropped = true;
            
                // there he goes
                if instantLeave
                {
                    animTimer = 151;
                }
            }
            // break blocks
            else if (itemDrop == -1 &amp;&amp; animTimer == 75)
            {
                with (objBossBarrier)
                {
                    delay = 0;
                    event_user(0);
                    playSFX(getGenericSFX(SFX_EXPLOSIONMM5));
                }
                
                // there he goes 2
                if instantLeave
                {
                    animTimer = 151;
                }
            }
        }
        
        if (animTimer &lt; 0)
        {
            imgIndex = 2;
            phase = 2;
            playSFX(getGenericSFX(SFX_TELEOUT));
            
            resumeMusic();
            lockPoolRelease(protoLock);
        }
    }
}
image_index = imgIndex + (5 * (global.characterSelected[0] == CHAR_PROTOMAN)) div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.guardCancel = 2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cutscene skip.

event_user(4);
with (objProtomanEncounter)
{
    if (id != other)
    {
        event_user(4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cutscene skip, when called not by the main object.
y = ystart;
stopSFX(sfxWhistle);
if (!itemDropped &amp;&amp; itemDrop != -1)
{
    with (instance_create(x, y, itemDrop))
    {
        xspeed = other.image_xscale * 1.5;
        yspeed = -3;
    }
    itemDropped = true;
}
with (objBossBarrier)//OK if this one is redundant since boss barriers shouldn't be created after being destroyed.
{
    delay = 0;
    event_user(0);
    playSFX(getGenericSFX(SFX_EXPLOSIONMM5));
}
animTimer = 151;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

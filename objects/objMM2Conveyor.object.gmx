<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMM2ConveyorIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    Instructions:
    Change its xscale from the editor to set its direction and stretch it to the sides 
    until it has the size you want
*/
event_inherited();

//@cc Total amount of frames per sub image group, 2 by default
animFrames = 2;

animTime = 5;

canHit = false;
isSolid = 1;
hasBelt=false;

respawn = true;

grav = 0;
blockCollision = 0;

respawnRange = -1;
despawnRange = -1;
shiftVisible = 1;
bubbleTimer = -1;

dir = sign(image_xscale);

if (image_xscale &lt; 0)
{
    image_xscale = abs(image_xscale);
    x -= sprite_width;
    xstart = x;
}
if(image_yscale&lt;0)
{
    image_yscale=abs(image_yscale);
    y -= sprite_height;
    ystart = y;
}

spd = 1; // The speed the player moves at when standing on the conveyor belt

imgalarm = 0;
img = 0;

sprite_index = sprMM2Conveyor;

// merge conveyor belt objects if this one is the leftmost object in the chain
if (dir == 1)
{
    if (!place_meeting(x - 16, y, object_index))
    {
        while (place_meeting(x + 16, y, object_index))
        {
            with (instance_place(x + 16, y, object_index))
            {
                instance_destroy();
            }
            image_xscale += 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    var exspd = spd * dir;
    
    if (exspd != 0)
    {
        with (prtEntity)
        {
            if (blockCollision &amp;&amp; !dead &amp;&amp; ground &amp;&amp; grav != 0)
            {
                if (object_index != objCrusher &amp;&amp; object_index!=objOshitsuOsarettsu &amp;&amp; object_index!=objMetalMan)
                {
                    if(place_meeting(x,y+2*sign(grav), other))
                    {
                        if(!other.hasBelt)
                            shiftObject(exspd, 0, 1);    
                        else
                            shiftObject(exspd*sign(grav), 0, 1);  
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((!global.frozen &amp;&amp; !global.timeStopped) || instance_exists(objSectionSwitcher))
{
    imgalarm += 1;
    if (imgalarm &gt;= animTime)
    {
        imgalarm = 0;
        img = (img+1) mod animFrames;
    }
}

var imgadd;

for (var i = 0; i &lt; image_xscale; i += 1)
{
    if(i==0&amp;&amp;image_xscale==1)//single block
    {
        imgadd = 6*animFrames + animFrames*(dir&lt;0);
    }
    else if (i == 0)//left block
    {
        imgadd = animFrames*(dir&lt;0);
    }
    else if(i==image_xscale-1)//right block
    {
        imgadd = 4*animFrames + animFrames*(dir&lt;0);
    }
    else // Middle block
    {
        imgadd = 2*animFrames + animFrames*(dir&lt;0);
    }
    draw_sprite(sprite_index, img + imgadd, x + i * 16, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

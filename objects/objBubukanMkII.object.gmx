<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBubukanMkII</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A modified version of Bubukan. Invincible until you approach it, where it will then spring past you
// and freak out on the ground, before springing back at you.
event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 5;

facePlayerOnSpawn = true;

// enemy specific
phase = 0;
radius = 2.5 * 16;

landingWait = 45;
landingWaitTimer = landingWait;

runSpd = 1.75;
jumpSpd = 2;

runCycleBack = false;

animTimer = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        case 0: // start towards player 
            if (instance_exists(target))
            {
                xspeed = runSpd * image_xscale;
                phase = 1;
            }
            break;
        case 1: // approaching the player 
            animTimer++;
            
            if (animTimer == 7)
            {
                image_index++;
                if (image_index &gt; 3)
                {
                    image_index = 0;
                }
                
                animTimer = 0;
            }
            
            // detect mega man
            if (instance_exists(target))
            {
                if (abs(target.x - x) &lt;= radius)
                {
                    phase = 2;
                    image_index = 4;
                    animTimer = 0;
                    runCycleBack = false;
                    xspeed = 0;
                }
            }
            break;
        case 2: // pole vaulting 
            animTimer++;
            
            if (animTimer &gt;= 8)
            {
                phase = 3;
                xspeed = jumpSpd * image_xscale;
                yspeed = -5.5; // &lt;-- jump speed
                ground = 0;
                
                image_index = 5;
                animTimer = 0;
                
                var pole = instance_create(x, y + 8, objBubukanPole); // sprite_width becomes negative if xscale is negative
                pole.image_xscale = image_xscale;
                pole.sprite_index = sprBubukanMkIIFeet;
            }
            break;
        case 3: // flying through the air 
            animTimer++;
            
            if (animTimer &gt;= 10)
            {
                image_index++;
                animTimer = 0;
                
                if (image_index &gt; 8)
                {
                    image_index = 5;
                }
            }
            
            if (ground)
            {
                phase = 4;
                xspeed = 0;
                image_index = 9; // tigger time
                animTimer = 0;
                calibrateDirection();
            }
            break;
        // waiting a moment after landing
        case 4: // insert FUNNY ace spark motion sickness joke here 
            animTimer++;
            
            if (animTimer &gt;= 5)
            {
                animTimer = 0;
                image_index++;
                
                if (image_index &gt; 12)
                {
                    image_index = 9;
                }
            }
            
            if (landingWaitTimer &gt; 0)
            {
                landingWaitTimer -= 1;
            }
            else
            {
                calibrateDirection();
                phase = 5;
                xspeed = jumpSpd * image_xscale;
                yspeed = -1.75;
                image_index = 13;
            }
            break;
        case 5: // running around 
            if (landingWaitTimer &gt; 0)
            {
                landingWaitTimer -= 1;
            }
            
            // wait on ground
            if (ground)
            {
                if (image_index == 13)
                {
                    landingWaitTimer = 10;
                    image_index = 9;
                    xspeed = 0;
                }
                
                if (landingWaitTimer == 0)
                {
                    xspeed = jumpSpd * image_xscale;
                    yspeed = -1.75;
                    image_index = 13;
                    ground = false;
                }
            }
            break;
    }
    
    // turn around if a wall is run into
    if (xspeed == 0 &amp;&amp; (phase == 1 || phase == 3 || phase == 5) &amp;&amp; image_index != 9)
    {
        image_xscale = -image_xscale;
        if (phase == 1)
        {
            xspeed = runSpd * image_xscale;
        }
        
        if (phase == 3 || phase == 5)
        {
            xspeed = jumpSpd * image_xscale;
        }
    }
}
else if (dead)
{
    phase = 0;
    landingWaitTimer = landingWait;
    
    image_index = 0;
    animTimer = 0;
    runCycleBack = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

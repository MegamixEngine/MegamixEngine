<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprParasyu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// is an enemy that uses a parachute to fall down from the top of the screen
// then drift in a swaying motion attempting to crash into Mega Man
event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "flying";

blockCollision = 0;
grav = 0;

behaviourType = 1;

// Enemy specific code
active = false;
distance = 32;
offset = distance / 2;
rangeActive = 96;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (active)
    {
        visible = true;
        if (y &lt; ystart &amp;&amp; image_index == 0)
        {
            yspeed = 3;
        }
        else
        {
            if (image_index == 0)
            {
                xspeed = -0.2;
                image_index = 1;
            }
            if (sign((x + offset) - xstart) == sign(xspeed))
            {
                yspeed = 1 - abs((x + offset) - xstart) / (offset / 2);
            }
            else
            {
                yspeed = 1;
            }
            if (image_index &lt; 2)
            {
                image_index += 0.1; //(20 / 60);
            }
            xspeed += 0.05 * sign(xspeed);
            if (x &lt;= xstart - distance)
            {
                xspeed = 0.2;
            }
            if (x &gt;= xstart)
            {
                xspeed = -0.2;
            }
        }
    }
    else
    {
        y = view_yview;
        visible = false;
    }
    
    if (instance_exists(target))
    {
        if (abs(x - target.x) &lt; rangeActive)
        {
            active = true;
        }
    }
}
else if (dead)
{
    image_index = 0;
    active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

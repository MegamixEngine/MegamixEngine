<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFeeber</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A crab that shoots large bubbles. If the player player touches the bubbles, they'll get trapped inside and must break out as the bubbles carry them along.
/// Bubbles change direction when hitting a wall. By default, bubbles pop automatically after a certain delay, which can be changed with creation code.
/// With the right architecture and placement, this enemy can add an extra layer of danger to both platforming and combat encounters.

event_inherited();

healthpointsStart = 6;
healthpoints = healthpointsStart;
contactDamage = 3;

facePlayer = true;
category = "aquatic, semi bulky";

// @cc - Sets delay for bubble to pop
popTimer = 600;
// @cc - If false, bubble will never pop after delay
canPop = true;

imgSpd = 0.1;
animBack = false;
phase = 0;
moveTimer = 30;
bubbleType = 0; // Makes it use trapping bubble - don't edit.
bubble = noone;
heavyBubble = noone;
animTimer = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // Prepare Bubble
        case 0:
            moveTimer--;
            if (moveTimer &gt; 0)
            {
                image_index += imgSpd;
                if (image_index == 2)
                {
                    image_index = 0;
                }
            }
            else
            {
                image_index += imgSpd;
                if (image_index == 4)
                {
                    phase = 1;
                    moveTimer = 60;
                }
            }
            break;
        case 1:
            moveTimer--;
            if (moveTimer == 30)
            {
                if (!bubbleType) // Create trapping bubble
                {
                    if (!instance_exists(bubble))
                    {
                        i = instance_create(x, y, objFeeberBubble);
                        i.image_xscale = image_xscale;
                        i.image_yscale = image_yscale;
                        i.parent = id;
                        i.popTimer = popTimer;
                        i.canPop = canPop;
                        bubble = i.id;
                        playSFX(sfxOil);
                    }
                }
            }
            if (moveTimer &lt;= 0)
            {
                if (image_index &gt; 2)
                {
                    image_index -= imgSpd;
                }
                else // if (image_index == 1)
                {
                    image_index = 0;
                    animTimer--;
                    if (animTimer == 0)
                    {
                        calibrateDirection();
                        image_index = 4;
                        animBack = false;
                        phase = 2;
                        moveTimer = 120;
                        animTimer = 10;
                    }
                }
            }
            break;
        case 2:
            moveTimer--;
            if (moveTimer &gt; 0)
            {
                if (animBack == false)
                {
                    image_index += imgSpd;
                    if (image_index &gt;= 7)
                    {
                        image_index = 6;
                        animBack = true;
                    }
                }
                else
                {
                    image_index -= imgSpd;
                    if (image_index &lt; 4)
                    {
                        image_index = 5;
                        animBack = false;
                    }
                }
            }
            else
            {
                moveTimer = 30;
                image_index = 0;
                phase = 0;
            }
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (spawned)
{
    image_index = 1;
    animBack = false;
    phase = 0;
    moveTimer = 30;
    animTimer = 10;
    animBack = false;
    bubble = noone;
    heavyBubble = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

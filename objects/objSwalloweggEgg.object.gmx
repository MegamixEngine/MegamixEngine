<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJetEgg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/*
The egg that comes with Swallowegg, when it's released, it locks onto your
position, and flies at you once it's lined up.
*/

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "flying, bird";

blockCollision = 0;
grav = 0;
despawnRange = -1;

animTimer = -1;
phase = 0;

release = 0;
targetLeft = 0;
launchY = 0;
soundPlay = 0;

drawFlame = 0;
flameTimer = 0;
flameIndex = 0;

birdInstanceStore = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (instance_exists(birdInstanceStore))
    {
        // if the egg is being carried, set it's position to just under that Swallowegg
        if (!birdInstanceStore.dead &amp;&amp; !release)
        {
            var inst;
            inst = birdInstanceStore;
            x = ceil(inst.x + (1 * inst.image_xscale));
            xspeed = 0;
            image_xscale = inst.image_xscale;
        }
        
        // if Swallowegg is dead, start flying towards the target immediately.
        if (xspeed == 0 &amp;&amp; birdInstanceStore.dead)
        {
            if (instance_exists(target))
            {
                if (target.x &gt; x)
                {
                    targetLeft = 0;
                    xspeed = 4;
                }
                else
                {
                    targetLeft = 1;
                    xspeed = -4;
                }
                release = 1;
                despawnRange = 4;
                drawFlame = 1;
                soundPlay = 1;
            }
        }
        
        // if Swallowegg has dropped the egg, set a target point, start falling, and ignore the bird
        if (xspeed == 0 &amp;&amp; birdInstanceStore.hasEgg == false)
        {
            yspeed = 4;
            despawnRange = 4;
            release = 1;
            if (instance_exists(target))
            {
                launchY = target.y;
            }
            birdInstanceStore = noone;
        }
    }
    else
    {
        // if there is no bird at all, start flying
        if (release == 0 &amp;&amp; xspeed == 0)
        {
            if (instance_exists(target) &amp;&amp; target.x &gt; x)
            {
                targetLeft = 0;
                xspeed = 4;
            }
            else
            {
                targetLeft = 1;
                xspeed = -4;
            }
            release = 1;
            despawnRange = 4;
            drawFlame = 1;
            soundPlay = 1;
        }
    }
    
    // If the egg is almost lined up with the target, slow down and activate boosters
    if (release == 1 &amp;&amp; y &lt; launchY - 14 &amp;&amp; y &gt; launchY - 48)
    {
        if (instance_exists(target) &amp;&amp; target.x &gt; x)
        {
            targetLeft = 0;
        }
        else
        {
            targetLeft = 1;
        }
        yspeed = 2;
        drawFlame = 1;
    }
    
    // more slow down
    if (release == 1 &amp;&amp; y &lt; launchY &amp;&amp; y &gt; launchY - 14)
    {
        yspeed = 1;
        drawFlame = 1;
    }
    
    // if the egg has reached/is below the target point, start flying
    if (release == 1 &amp;&amp; y &gt;= launchY)
    {
        if (targetLeft == 0)
        {
            xspeed += 0.5;
            if (xspeed &gt; 4)
            {
                xspeed = 4;
            }
        }
        else
        {
            xspeed -= 0.5;
            if (xspeed &lt; -4)
            {
                xspeed = -4;
            }
        }
        yspeed = 0;
        drawFlame = 1;
        if (soundPlay == 0)
        {
            playSFX(sfxJetEggLaunch);
            soundPlay = 1;
        }
    }
    
    // animation timer for the flame effect
    if (drawFlame == 1)
    {
        animTimer += 1;
        
        if (animTimer &gt;= 4)
        {
            if (flameIndex == 0)
            {
                flameIndex = 1;
            }
            else if (flameIndex == 1)
            {
                flameIndex = 0;
            }
            animTimer = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;
stopSFX(sfxEnemyHit);
var _ex = instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);

if (instance_exists(birdInstanceStore))
{
    birdInstanceStore.hasEgg = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// No iFrames or sounds for me!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprJetEgg, 0, x, y);

// this code controls the drawing of its jet flame

if (drawFlame == 1)
{
    if (targetLeft == 0)
    {
        draw_sprite_ext(sprEggFlame, flameIndex, x - 12, y, 1, 1, 0, c_white, 1);
    }
    else
    {
        draw_sprite_ext(sprEggFlame, flameIndex, x + 13, y, -1, 1, 0, c_white, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGSQ</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// A bulky trash-spitting robot. What does G.S.Q. even stand for? "Garbage Squashing Queen"? :thinking:

event_inherited();

healthpointsStart = 9;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "semi bulky, grounded";

facePlayerOnSpawn = true;

// Enemy specific code
moveTimer = 60;
canShoot = true;
imgSpd = 0.16;
phase = 0;
animTimer = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        case 0: // Fire 
            if ((image_index != 4) &amp;&amp; (canShoot == true))
            {
                image_index += imgSpd;
            }
            if (image_index == 4)
            {
                animTimer--;
                if (animTimer &lt;= 0)
                {
                    if (canShoot == true)
                    {
                        // Create block
                        var i = instance_create(x + image_xscale * 8, y - 7, objGSQBlock);
                        i.image_xscale = image_xscale;
                        i.xspeed = 2 * image_xscale;
                        canShoot = false;
                    }
                    else
                    {
                        image_index = 3;
                        animTimer = 10;
                    }
                }
            }
            if (canShoot == false)
            {
                animTimer--;
                if (animTimer &lt;= 0)
                {
                    image_index -= imgSpd;
                    if (image_index == 0)
                    {
                        moveTimer = 60;
                        phase = 1;
                    }
                }
            }
            break;
        case 1: // Idle 
            moveTimer--;
            animTimer--;
            if (animTimer &lt;= 0)
            {
                if (image_index == 0)
                {
                    image_index = 1;
                }
                else if (image_index == 1)
                {
                    image_index = 0;
                }
                animTimer = 8;
            }
            if ((moveTimer &lt;= 0) &amp;&amp; (image_index == 0))
            {
                canShoot = true;
                phase = 0;
            }
            break;
    }
}
else if (dead)
{
    moveTimer = 0;
    image_index = 0;
    phase = 0;
    canShoot = true;
    animTimer = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

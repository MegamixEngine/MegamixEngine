<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprChunco</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A flying bird that waits for a moment before chasing the player, shooting two shots in a spread pattern aimed at the player.
/// Once it starts moving, it constantly flies diagonally up and down, never stopping. Shots are fired at specified intervals.
/// This is the enemy created by Birdie, but it functions well as a standalone threat or in combination with other things.

event_inherited();

healthpointsStart = 1;

contactDamage = 4;
grav = 0;
imgSpd = 0.16;
facePlayerOnSpawn = true;
shootTimer = 120;
moveTimer = 120;
phase = 0;

category = "nature, bird";

blockCollision = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    image_index += imgSpd;
    
    if (instance_exists(target))
    {
        switch (phase)
        {
            case 0:
                moveTimer--;
                if (moveTimer &gt; 120)
                {
                    xspeed = 1 * image_xscale;
                    yspeed = -2;
                }
                else
                {
                    xspeed = 0;
                    yspeed = 0;
                }
                if (moveTimer == 0)
                {
                    phase = 1;
                    xspeed = 1 * image_xscale;
                    if (y &gt; target.y)
                    {
                        yspeed = -1;
                    }
                    else if (y &lt; target.y)
                    {
                        yspeed = 1;
                    }
                    else
                    {
                        yspeed = 0;
                    }
                    
                    moveTimer = 70;
                }
                break;
            case 1:
                moveTimer--;
                shootTimer--;
                if (shootTimer == 0)
                {
                    var getAngle = point_direction(x, y, target.x, target.y);
                    
                    i = instance_create(x, y, objMM5AimedBullet);
                    i.dir = getAngle + 30;
                    i.xscale = image_xscale;
                    i.sprite_index = sprEnemyBullet;
                    i = instance_create(x, y, objMM5AimedBullet);
                    i.dir = getAngle - 30;
                    i.xscale = image_xscale;
                    i.sprite_index = sprEnemyBullet;
                    playSFX(sfxEnemyShootClassic);
                    
                    shootTimer = 120;
                }
                if (moveTimer == 0)
                {
                    calibrateDirection();
                    xspeed = 1 * image_xscale;
                    if (y &gt; target.y)
                    {
                        if (y &lt;= target.y - 32)
                        {
                            yspeed = -0.5;
                        }
                        else
                        {
                            yspeed = -1;
                        }
                    }
                    else if (y &lt; target.y)
                    {
                        if (y &gt;= target.y + 16)
                        {
                            yspeed = 0.5;
                        }
                        else
                        {
                            yspeed = 1;
                        }
                    }
                    else
                    {
                        yspeed = 0;
                    }
                    moveTimer = 70;
                }
                break;
        }
    }
}
else if (dead)
{
    image_index = 0;
    healthpoints = healthpointsStart;
    xspeed = 0;
    yspeed = 0;
    moveTimer = 120;
    shootTimer = 120;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

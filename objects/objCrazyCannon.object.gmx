<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrazyCannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A gun with a face, will switch between high and low shots
event_inherited();

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "cannons";

// Enemy specific code
state = 0;
timer = 1;
bulletTimes = 0;
init = 1;

//@cc 0 = red (default); 1 = red
col = 0;

// facePlayerOnSpawn = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (init)
{
    init = 0;
    switch (col)
    {
        case 1:
            sprite_index = sprCrazyCannonRed;
            break;
        default:
            sprite_index = sprCrazyCannon;
            break;
    }
}


if (entityCanStep())
{
    timer -= 1;
    switch (state)
    {
        case 0:
            if (timer == 0)
            {
                if (bulletTimes == 6)
                {
                    state = 1;
                    timer = 15;
                }
                else
                {
                    timer = 35;
                    playSFX(sfxEnemyShootClassic);
                    var a = instance_create(x + (17 * image_xscale), y - 13, //6
                        objCrazyCannonBullet);
                    a.xspeed = 3.5 * image_xscale;
                    a.yspeed = -2.75;
                    a.inWater = inWater;
                    a.sprite_index = sprFlashShot;
                    bulletTimes += 1;
                }
            }
            break;
        case 1:
            if (timer == 0)
            {
                if (image_index == 5)
                {
                    bulletTimes = 0;
                    state = 2;
                    timer = 15;
                }
                else
                {
                    image_index += 1;
                    timer = 8;
                }
            }
            break;
        case 2:
            if (timer == 0)
            {
                if (bulletTimes == 6)
                {
                    state = 3;
                    timer = 15;
                }
                else
                {
                    timer = 35;
                    playSFX(sfxEnemyShootClassic);
                    var a = instance_create(x + (12 * image_xscale), y - 23, //6, 12
                        objCrazyCannonBullet);
                    a.xspeed = choose(.75, 1.25) * image_xscale;
                    a.yspeed = -4.5;
                    a.inWater = inWater;
                    bulletTimes += 1;
                }
            }
            break;
        case 3:
            if (timer == 0)
            {
                if (image_index == 0)
                {
                    bulletTimes = 0;
                    state = 0;
                    timer = 15;
                }
                else
                {
                    image_index -= 1;
                    timer = 8;
                }
            }
            break;
    }
}
else if (dead)
{
    image_index = 0;
    state = 0;
    timer = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

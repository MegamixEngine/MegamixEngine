<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTwinCannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 2;

category = "cannons";

facePlayer = true;

animEndme = 0;
shootTimer = 0;
twinCooldown = 0;
imgIndex = 0;

// @cc - Change colour (0 = orange, 1 = green, 2 = red [Game Gear colours])
col = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    animEndme += 1;
    if (!(animEndme mod 6))
    {
        imgIndex = (imgIndex == 0);
    }
    
    shootTimer += 1;
    if (shootTimer == 106)
    {
        var i = instance_create(x + 12 * image_xscale, y - 4, objEnemyBullet);
        i.xspeed = 1.5 * image_xscale;
    }
    if (shootTimer &gt;= 150)
    {
        shootTimer = 0;
    }
    
    if (!twinCooldown)
    {
        with (prtEntity)
        {
            if (!dead)
            {
                if (contactDamage)
                {
                    if (global.factionStance[faction, other.faction])
                    {
                        with (other)
                        {
                            if (collision_rectangle(x - 32, y - 32, x + 32, y, other, false, true))
                            {
                                var i = instance_create(x + 8 * image_xscale, y - 16 + 1, objTwinCannonBullet);
                                i.xspeed = 4 * image_xscale;
                                i.image_xscale = image_xscale;
                                i.image_index = col;
                                twinCooldown = 44;
                                imgIndex = 2;
                                break;
                            }
                        }
                    }
                }
            }
        }
    }
    else
    {
        twinCooldown -= 1;
    }
}
else if (dead)
{
    shootTimer = -60;
    animEndme = 0;
    twinCooldown = 0;
    imgIndex = 0;
}
image_index = imgIndex + (3 * col)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

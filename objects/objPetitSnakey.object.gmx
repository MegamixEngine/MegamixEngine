<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPetitSnakey</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// This snake will shoot at Megaman's position after it blinks.
event_inherited();

respawn = true;
              
killOverride = false;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "nature";

shootTimer = 0;

// respawnRange = 90000; // set to -1 to make infinite
// despawnRange = -1; // set to -1 to make infinite
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    grav *= image_yscale; // for ceiling snakies
    
    if (instance_exists(target))
    {
        if (abs(target.x - x) &gt; 16)
        {
            calibrateDirection();
            if (image_xscale == -1)
            {
                x = xstart - 16;
            }
            if (image_xscale == 1)
            {
                x = xstart;
            }
        }
    }
    
    if (insideView())
    {
        shootTimer += 1;
        if (shootTimer == 40)
        {
            image_index = 1;
        }
        if (shootTimer == 50)
        {
            image_index = 0;
        }
        if (shootTimer == 60)
        {
            image_index = 2;
            instance_create(x + 4 * image_xscale, y + 8, objSnakeyBullet);
        }
        if (shootTimer == 70)
        {
            image_index = 0;
            shootTimer = -60;
        }
    }
}
else if (dead)
{
    shootTimer = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var myPillar = instance_position(bboxGetXCenter(), bbox_bottom + 8,
    objPetitSnakeyPillar);
if (myPillar)
{
    with (myPillar)
    {
        if (object_index == objPetitSnakeyPillar)
        {
            instance_create(x, y, objPetitSnakeyPillarDeleter);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMinoanPreview</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

sprite_index = sprMinoanMount;

image_xscale = -1;
dir = 1;

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;
category = "nature, shielded";

// Enemy specific code
xspeed = 0;
yspeed = 0;
grav = 0;
minoanID = -20;
canCreateMinoan = true;
prevDead = false;
image_speed = 7 / 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    image_speed = (7 / 60);
    
    if (canCreateMinoan == true)
    {
        if (minoanID == -20 || !instance_exists(minoanID))
        {
            canCreateMinoan = false;
            minoanID = instance_create(x, y + 15, objMinoanFan);
            minoanID.mountID = id;
        }
    }
}
else
{
    image_speed = 0;
    if (dead == true)
    {
        image_index = 0;
        canCreateMinoan = true;
        
        if (prevDead == false &amp;&amp; insideView())
        {
            if (minoanID != -20 &amp;&amp; instance_exists(minoanID))
                minoanID.phase = 1;
        }
    }
}

prevDead = dead;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>9,-1</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFlowerPresenter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// An enemy from Hornet Man's stage. It will stay still until Mega Man gets close, on which it
// will launch out a flower missile that homes in on the player. It reloads after a short cooldown.

// Creation code (all optional):
// flower = &lt;number&gt; (0 = yellow (default); 1 = red; 2 = green )

event_inherited();

respawn = true;

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 3;
category = "nature";

// Enemy specific code
actionTimer = -1;
state = 0;

imageOffset = 0; // Used for flower var

flower = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // Don't do anything until Mega Man approaches.
    if (actionTimer == -1)
    {
        if (instance_exists(target))
        {
            // I like collision rectangle the best for this.
            if (collision_rectangle(x - (16 * 5), y - view_hview[0], x + (16 * 5), y + view_hview[0], target, false, true))
            {
                actionTimer = 0;
                state = 1;
            }
        }
    } // Fire now lol
    else
    {
        actionTimer += 1;
        
        switch (state)
        {
            // Waiting
            case 0: // wait for a second before restoring flower 
                if (actionTimer == 95)
                {
                    imageOffset = 5;
                }
                else if (actionTimer == 100)
                {
                    imageOffset = 0;
                }
                else if (actionTimer == 145)
                {
                    actionTimer = -1; // Reset and wait for Mega Man to be in range again
                }
                break;
            
            // Shoot!
            case 1: // Do animation thing I guess 
                if (imageOffset &lt; 4)
                {
                    imageOffset += 0.5;
                }
                
                // Shoot when imageOffset == 4
                if (imageOffset == 4)
                {
                    state = 0;
                    actionTimer = 0;
                    var a = instance_create(x, y, objFlowerPresenterFlower);
                    a.col = flower;
                }
                break;
        }
    }
}
else if (dead)
{
    actionTimer = -1;
    imageOffset = 0;
    state = 0;
}

image_index = (6 * flower) + imageOffset; // Modify sprite based on set flower
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

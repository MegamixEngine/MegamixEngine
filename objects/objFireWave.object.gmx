<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFireWaveHorizontal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

blockCollision = 0;
grav = 0;
bubbleTimer = -1;

contactDamage = 3;
image_speed = 0.3;
reflectable = 0;

image_angle = 270;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !global.timeStopped)
{
    var d = instance_place(x, y, objFireWaveGoDirector);
    if (instance_exists(d))
    {
        if (image_angle != d.image_angle)
        {
            if (place_meeting(x - xspeed * 2, y - yspeed * 2, d))
            {
                shiftObject(d.x - x, d.y - y, 0);
                image_angle = d.image_angle;
            }
        }
    }
    
    xspeed = cos(degtorad(image_angle)) * 3;
    yspeed = -sin(degtorad(image_angle)) * 3;
    
    // special interaction
    with (objWaterShield)
    {
        if (place_meeting(x - other.xspeed, y - other.yspeed, other))
        {
            with (other)
            {
                instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
                instance_destroy();
            }
            playSFX(sfxEnemyHit);
            instance_create(x, y, objBubblePopEffect);
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead)
{
    if (image_angle == 90)
    {
        draw_sprite_ext(sprFireWaveVertical, -1, round(x), round(y), image_xscale, -image_yscale, 0, image_blend, image_alpha);
    }
    else if (image_angle == 270)
    {
        draw_sprite_ext(sprFireWaveVertical, -1, round(x), round(y), image_xscale, image_yscale, 0, image_blend, image_alpha);
    }
    else
    {
        draw_sprite_ext(sprite_index, -1, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

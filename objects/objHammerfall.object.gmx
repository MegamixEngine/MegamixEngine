<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHammerFall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// radius = &lt;number&gt; // the distance between where Hammerfall detects Mega Man. default is 32
event_inherited();
respawn = true;
healthpointsStart = 5;
healthpoints = healthpointsStart;
category = "aquatic, nature";
contactDamage = 4;
blockCollision = 0;
grav = 0;
facePlayerOnSpawn = true;

// Enemy specific code
startY = y;
delay = 0;

// AI variables
radius = 32;
activated = false;
falling = false;
imageOffset = 0;
cooldownMax = 40;
cooldownSmashed = 64;
cooldownTimer = cooldownMax - 8;
ground = false;
direct = 0;
col = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    // animation setup
    if (!ground &amp;&amp; delay == 0)
        image_index = 0;
    else
        image_index = 1;
    if ((activated == true || y &gt; startY) || ground)
        cooldownTimer += 1;
    if (instance_exists(target))
    {
        // basic AI, if Mega Man is within range, activate Hammerfall.
        if (abs(target.x - x) &lt;= radius)
            activated = true;
        else
            activated = false;
    }
    
    // when activated, Hammerfall falls if he's in his original position.
    if (activated == true &amp;&amp; y == startY &amp;&amp; cooldownTimer &gt;= cooldownMax)
        falling = true;
    
    // whilst falling, activate gavity collision and detect whether or not Hammerfall has hit the ground.
    if (falling == true)
    {
        blockCollision = 1;
        grav = gravAccel;
        if (yspeed &gt; 4)
            yspeed = 4;
        
        // if Hammerfall has hit the grund, create debris.
        if (ground == true)
        {
            falling = false;
            delay = cooldownSmashed;
            
            // despite running the loop 5 times, the third iteraion is skipped, so only 4 projectiles are created.
            for (var i = 0; i &lt; 5; i += 1)
            {
                if (i != 2)
                {
                    var inst;
                    inst = instance_create(x, y + 24, objNewShotmanBullet);
                    inst.grav = 0.25;
                    inst.xspeed = -1.25 + (0.625 * i);
                    inst.yspeed = -4;
                    inst.sprite_index = sprHammerfallProjectile;
                }
            }
            playSFX(sfxClamp);
        }
    }
    else
    {
        // if falling is false, turn off gravity and collision
        grav = 0;
        blockCollision = 0;
    }
    if (delay &gt; 0)
        delay -= 1;
    
    // reverse fall if falling is false. this does not require Hammerfall to be activated to work.
    if (falling == false &amp;&amp; y &gt; startY &amp;&amp; delay == 0)
    {
        yspeed -= 0.5;
        ground = false;
        if (yspeed &lt; -4)
            yspeed = -4;
    }
    
    // reset Hammerfall.
    if (y &lt;= startY)
    {
        y = startY;
        delay = 0;
        if (yspeed &lt; 0)
        {
            cooldownTimer = 0;
            yspeed = 0;
        }
        if (activated == false)
            cooldownTimer = cooldownMax - 8;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_index = 0;
cooldownTimer = cooldownMax - 8;
falling = false;
activated = false;
imageOffset = 0;
blockCollision = 0;
grav = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue(objJewelSatellite, 3);
specialDamageValue(objWheelCutter, 3);
specialDamageValue(objSlashClaw, 5);
specialDamageValue(objSakugarne, 3);
specialDamageValue(objSuperArrow, 3);
specialDamageValue(objWireAdapter, 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

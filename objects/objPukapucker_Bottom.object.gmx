<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriPukapucker_Bottom</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

facePlayerOnSpawn = true;

// Enemy specific code
moveTimer = 0;
directionStore = 0;

image_speed = 0.125;

moveDist = 64;

spawnHead = true;
spawnHeadReset = spawnHead;
init = 1;
bodyInstanceStore = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = 0;
    spawnHeadReset = spawnHead;
}

event_inherited();

if (entityCanStep())
{
    xSpeedTurnaround();
    
    if (xspeed == 0 &amp;&amp; yspeed == 0)
    {
        xspeed = 1 * image_xscale;
    }
    
    // turn round
    moveTimer += 1;
    if (moveTimer &gt;= moveDist)
    {
        xspeed = -xspeed;
        image_xscale = -image_xscale;
        directionStore = image_xscale;
        moveTimer = 0;
    }
    
    // if direction is different to direction store, reset move timer.
    if (image_xscale != directionStore)
    {
        directionStore = image_xscale;
        moveTimer = 0;
    }
    
    // if it walks off an edge, turn round.
    if (!ground)
    {
        xspeed = -xspeed;
        x += xspeed * 2;
        image_xscale = -image_xscale;
        directionStore = image_xscale;
        moveTimer = 0;
    }
    
    // spawn head
    if (spawnHead)
    {
        var inst;
        var headID;
        headID = id;
        inst = instance_create(x, y - 32, objPukapucker_Top);
        with (inst)
        {
            // attached head default values.
            respawn = false;
            bodyInstanceStore = headID;
        }
        spawnHead = false;
    }
}
else if (dead)
{
    xspeed = 0;
    yspeed = 0;
    image_index = 0;
    directionStore = image_xscale;
    moveTimer = 0;
    spawnHead = spawnHeadReset;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDada</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// It leaps two times, then jumps high into the air.
event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 2;

category = "cluster";

facePlayerOnSpawn = true;

// enemy specific
jumpCount = 0;

xspeed = 0;
yspeed = 0;

imgSpd = 0.4;
imgIndex = 0;
animBack = false;
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(xcoll!=0)
{
    xspeed=xcoll;
}

if (entityCanStep())
{
    if (ground)
    {
        jumpCount += 1;
        
        if (jumpCount == 1 || jumpCount == 2)
        {
            yspeed = -3.5;
        }
        
        if (jumpCount == 3)
        {
            jumpCount = 0;
            yspeed = -7;
            calibrateDirection(); // only faces the player on high jumps
        }
    }
    
    if (!animBack)
    {
        imgIndex += imgSpd;
        if (imgIndex &gt;= 4)
        {
            animBack = true;
            imgIndex = 2 - imgIndex mod 4;
        }
    }
    else
    {
        imgIndex -= imgSpd;
        if (imgIndex &lt; 0)
        {
            animBack = false;
            imgIndex = 1 - imgIndex; // minus because imgIndex would be negative, and we want to increase the value
        }
    }
    
    xspeed = 1.6 * image_xscale;
}
else if (dead)
{
    jumpCount = 0;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

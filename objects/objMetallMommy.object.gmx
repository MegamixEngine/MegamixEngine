<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMetallMommy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// col = &lt;number&gt; (0 = green (default); 1 = orange;)

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "mets";

facePlayer = true;

// Enemy specific code
radius = 78;
activated = false;

// Image variables
cooldownImageTimer = 0;
cooldownImageMax = 5;

preventFiring = 0;
preventFiringMax = 60;

hasFired = false;
imageOffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


if (entityCanStep())
{
    if (preventFiring)
    {
        preventFiring -= 1;
    }
    
    // basic AI, if Mega Man is within range, activate gun.
    if (instance_exists(target) &amp;&amp; !preventFiring)
    {
        if (!activated &amp;&amp; abs(target.x - x) &lt;= radius &amp;&amp; abs(target.y - y) &lt;= 4)
        {
            activated = true;
        }
    }
    
    // rest of events follow whilst gun is activated.
    if (activated)
    {
        cooldownImageTimer += 1;
        
        // animation timer setup;
        switch (imageOffset)
        {
            case 0:
                cooldownImageMax = 5;
                break;
            case 1:
                cooldownImageMax = 5;
                break;
            case 2:
                cooldownImageMax = 5;
                break;
            case 3:
                cooldownImageMax = 20;
                break;
        }
        
        if (cooldownImageTimer &gt;= cooldownImageMax)
        {
            cooldownImageTimer = 0;
            imageOffset += 1 - (hasFired * 2);
        }
        
        if (imageOffset == 3 &amp;&amp; !hasFired)
        {
            hasFired = true;
            var ID;
            ID = instance_create(x + image_xscale * 4,
                spriteGetYCenter() + 2, objMM2MetBullet);
            ID.dir = 45;
            ID.image_xscale = image_xscale;
            ID.sprite_index = sprEnemyBullet;
            ID = instance_create(x + image_xscale * 4,
                spriteGetYCenter() + 2, objMM2MetBullet);
            ID.dir = 0;
            ID.image_xscale = image_xscale;
            ID.sprite_index = sprEnemyBullet;
            ID = instance_create(x + image_xscale * 4,
                spriteGetYCenter() + 2, objMM2MetBullet);
            ID.dir = -45;
            ID.image_xscale = image_xscale;
            ID.sprite_index = sprEnemyBullet;
            //playSFX(sfxEnemyShoot);
        }
        if (imageOffset == 0 &amp;&amp; hasFired)
        {
            hasFired = false;
            activated = false;
            preventFiring = preventFiringMax;
        }
    }
}

image_index = imageOffset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

imageOffset = 0;
hasFired = false;
activated = false;
preventFiring = 0;
cooldownImageTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage tables
specialDamageValue(objHornetChaser, 1);
specialDamageValue(objGrabBuster, 2);
specialDamageValue(objTripleBlade, 1);
specialDamageValue(objWheelCutter, 2);
specialDamageValue(objSlashClaw, 2);
specialDamageValue(objSuperArrow, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// guard if helmet is down
if (image_index == 0)
{
    other.guardCancel = 1;
}
else
{
    // Stop charge shot (accurate to MM5)
    if (other.object_index == objBusterShotCharged)
    {
        with (other)
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

for (var i = -1; i &lt;= 1; i += 1)
{
    var MET = instance_create(spriteGetXCenter(), spriteGetYCenter(),
        objBabyMetall);
    MET.respawn = false;
    MET.xspeed = i * 0.25;
    MET.yspeed = -choose(2.5, 3, 3.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

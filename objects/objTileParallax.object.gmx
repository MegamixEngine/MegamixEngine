<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTileParallax</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///turns a tile layer into a parallax layer!
//allows you to design the far-off background around your level geometry,
//and should even work with all types of animated tiles

//does not work with collision. no using your illusion here.

//@cc affects tiles on these layers.
//note that all layers that one object affects will scroll at the same speed
layers = makeArray(-1);

//@cc parallax coefficients.
// 0 - 1: moves slower than camera, as if behind main layer
// 1: same as normal tile layer - why bother?
// &gt;1: moves faster than camera, as if in front of main layer
parallaxX = 16 / 14;
//@cc
parallaxY = 16 / 14;

//@cc if set to true, automatically repositions the tiles on room load so that 
//they appear in the level at approximately where they're placed in the editor.
//this function is incompatible with the autotiler.
//see the demo room for an example of how this works
autospace = false;



//don't modify these
xview_last = 0;
yview_last = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//automatically respace the tiles, if necessary
if (autospace)
{
    //offset so tiles are aligned for center screen instead of top-left corner
    var offx = -floor((global.screenWidth * 0.5 * parallaxX) - (global.screenWidth * 0.5));
    var offy = -floor((global.screenHeight * 0.5 * parallaxY) - (global.screenHeight * 0.5));
    //for each layer...
    for(var z = 0; z &lt; array_length_1d(layers); z++;)
    {
        //move all the tiles according to their current position &amp; parallax values
        tiles = tile_get_ids_at_depth(layers[z]);
        var tilecount = array_length_1d(tiles);
        for (var p = 0; p &lt; tilecount; p++)
        {
            tile_set_position(tiles[p], floor(tile_get_x(tiles[p]) * parallaxX) + offx, 
                floor(tile_get_y(tiles[p]) * parallaxY) + offy);
        }
    }
    //only autospace once
    autospace = false;
}


//shift the tile layers based on how much the camera moved this frame
var tpx = 1 - parallaxX;
var tpy = 1 - parallaxY;
for(var z = 0; z &lt; array_length_1d(layers); z++;)
    tile_layer_shift(layers[z], (view_xview - xview_last) * tpx, 
        (view_yview - yview_last) * tpy);
xview_last = view_xview;
yview_last = view_yview;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGrabBuster</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
blockCollision = 0;
grav = 0;
contactDamage = 2;
dir = 0;
stopOnFlash = false;

parent = noone;
phase = 0;
hasItem = noone;
hp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (!global.frozen)
{
    // Movement
    xspeed = cos(degtorad(dir)) * 4 * image_xscale;
    yspeed = -sin(degtorad(dir)) * 4;
    image_index += 0.25;
}
else if (!instance_exists(parent))
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Create pickup
var i = instance_create(bboxGetXCenter(), bbox_top - 2, objMercuryGrabBusterPickup);
                
with (other)
{
    // Check if the player has bolts or weapon energy to steal
    if ((global.bolts &gt; 0000) || (global.ammo &gt; 0))
    {
        hasItem = choose(0, 1, 2);
        
        // Steal bolts
        if (hasItem == 2)
        {
            if (global.bolts &gt;= 10)
            {
                // Choose between big or small bolt
                var z = choose(0, 1);
                
                // Take big Bolt
                if (z == 1)
                {
                    with (i)
                    {
                        sprite_index = sprBoltBig;
                        hp = 4;
                        
                        global.bolts -= 10;
                    }
                } // Take small bolt
                else
                {
                    with (i)
                    {
                        sprite_index = sprBoltSmall;
                        hp = 2;
                        global.bolts -= 2;
                    }
                }
            } // Take small Bolt if the player has less than 10 Bolts
            else if (global.bolts &gt; 0)
            {
                with (i)
                {
                    sprite_index = sprBoltSmall;
                    hp = 2;
                    global.bolts -= 2;
                }
            } // If no bolts, take health
            else
            {
                with (i)
                {
                    hp = 2;
                }
            }
        }
        // Steal Weapon energy
        else if (hasItem == 1)
        {
            // Choose random weapon to steal from
            var e = random(global.totalWeapons);
            {
                // Check if chosen weapon has ammo above 10
                if (global.ammo[e] &gt; 10)
                {
                    // Choose big or small energy
                    var z = choose(0, 1);
                    
                    // Take big energy
                    if (z == 1)
                    {
                        with (i)
                        {
                            if (global.pickupGraphics)
                            {
                                sprite_index = sprWeaponEnergyBigMM1;
                            }
                            else
                            {
                                sprite_index = sprWeaponEnergyBig;
                            }
                            hp = 4;
                            global.ammo[e] -= 10;
                        }
                    } // Take small energy
                    else
                    {
                        with (i)
                        {
                            if (global.pickupGraphics)
                            {
                                sprite_index = sprWeaponEnergySmallMM1;
                            }
                            else
                            {
                                sprite_index = sprWeaponEnergySmall;
                            }
                            hp = 2;
                            global.ammo[e] -= 2;
                        }
                    }
                } // Take small energy if big energy isn't available
                else if (global.ammo[e] &gt; 0)
                {
                    with (i)
                    {
                        if (global.pickupGraphics)
                        {
                            sprite_index = sprWeaponEnergySmallMM1;
                        }
                        else
                        {
                            sprite_index = sprWeaponEnergySmall;
                        }
                        hp = 2;
                        global.ammo[e] -= 2;
                    }
                } // Take health if no ammo
                else
                {
                    with (i)
                    {
                        hp = 2;
                    }
                }
            }
        } // Steal health
        else
        {
            with (i)
            {
                hp = 2;
            }
        }
    }
                    
    // If no bolts or ammo, take health
    with (i)
    {
        hp = 2;
    }
}
                
if (instance_exists(i))
{
    with (i)
    {
        xspeed = 1.25 * sign(other.xspeed);
        yspeed = -2;
        grav = 0.25;
        x += xspeed;
        parent = objMercuryGrabBuster.parent;
    }
}
                
// Destroy projectile to stop multiple items being stolen with one shot
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// I'm sick of multiple instances running simultaneous code that messes with the toxin
// effect. So I'm making a new object to handle the visual effect.
event_inherited();

drawTimer = 4;
parent = noone;
source = noone;
inkStatus = false; // Saves player's current ink status
gravOriginal = 1; // Saves current gravfactor
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(parent))
{
    with (parent)
    {
        inked = other.inkStatus; // Return to ink status before being slown down
        if (instance_exists(statusObject))
        {
            statusObject.statusChangedWalk = false;
            statusObject.statusChangedJump = false;
            gravfactor = other.gravOriginal;
        }
    }
}
with (objNibul)
{
    toxin = false;
    toxinTimer = toxinTimerMax;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.frozen)
{
    if (instance_exists(parent))
    {
        drawTimer--;
		if (drawTimer == 0)
		{
			if (parent.inked == false)
				parent.inked = true;
			else
				parent.inked = false;
			drawTimer = 4;
		}
		with (parent)
        {
            if (!instance_exists(statusObject))
            {
                statusObject = instance_create(x, y, objStatusEffect);
            }
            else
            {
                statusObject.statusWalkSpeed = 1.3 / 2;
                statusObject.statusChangedWalk = true;
                statusObject.statusJumpSpeed = 4.75 / 2;
                statusObject.statusChangedJump = true;
                gravfactor = 0.25;
                if (isHit)
                {
                    gravfactor = 1;
                }
            }
        }
    }
}
if (!instance_exists(parent)) || (global.switchingSections)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

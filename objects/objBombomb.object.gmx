<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBombomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// The original pit-dwelling enemy. Quite a bit different from the traditional one, though. It will
// pop out when Mega Man approaches AND it specifically is ready to pop out - the timer for this set as popDelay.
// When it pops out, it will shortly explode into four exploding shrapnel pieces that explode.

// One thing to note: An object called objBombombStopper will make this enemy explode on touch with that
// object, instead of the default arc. Use it if you want.

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;
contactStart = contactDamage;

grav = 0;

// Enemy specific code
phase = 1;

//@cc color. 0 = blue; 1 = red
col = 0; // 0 = blue, 1 = red
init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set color on spawn.
if (init)
{
    init = 0;
    switch (col)
    {
        case 0:
            sprite_index = sprBombomb;
            break;
        case 1:
            sprite_index = sprBombombRed;
            break;
    }
}

event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        case 1:
            if (target)
            {
                // Check if the target (nearest player) is close.
                if (collision_rectangle(x - 96, view_yview, x + 96, view_yview + view_hview, target, false, true))
                {
                    phase = 2;
                    yspeed = -7.5;
                    grav = 0.25;
                    
                    // Check for the custom stopper object.
                    var i = collision_rectangle(bbox_left + 1, y, bbox_right - 1, y - view_hview, objBombombStopper, false, false);
                    if (i)
                    {
                        yspeed = ySpeedAim(y, i.y, 0.25);
                    }
                }
            }
            break;
        case 2: // If it's starting to move downwards, explode. 
            if (yspeed &gt; 0 &amp;&amp; healthpoints &gt; 0)
            {
                dead = 1;
                with instance_create(x + 8, y + 8, objHarmfulExplosion)
                {
                    sprite_index = sprExplosion;
                }
                
                playSFX(sfxClassicExplosion);
                repeat (2)
                {
                    image_xscale *= -1;
                    var i = instance_create(x + 8, bboxGetYCenter(), objShrapnel);
                    i.xspeed = 1.5 * image_xscale;
                    i.yspeed = -3.8;
                    if (col == 1)
                    {
                        i.sprite_index = sprBombombShrapnelRed;
                    }
                    i = instance_create(x + 8, bboxGetYCenter(), objShrapnel);
                    i.xspeed = 2.5 * image_xscale;
                    i.yspeed = -3.5;
                    if (col == 1)
                    {
                        i.sprite_index = sprBombombShrapnelRed;
                    }
                }
            }
            break;
    }
}

visible = (phase &gt; 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

grav = 0;
phase = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This enemy is invincible, so just do this to reflect bullets.
other.guardCancel = 2;//3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;

instance_create(bboxGetXCenter(), bboxGetYCenter(), objHarmfulExplosion);
playSFX(sfxMM3Explode);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

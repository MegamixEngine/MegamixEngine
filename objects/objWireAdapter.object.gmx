<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWireAdapter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 3;
inWater = -1;

image_speed = 0.15;

penetrate = 1;
pierces = 2;

xspeed = 0;
grav = 0;

despawnRange = -1;

phase = 1;
resetSpriteChange = 0;

xx = -4;
ys = 0;

playSFX(sfxWire);
sfxloop = 0;
alarm[0] = 12;

wireLock = false;
parent.xspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(parent))
{
    lockPoolRelease(wireLock);
}

audio_stop_sound(sfxWire);
alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSFX(sfxWire);
alarm[0] = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// update sprites for wire
if (instance_exists(parent))
{
    with (parent)
    {
        playerHandleSprites("Wire");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (!instance_exists(parent))
    {
        instance_destroy();
        exit;
    }
    
    if (parent.isHit)
    {
        with (parent)
        {
            xspeed = image_xscale * -0.5;
        }
        instance_destroy();
        visible = 0;
        exit;
    }
    
    x = parent.x + xx * image_xscale;
    parent.xspeed = 0;
    gravDir = sign(parent.grav);
    
    if(phase==-1)
    {
        if(place_meeting(x,y,parent))
        {
            instance_destroy();
            exit;   
        }
    }
    else if (phase == 1)
    {
        if (checkSolid(0, -1 * gravDir))
        {
            yspeed = 0;
            image_speed = 0;
            image_index = 0;
            phase = 2;
            parent.isShoot = 0;
            y -= 1;
        }
        
        if (y &lt; view_yview + 8 &amp;&amp; gravDir == 1)
        {
            yspeed = 4;
        }
        if (y &gt; view_yview + view_hview - 8 &amp;&amp; gravDir == -1)
        {
            yspeed = -4;
        }
        if( (yspeed&gt;0 &amp;&amp; bbox_top&gt;view_yview+view_hview) 
            || (yspeed &lt; 0 &amp;&amp; bbox_bottom&lt;view_yview))
        {
            yspeed*=-1;
            y=yprevious;
            phase = -1;
        }
        
        if ((gravDir == 1 &amp;&amp; y &gt; parent.y + ys)
            || (gravDir == -1 &amp;&amp; y &lt; parent.y - ys))
        {
            instance_destroy();
            visible = 0;
        }
    }
    else
    {
        if (phase == 2)
        {
            with (parent)
            {
                other.parent.yspeed = -4 * gravDir;
                if (place_meeting(x, y - 4, other.id))
                {
                    other.parent.yspeed = 0;
                    other.phase = 3;
                    y = other.y + 9 * gravDir;
                    audio_stop_sound(sfxWire);
                    other.alarm[0] = -1;
                    
                    // other.resetSpriteChange = canSpriteChange;
                    // canSpriteChange = 0;
                    ground = 0;
                    
                    // playerHandleSprites('Normal');
                }
            }
        }
        
        if (phase &gt;= 2)
        {
            if (global.keyJumpPressed[parent.playerID])
            {
                parent.yspeed = -1 * gravDir;
                instance_destroy();
            }
            else
            {
                with (parent)
                {
                    playerHandleShoot();
                    if (isShoot)
                    {
                        shootTimer -= 1;
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xOffset, yOffset, bulletObject, bulletLimit, weaponCost, action, willStop;

xOffset = -3; // x offset from center of player
yOffset = -8; // y offset from center of player
bulletObject = objWireAdapter;
bulletLimit = 0;
weaponCost = 2;
action = 1; // 0 - no frame; 1 - shoot; 2 - throw
willStop = 0; // If this is 1, the player will halt on shooting ala Metal Blade.

if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    if (!instance_exists(vehicle))
    {
        if (!instance_exists(bulletObject))
        {
            if (!climbing &amp;&amp; ground
                &amp;&amp; ((global.keyUp[playerID] &amp;&amp; sign(grav) &gt;= 0)
                || (global.keyDown[playerID] &amp;&amp; sign(grav) &lt; 0)))
            {
                var i = fireWeapon(xOffset, yOffset, bulletObject, bulletLimit, weaponCost, action, willStop);
                if (instance_exists(i))
                {
                    i.yspeed = -4 * image_yscale;
                    
                    i.wireLock = lockPoolLock(
                        localPlayerLock[PL_LOCK_MOVE],
                        localPlayerLock[PL_LOCK_JUMP],
                        localPlayerLock[PL_LOCK_GRAVITY],
                        localPlayerLock[PL_LOCK_CLIMB],
                        localPlayerLock[PL_LOCK_TURN],
                        localPlayerLock[PL_LOCK_SLIDE]);
                    
                    i.ys = y - i.y;
                }
            }
        }
        else
        {
            // buster shot
            if (objWireAdapter.phase &gt;= 2)
            {
                var i = fireWeapon(16, 0, objBusterShot, 4, 0, 1, 0);
                if (i)
                {
                    i.xspeed = image_xscale * 5;
                }
            }
        }
    }
}

// Looking Up Animation
if (!isShoot)
{
    if ((global.keyUp[playerID] &amp;&amp; gravDir &gt;= 0)
        || (global.keyDown[playerID] &amp;&amp; gravDir &lt; 0))
    {
        spriteY = 7;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set special damage values
specialDamageValue("flying", 6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Mega Man's palette
weaponSetup("WIRE ADAPTOR", make_color_rgb(216, 40, 0), make_color_rgb(255, 255, 255), sprWeaponIconsWire);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, objExplosion);
playSFX(sfxReflect);

event_user(EV_DEATH);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawSelf();

if (phase == 3)
{
    exit;
}

if (!instance_exists(parent))
{
    instance_destroy();
    exit;
}

gravDir = parent.gravDir;
image_yscale = gravDir;

var wireLength = (floor(((parent.y - 6 * parent.image_yscale) - y) / 4))
    * gravDir;
var wireimg = 1;
if (image_xscale == -1)
{
    wireimg = 3;
}
if (phase == 2)
{
    wireimg = 4;
}

for (var i = 0; i &lt;= wireLength; i += 1)
{
    if (phase == 1)
    {
        wireimg += 1;
        if (wireimg == 4)
        {
            wireimg = 0;
        }
    }
    draw_sprite_ext(sprWireAdapterWire, wireimg, x,
        y + i * 4 * gravDir, 1, gravDir, image_angle,
        image_blend, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMonoRoader</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// col 0 = Blue, Red, Pink, Green

event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "grounded, shielded, semi bulky";

// Enemy specific code
inShell = false;
shellTimer = 0;
animTimer = 0;
waitTimer = 10;
xs = 0;

col = 0;
init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = 0;
    switch (col)
    {
        case 0:
            sprite_index = sprMonoRoader;
            break;
        case 1:
            sprite_index = sprMonoRoaderRed;
            break;
        case 2:
            sprite_index = sprMonoRoaderPink;
            break;
        case 3:
            sprite_index = sprMonoRoaderGreen;
            break;
    }
}

event_inherited();

if (entityCanStep())
{
    if (xcoll != 0)
    {
        image_xscale = -sign(xcoll);
    }
    
    // Animation
    if (animTimer != -1)
    {
        animTimer += 1;
    }
    if (inShell)
    {
        if (animTimer &gt;= 4)
        {
            animTimer = 0;
            image_index += 1;
            if (image_index &gt; 11)
            {
                image_index = 6;
            }
        }
    }
    else
    {
        if (animTimer &gt;= 6)//8
        {
            animTimer = 0;
            image_index += 1;
            if (image_index &gt; 5)
            {
                image_index = 0;
            }
        }
    }
    
    // Set xspeed
    if (xspeed == 0 &amp;&amp; !inShell)
    {
        xs = 1;
    }
    // Check for Mega Man
    if (instance_exists(target))
    {
        if (abs(target.x - x) &lt; 48 &amp;&amp; !inShell &amp;&amp; ground)
        {
            inShell = true;
            animTimer = -1;
            xs = 0;
        }
    }
    if (inShell)
    {
        if (ground)
        {
            shellTimer += 1;
        }
        switch (shellTimer)
        {
            case 16:
                calibrateDirection();
                xs = 2;
                image_index = 6;
                animTimer = 0;
                break;
            case 48:
                xs = 0;
                break;
            case 80:
                xs = -2;
                break;
            case 112:
                xs = 0;
                xspeed = 0;
                inShell = false;
                shellTimer = 0;
                image_index = 0;
                break;
        }
    }
    // Move if on ground
    if (!ground)
    {
        xspeed = 0;
    }
    else
    {
        xspeed = xs * image_xscale;
    }
}
else
{
    image_speed = 0;
    animTimer = 0;
    inShell = false;
    shellTimer = 0;
    if (dead)
    {
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inShell)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

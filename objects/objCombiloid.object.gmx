<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCombiloidMain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtMiniBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// image_xscale = 1 or -1 //(Use editor for this!!) determines starting direction of mini boss.

event_inherited();
respawn = true;
introSprite = sprCombiloidTeleport;
healthpointsStart = 35;
healthpoints = healthpointsStart;
contactDamage = 4;
blockCollision = 1;
grav = 0.15 * image_yscale;
facePlayerOnSpawn = true;
category = "bulky, shielded";

// Enemy specific code
image_speed = 0;
image_index = 0;
storeXScale = 0;
phase = 0;

attackTimer = 0;
attackTimerMax = 40;
findPartner = false;

wireY = 0;
xMin = x - 256;
xMax = x + 256;
dir = 0;

partner = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!findPartner)
{
    partner = instance_nearest(x, y, objCombiloidBuddy);
    with (partner)
    {
        partner = other.id;
    }
    findPartner = true;
}


event_inherited();
if (entityCanStep()
    &amp;&amp; introTimer &lt;= 0)
{
    dir = image_xscale;
    
    if (storeXScale == 0)
    {
        if (instance_exists(target)) // since minibosses usually only face one direction, here we set the direction of Combiloid
            image_xscale = sign(x - target.x) * -1;
        storeXScale = image_xscale;
    }
    
    attackTimer += 1;
    switch (phase)
    {
        case 0: // wait for refill 
            if (instance_exists(partner))
            {
                xMax = partner.xMax;
                xMin = partner.xMin;
                with (partner)
                {
                    phase = 3;
                    if (x &gt;= other.x - 2 &amp;&amp; x &lt;= other.x + 2)
                    {
                        xspeed = 0;
                        other.phase = 1;
                        playSFX(sfxAbsorb);
                    }
                    else if (x &gt; other.x)
                    {
                        xspeed = -1;
                    }
                    else if (x &lt; other.x)
                    {
                        xspeed = 1;
                    }
                }
            }
            else
            {
                if (attackTimer &gt;= 64)
                {
                    attackTimer = 0;
                    phase = 3;
                }
            }
            break;
        case 1: // refill 
            if (attackTimer &gt;= 4 &amp;&amp; wireY &lt; (abs((round(y - partner.y)) / 8)))
            {
                attackTimer = 0;
                wireY++;
            }
            if (attackTimer &gt;= 32)
            {
                attackTimer = 0;
                phase = 2;
            }
            break;
        case 2: // refill lower 
            if (attackTimer &gt;= 4 &amp;&amp; wireY &gt; 0)
            {
                attackTimer = 0;
                wireY--;
            }
            if (wireY == 0)
            {
                attackTimer = 0;
                phase = 3;
            }
            break;
        case 3: // move across screen 
            with (partner)
            {
                phase = 0;
                attackTimer = 0;
            }
            if (image_index &lt; 2)
            {
                if (xspeed == 0)
                {
                    attackTimer = 0;
                }
                image_index += 0.05;
            }
            if (image_index &gt;= 2)
            {
                image_index = 2 + (attackTimer / 6) mod 2;
                xspeed = 1.25 * image_xscale;
            }
            if (attackTimer &gt;= 48)
            {
                playSFX(sfxEnemyShoot);
                var inst = instance_create(x + 8, y, objCombiloidProjectile);
                inst.sprite_index = sprCombiloidBullet2;
                inst.dir = 0;
                inst.image_xscale = 1;
                inst.spd = 2.5;
                inst = instance_create(x - 8, y, objCombiloidProjectile);
                inst.sprite_index = sprCombiloidBullet2;
                inst.dir = 0;
                inst.image_xscale = -1;
                inst.spd = 2.5;
                attackTimer = 0;
            }
            var foundSolid = true;
            mask_index = mskCombiDetector;
            if (!checkSolid((32 * image_xscale), 16 * image_yscale))
            {
                foundSolid = false;
            }
            mask_index = sprite_index;
            if (xcoll != 0 || image_xscale == 1 &amp;&amp; (x &gt;= view_xview + view_wview - 36 || x &gt;= xMax)
                || image_xscale == -1 &amp;&amp; (x &lt;= view_xview + 36 || x &lt;= xMin)
                || !foundSolid) // detect wall, maximum boundary, of it theres a floor.
            {
                image_xscale *= -1;
                image_index = 3;
                xspeed = 0;
                phase = 4;
            }
            break;
        case 4: // wait for partner 
            if (image_index &gt; 0)
            {
                image_index -= 0.05;
            }
            else
            {
                if (!instance_exists(partner))
                {
                    phase = 0;
                }
            }
            break;
    }
}
else if (!insideView())
{
    image_index = 0;
    y = ystart;
    x = xstart;
    if (instance_exists(target) &amp;&amp; !dead)
    {
        image_xscale = sign(x - target.x) * -1;
    }
    attackTimer = 0;
    phase = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index &gt;= 2 || (image_yscale == 1 &amp;&amp; !(bboxGetYCenterObject(other.id) &lt; y - 12))
    ||
    (image_yscale == -1 &amp;&amp; !(bboxGetYCenterObject(other.id) &gt; y + 12)))
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facePlayerOnSpawn = false;
with (partner)
{
    event_user(EV_DEATH);
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(partner))
{
    var ySeRe = sign(y - partner.y);
    
    for (var i = 0; i &lt; wireY; i++)
    {
        draw_sprite(sprCombiloidWire, 0, x, y - (i * 8) * ySeRe);
    }
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

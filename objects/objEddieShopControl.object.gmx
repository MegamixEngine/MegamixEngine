<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inShop = -1;

image_speed = 0.05;

option = 1;



optionTableX[1] = 1328;
optionTableY[1] = 256;
optionTableName[1] = "E-Tank";
optionTableDescription[1] = "A one-time use item that restores your whole health bar in one fell swoop! Use it in the pause screen.";

optionTableImageInStock[1] = sprETank;
optionTableImageIndexInStock[1] = 0;
optionTableImageBought[1] = sprETankGrey;
optionTableImageIndexBought[1] = 0;

optionTableX[2] = 1328 + 48;
optionTableY[2] = 256;
optionTableName[2] = "M-Tank";
optionTableDescription[2] = "A rare variation of the E-Tank that recovers not only all health, but all weapon energy! You can only own one at a time.";

optionTableImageInStock[2] = sprMTank;
optionTableImageIndexInStock[2] = 0;
optionTableImageBought[2] = sprMTankGrey;
optionTableImageIndexBought[2] = 0;

optionTableX[3] = 1328 + 48 + 48;
optionTableY[3] = 256;
optionTableName[3] = "Charged Buster Upgrade";
optionTableDescription[3] = "Makes charge shots larger and more powerful!";

optionTableImageInStock[3] = sprUpgrades;
optionTableImageIndexInStock[3] = 1;
optionTableImageBought[3] = sprUpgradesGrey;
optionTableImageIndexBought[3] = 1;

optionTableX[4] = 1328 + 48 + 48 + 48;
optionTableY[4] = 256;
optionTableName[4] = "Drop Rate Upgrade";
optionTableDescription[4] = "Increases the chances that enemies will drop items.";

optionTableImageInStock[4] = sprUpgrades;
optionTableImageIndexInStock[4] = 2;
optionTableImageBought[4] = sprUpgradesGrey;
optionTableImageIndexBought[4] = 2;

optionTableX[5] = 1328;
optionTableY[5] = 256 + 32;
optionTableName[5] = "Uncharged Buster Upgrade";
optionTableDescription[5] = "Removes the 3 shot limit for the Mega Buster, allowing you to have as many on the screen as you can fire!";

optionTableImageInStock[5] = sprUpgrades;
optionTableImageIndexInStock[5] = 3;
optionTableImageBought[5] = sprUpgradesGrey;
optionTableImageIndexBought[5] = 3;

optionTableX[6] = 1328 + 48;
optionTableY[6] = 256 + 32;
optionTableName[6] = "Skull Amulet";
optionTableDescription[6] = "If you are dealt a fatal blow by an enemy while having more than one health, you will be left with one health instead of dying.";

optionTableImageInStock[6] = sprUpgrades;
optionTableImageIndexInStock[6] = 4;
optionTableImageBought[6] = sprUpgradesGrey;
optionTableImageIndexBought[6] = 4;

optionTableX[7] = 1328 + 48 + 48;
optionTableY[7] = 256 + 32;
optionTableName[7] = "Met's Helmet";
optionTableDescription[7] = "Knockback is drastically reduced, and hit invincibility is slightly extended.";

optionTableImageInStock[7] = sprUpgrades;
optionTableImageIndexInStock[7] = 5;
optionTableImageBought[7] = sprUpgradesGrey;
optionTableImageIndexBought[7] = 5;

optionTableX[8] = 1328 + 48 + 48 + 48;
optionTableY[8] = 256 + 32;
optionTableName[8] = "Converter";
optionTableDescription[8] = "At full health, health drops are replaced by ammo, and at full ammo, ammo drops are replaced by health. Bolts drop when full on both.";

optionTableImageInStock[8] = sprUpgrades;
optionTableImageIndexInStock[8] = 6;
optionTableImageBought[8] = sprUpgradesGrey;
optionTableImageIndexBought[8] = 6;

optionTableVariable[1] = global.eTanks;
optionTableVariable[2] = global.mTanks;
optionTableVariable[3] = global.chargeUpgrade;
optionTableVariable[4] = global.dropUpgrade;
optionTableVariable[5] = global.shotUpgrade;
optionTableVariable[6] = global.skullAmulet;
optionTableVariable[7] = global.sturdyHelmet;
optionTableVariable[8] = global.converter;

priceTable[1] = 50;
priceTable[2] = 100;
priceTable[3] = 900;
priceTable[4] = 450;
priceTable[5] = 150;
priceTable[6] = 250;
priceTable[7] = 600;
priceTable[8] = 200;

cursorImageTimer = 0;
cursorImageIndex = 0;

myBolts = global.bolts;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.frozen &amp;&amp; insideView())
{
    optionTableVariable[1] = global.eTanks;
    optionTableVariable[2] = global.mTanks;
    optionTableVariable[3] = global.chargeUpgrade;
    optionTableVariable[4] = global.dropUpgrade;
    optionTableVariable[5] = global.shotUpgrade;
    optionTableVariable[6] = global.skullAmulet;
    optionTableVariable[7] = global.sturdyHelmet;
    optionTableVariable[8] = global.converter;
    
    
    /* if inShop == -1 and !instance_exists(objTextbox)
    {
        playerLockMovement(); 
        event_user(0);
        with objMegaman
            playerFanOut(-12,100);
    }*/
    
    if (inShop)
    {
        // playerLockMovement();
        
        // update the textbox
        objTextbox.name = optionTableName[option];
        objTextbox.itext = optionTableDescription[option];
        objTextbox.textlength = 777;
        
        // cursor animation
        cursorImageTimer += 1;
        if (cursorImageTimer &gt;= 5)
        {
            cursorImageTimer = 0;
            cursorImageIndex += 1;
            if (cursorImageIndex &gt; 3)
            {
                cursorImageIndex = 0;
            }
        }
        
        // exiting
        if (global.keyShootPressed)
        {
            inShop = false;
            with (objTextbox)
            {
                ds_list_delete(text, 0);
                if (!ds_list_empty(text))
                {
                    itext = ds_list_find_value(text, 0);
                    alarm[1] = 4;
                    playSFX(sfxTextBox);
                }
                else
                {
                    alarm[0] = 2;
                    dir = -1;
                    showtext = 0;
                }
                textlength = 0;
                canincrease = 0;
                skipbuffer = 0;
            }
            spawnTextBox(2, -1, "Dr. Light",
                "Come back soon!",
                -1);
        }
        
        // selecting
        if (global.keyJumpPressed)
        {
            if (option == 1)
            {
                if (global.eTanks &lt; 9 &amp;&amp; global.bolts &gt;= priceTable[1])
                {
                    global.eTanks += 1;
                    playSFX(sfxMenuSelect);
                    global.bolts -= priceTable[1];
                }
                else
                {
                    playSFX(sfxError);
                }
            }
            else
            {
                if (optionTableVariable[option] == false &amp;&amp; global.bolts &gt;= priceTable[option])
                {
                    playSFX(sfxMenuSelect);
                    global.bolts -= priceTable[option];
                    switch (option)
                    {
                        case 2:
                            global.mTanks += 1;
                            break;
                        case 3:
                            global.chargeUpgrade = 1;
                            break;
                        case 4:
                            global.dropUpgrade = 1;
                            break;
                        case 5:
                            global.shotUpgrade = 1;
                            break;
                        case 6:
                            global.skullAmulet = 1;
                            break;
                        case 7:
                            global.sturdyHelmet = 1;
                            break;
                        case 8:
                            global.converter = 1;
                            break;
                    }
                    
                    if (global.chargeUpgrade &amp;&amp; global.dropUpgrade &amp;&amp; global.shotUpgrade &amp;&amp; global.skullAmulet &amp;&amp; global.sturdyHelmet &amp;&amp; global.converter)
                    {
                        if (!global.costumeRequirement[16])
                        {
                            i = instance_create(objMegaman.x, objMegaman.y, objNotificationBox_betasword);
                            i.unlocktext = "New costume available!";
                            playSFX(sfxUnlocked);
                            global.costumeRequirement[16] = true;
                        }
                    }
                }
                else if (optionTableVariable[option] == true)
                {
                    // upgrade disabling
                    if (option &gt;= 3)
                    {
                        switch (option)
                        {
                            case 3:
                                global.disableChargeUpgrade = !global.disableChargeUpgrade;
                                if (global.disableChargeUpgrade)
                                {
                                    playSFX(sfxLargeClamp);
                                }
                                else
                                {
                                    playSFX(sfxUnlocked);
                                }
                                break;
                            case 4:
                                global.disableDropUpgrade = !global.disableDropUpgrade;
                                if (global.disableDropUpgrade)
                                {
                                    playSFX(sfxLargeClamp);
                                }
                                else
                                {
                                    playSFX(sfxUnlocked);
                                }
                                break;
                            case 5:
                                global.disableShotUpgrade = !global.disableShotUpgrade;
                                if (global.disableShotUpgrade)
                                {
                                    playSFX(sfxLargeClamp);
                                }
                                else
                                {
                                    playSFX(sfxUnlocked);
                                }
                                break;
                            case 6:
                                global.disableSkullAmulet = !global.disableSkullAmulet;
                                if (global.disableSkullAmulet)
                                {
                                    playSFX(sfxLargeClamp);
                                }
                                else
                                {
                                    playSFX(sfxUnlocked);
                                }
                                break;
                            case 7:
                                global.disableSturdyHelmet = !global.disableSturdyHelmet;
                                if (global.disableSturdyHelmet)
                                {
                                    playSFX(sfxLargeClamp);
                                }
                                else
                                {
                                    playSFX(sfxUnlocked);
                                }
                                break;
                            case 8:
                                global.disableConverter = !global.disableConverter;
                                if (global.disableConverter)
                                {
                                    playSFX(sfxLargeClamp);
                                }
                                else
                                {
                                    playSFX(sfxUnlocked);
                                }
                                break;
                        }
                    }
                    else
                    {
                        playSFX(sfxError);
                    }
                }
            }
        }
        
        // moving around
        if (global.keyLeftPressed || global.keyRightPressed || global.keyUpPressed || global.keyDownPressed)
        {
            playSFX(sfxMenuMove);
            if (global.keyUpPressed || global.keyDownPressed)
            {
                switch (option)
                {
                    case 1:
                        option = 5;
                        break;
                    case 2:
                        option = 6;
                        break;
                    case 3:
                        option = 7;
                        break;
                    case 4:
                        option = 8;
                        break;
                    case 5:
                        option = 1;
                        break;
                    case 6:
                        option = 2;
                        break;
                    case 7:
                        option = 3;
                        break;
                    case 8:
                        option = 4;
                        break;
                }
            }
            
            if (global.keyLeftPressed)
            {
                switch (option)
                {
                    case 1:
                        option = 4;
                        break;
                    case 2:
                        option = 1;
                        break;
                    case 3:
                        option = 2;
                        break;
                    case 4:
                        option = 3;
                        break;
                    case 5:
                        option = 8;
                        break;
                    case 6:
                        option = 5;
                        break;
                    case 7:
                        option = 6;
                        break;
                    case 8:
                        option = 7;
                        break;
                }
            }
            
            if (global.keyRightPressed)
            {
                switch (option)
                {
                    case 1:
                        option = 2;
                        break;
                    case 2:
                        option = 3;
                        break;
                    case 3:
                        option = 4;
                        break;
                    case 4:
                        option = 1;
                        break;
                    case 5:
                        option = 6;
                        break;
                    case 6:
                        option = 7;
                        break;
                    case 7:
                        option = 8;
                        break;
                    case 8:
                        option = 5;
                        break;
                }
            }
        }
    }
    else
    {
        /* if !instance_exists(objTextbox) and objMegaman.canMove == false and !instance_exists(objWireAdapter)
        { 
            
        } */
    }
}

if (!insideView())
{
    myBolts = global.bolts;
    inShop = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// playerFreeMovement();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inShop = true;
spawnTextBox(2, 2, optionTableName[option],
    optionTableDescription[option],
    -1);
with (objTextbox)
{
    specialShop = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.energyElements == 0)
{
    spawnTextBox(2, -1, "Dr. Light",
        "Mega Man, welcome back! Using bolts, I can create several#items that may prove useful!",
        -1);
    exit;
}

/* if global.energyElements &gt; 0 and !global.eddieisdead
{
    if global.bolts == 0
    {
        Spawntextbox(0,1,"Eddie",
        "Hey, Mega Man") + "!...Wait, why are you here? You have no money. I mean, I guess you can just... look at my items.",-1
        );
        exit;
    }
    else if global.bolts &gt; 0 and global.bolts &lt;= 600
    {
        Spawntextbox(0,1,"Eddie",
        "Welcome back, " + subs("[address party]") + "! Buy whatever you can!",-1
        );
        exit;
    }
    else if global.bolts &gt; 600 and global.bolts &lt;= 999
    {
        Spawntextbox(0,1,"Eddie",
        "Welcome back, " + subs("[address party]") + "! I see you've amassed a lot of cash. Buy whatever you want!",-1
        );
        exit;
    }
    else if (global.bolts &gt;= 1000 &amp;&amp; global.bolts &lt;= 9998)
    {
        Spawntextbox(0, 1, "Eddie",
        "Welcome back, " +subs("[address party]") + "! Boy, you really get around! Your bolts are in the thousands!", -1
        );
        exit;
    }
    else if global.bolts == 9999
    {
        Spawntextbox(0,1,"Eddie",
        "Welcome back, " + subs("[address party]") + "! GEEZE!!! How did you get max bolts?!?! You're /1CRAZY!!!",-1
        );
        exit;
    }
}
else
{
    if global.eddieisdead
    {
        Spawntextbox(0,1,"Eddie",
        "I know what you did.",
        "I will revive myself out of generosity. But beware.",-1
        );
        global.eddieisdead = false;
        saveorload('save',0);
        if global.currentsavefile &gt; 0
        {
            saveorload('save',global.currentsavefile);
        }
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// It's ya girl, Pyro! Wanna see what lazy coding in human form looks like?

draw_self();

draw_set_font(global.font);
draw_set_color(c_white);
draw_set_halign(fa_center);

draw_sprite(sprLargeBolt, 0, 1311, 322);
var v = string(myBolts);
repeat (4 - string_length(v))
{
    v = "0" + v;
}
draw_text(1312 + 33, 324 + 5, v);

if (myBolts &gt; global.bolts)
{
    myBolts -= 2;
}
if (myBolts &lt;= global.bolts)
{
    myBolts = global.bolts;
}

if (inShop)
{
    // row 1 images + prices
    if (global.eTanks &gt;= 9)
    {
        draw_sprite_ext(sprETankGrey, 0, optionTableX[1], optionTableY[1], 1, 1, 0, c_white, 1);
        draw_text(optionTableX[1] + 8, optionTableY[1] + 16 + 4, "SOLD");
    }
    else
    {
        draw_sprite_ext(sprETank, 0, optionTableX[1], optionTableY[1], 1, 1, 0, c_white, 1);
        draw_text(optionTableX[1] + 8, optionTableY[1] + 16 + 4, string(priceTable[1]));
    }
    
    for (var i = 2; i &lt;= 8; i += 1)
    {
        if (optionTableVariable[i] &gt;= 1)
        {
            draw_sprite_ext(optionTableImageBought[i], optionTableImageIndexBought[i], optionTableX[i], optionTableY[i], 1, 1, 0, c_white, 1);
            draw_text(optionTableX[i] + 8, optionTableY[i] + 16 + 4, "SOLD");
            
            if ((i == 3 &amp;&amp; global.disableChargeUpgrade) || (i == 4 &amp;&amp; global.disableDropUpgrade) || (i == 5 &amp;&amp; global.disableShotUpgrade)
                || (i == 6 &amp;&amp; global.disableSkullAmulet) || (i == 7 &amp;&amp; global.disableSturdyHelmet) || (i == 8 &amp;&amp; global.disableConverter))
            {
                draw_sprite_ext(sprUpgrades, 8, optionTableX[i], optionTableY[i], 1, 1, 0, c_white, 1);
            }
        }
        else
        {
            draw_sprite_ext(optionTableImageInStock[i], optionTableImageIndexInStock[i], optionTableX[i], optionTableY[i], 1, 1, 0, c_white, 1);
            draw_text(optionTableX[i] + 8, optionTableY[i] + 16 + 4, string(priceTable[i]));
        }
    }
    
    // cursor
    draw_sprite_ext(sprShopCursor, cursorImageIndex, optionTableX[option], optionTableY[option], 1, 1, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBrownContainer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "rocky";

grav = 0;

facePlayer = true;

// Enemy specific code
phase = 0;
timer = 0;
container = noone;

imgSpd = 0.3;
imgIndex = 0;

// set to real sprite
sprite_index = sprBrownHead;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
    
// needs to be done even if this is frozen
if (container != noone &amp;&amp; !global.frozen &amp;&amp; !dead &amp;&amp; instance_exists(target))
{
    if (!instance_exists(container))
    {
        dead = true;
    }
}

if (image_index == 0)
{
    canDamage = false;
    canHit = false;
}
else
{
    canDamage = true;
    canHit = true;
}

if (entityCanStep())
{
    switch (phase)
    {
        // start facing the player
        case 0:
            container = instance_create(x, y, objBrownContainer); // this is so the enemy can have seperate hitboxes
            phase = 1;
            break;
        
        // shooting
        case 1:
            timer -= 1;
            if (timer &lt;= 0)
            {
                timer = 80; // &lt;-- time between shots here
                
                if (instance_exists(target))
                {
                    var bullet = instance_create(x, y - 14, objEnemyBullet);
                    bullet.contactDamage = 3;
                    bullet.grav = 0.11;
                    bullet.image_xscale = image_xscale;
                    bullet.yspeed = -3;
                    bullet.sprite_index = sprEnemyBulletMM6;
                    
                    with (bullet)
                    {
                        xspeed = xSpeedAim(x, y, target.x, target.y, yspeed, grav);
                    }
                    
                    playSFX(sfxEnemyDrop);
                }
            }
            if (container.wasHit || place_meeting(x, y, objMegaman))
            {
                phase = 2;
                timer = 0;
                container.animate = false;
            }
            break;
        
        // pop up
        case 2:
            if (imgIndex &lt; 4)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 5)
                {
                    imgIndex = 4;
                }
            }
            else
            {
                timer += 1;
                if (timer &gt;= 60)
                {
                    // &lt;-- time staying unhiden here
                    phase = 3;
                    timer = 0;
                }
            }
            break;
        
        // go back down
        case 3:
            imgIndex -= imgSpd;
            if (imgIndex div 1 == 0)
            {
                phase = 1;
                imgIndex = 0;
                container.animate = true;
            }
            break;
    }
}
else
{
    if (dead == true)
    {
        phase = 0;
        imgIndex = 0;
        timer = 0;
        
        if (instance_exists(container))
        {
            with (container)
            {
                instance_destroy();
            }
        }
        container = noone;
    }
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

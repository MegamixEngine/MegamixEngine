<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSakugarne</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>mskMegaman</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 4;

penetrate = 3;
pierces = 2;

blockCollision = 1;
grav = gravAccel;

canDamage = false;

// Enemy specific
active = false;

bounce = 3;

riderPhysicsAllowed = false;
weaponsAllowed = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (active)
{
    if (instance_exists(parent))
    {
        parent.vehicle = noone;
        physicsLock = lockPoolRelease(physicsLock);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Update sprites of rider if they're on it
if (active)
{
    with (parent)
    {
        playerHandleSprites("Sakugarne" + string(other.image_index));
        vehicle = other.id;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (!active) // Mount Sakugarne
    {
        with (parent)
        {
            if (!isSlide &amp;&amp; !climbing)
            {
                with (other)
                {
                    if (position_meeting(x, y, other.id))
                    {
                        yspeed = 0;
                        active = true;
                        canDamage = true;
                        shiftVisible = 2;
                        despawnRange = -1;
                        
                        physicsLock = lockPoolLock(
                            parent.localPlayerLock[PL_LOCK_SHOOT],
                            parent.localPlayerLock[PL_LOCK_CHARGE],
                            parent.localPlayerLock[PL_LOCK_SLIDE],
                            parent.localPlayerLock[PL_LOCK_CLIMB]);
                    }
                }
            }
        }
    }
    
    if (active) // Riding it
    {
        if (global.ammo[playerID, global.weapon[playerID]] &gt; 0
            &amp;&amp; instance_exists(parent))
        {
            image_xscale = parent.image_xscale;
            x = parent.x;
            y = parent.y + 10 * parent.image_yscale;
            
            // Take away ammo
            global.ammo[playerID, global.weapon[playerID]] = max(0,
                global.ammo[playerID, global.weapon[playerID]]
                - (0.015 / (global.energySaver + 1)));
        }
        else // Teleport away if out of ammo
        {
            var i = instance_create(x, y + 16 - 8, objRushTeleport);
            i.upordown = 'up';
            i.parent = parent;
            
            instance_destroy();
            canHit = false;
            active = 0;
        }
    }
    
    if (active)
    {
        with (parent)
        {
            if (!ground)
            {
                dieToSpikes *= -1;
                if (checkSolid(0, 6 * gravDir))
                {
                    ground = 1;
                }
                dieToSpikes *= -1;
            }
            
            if (ground &amp;&amp; ((yspeed &gt;= 0 &amp;&amp; sign(image_yscale) == 1) || (yspeed &lt;= 0 &amp;&amp; sign(image_yscale) == -1)))
            {
                with (other)
                {
                    event_user(8);
                    
                    if (image_index == 0)
                    {
                        playSFX(sfxClamp);
                    }
                    else
                    {
                        playSFX(sfxLargeClamp);
                    }
                }
                
                ground = 0;
            }
        }
    }
    else
    {
        grav = 0.25 * sign(image_yscale);
        
        if (ground &amp;&amp; yspeed &gt;= 0)
        {
            yspeed = -(other.bounce) * sign(image_yscale);
            image_index = 0;
            playSFX(sfxClamp);
        }
    }
}

if (instance_exists(objSectionSwitcher) &amp;&amp; active)
{
    x = objSectionSwitcher.x;
    y = objSectionSwitcher.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtEnemyProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active)
{
    exit;
}

event_user(8);

if (other.reflectable == 1)
{
    playSFX(sfxEnemyHit);
    with (other)
    {
        instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT)
&amp;&amp; global.ammo[playerID, global.weapon[playerID]] &gt; 0)
{
    i = fireWeapon(26, 0, objRushTeleport, 1, 0, 0, 0);
    with (i)
    {
        type = 'sakugarne';
        y = view_yview;
        if (image_yscale &lt; 0)
        {
            y += view_hview;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("rocky", 8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("SAKUGARNE", -3, -3, sprWeaponIconsSakugarne);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active)
{
    with (parent)
    {
        if (yspeed * gravDir &gt;= 0 &amp;&amp; !global.timeStopped)
        {
            var spadd = 1;
            if (!playerIsLocked(PL_LOCK_JUMP))
            {
                spadd += global.keyJump[playerID];
            }
            
            yspeed = -(other.bounce * spadd) * gravDir;
            other.image_index = spadd - 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSFX(sfxReflect);

event_user(8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active)
{
    drawPlayer(0, costumeID, floor(13 + image_index), 8, x, y - 8 * image_yscale, image_xscale, image_yscale);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBubbleFloor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

isSolid = 1;

respawnRange = -1;
despawnRange = -1;

blockCollision = 0;
grav = 0;
bubbleTimer = -1;

dir = .25;

doesTransition = false;

bounceForce = 0;

spriteFrame = 0;
spriteTimer = 0;
image_speed = 0;

yspeed_map = ds_map_create();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    spriteTimer += .1;
    if (spriteTimer &gt;= 1)
    {
        spriteTimer = 0;
        if (spriteFrame == 3)
            spriteFrame = 0;
        else
            spriteFrame += 1;
    }
    
    if (spriteFrame == 3)
        image_index = 1;
    else
        image_index = spriteFrame;
    
    yspeed = dir;
    if (y &lt; ystart)
        dir = .25;
    if (y &gt; ystart + 4)
        dir = -.25;
    
    with (objMegaman)
    {
        var ysp = other.yspeed * (other.yspeed*gravDir&gt;0) + yspeed*(yspeed*gravDir&gt;0);
        if (place_meeting(x, y + 2 * gravDir + ysp, other.id))
        {
            var bounciness, jumpPower;

            with (other)
                other.prevYspeed = yspeed_map[? other.id];
                
            var xscl = sign(other.image_xscale);
            var onBigBubble;
            if(xscl&gt;0)
            {
                onBigBubble = x&lt;other.bbox_left || ((floor(x-other.bbox_left) mod 32)&lt; 16 &amp;&amp; x&lt;other.bbox_right);
            }
            else
            {
                onBigBubble = x&gt;=other.bbox_right || ((floor(x-other.bbox_left) mod 32)&gt;= 16 &amp;&amp; x&gt;=other.bbox_left);
            }
            
            if (!onBigBubble)
            {
                bounciness = .5;
                jumpPower = 1.0;
            }
            else
            {
                bounciness = .75;
                jumpPower = 3.0;
            }
            
            if (!is_undefined(prevYspeed) &amp;&amp; abs(prevYspeed) &gt; 1.75)
            {
                ground = 0;
                yspeed = (-prevYspeed * bounciness) - (global.keyJump[playerID] * jumpPower * gravDir);
                if(yspeed*sign(grav)&gt;0)
                {
                    yspeed=0;
                }
            }
        }
        
        with (other)
            yspeed_map[? other.id] = other.yspeed;
    }
    
    with (prtEntity)
    {
        var ysp = other.yspeed * (other.yspeed*sign(grav)&gt;0) + yspeed*(yspeed*sign(grav)&gt;0);
        if (object_index!=objMegaman&amp;&amp; place_meeting(x, y + 2*sign(grav)+ysp, other.id) &amp;&amp; !dead &amp;&amp; !object_is_ancestor(object_index,prtPlayerProjectile)&amp;&amp; object_index!= prtPlayerProjectile)
        {
            var bounciness;
            
            with (other)
                other.prevYspeed = yspeed_map[? other.id];
            
            var xscl = sign(other.image_xscale);
            var onBigBubble;
            if(xscl&gt;0)
            {
                onBigBubble = x&lt;other.bbox_left || ((floor(x-other.bbox_left) mod 32)&lt; 16 &amp;&amp; x&lt;other.bbox_right);
            }
            else
            {
                onBigBubble = x&gt;=other.bbox_right || ((floor(x-other.bbox_left) mod 32)&gt;= 16 &amp;&amp; x&gt;=other.bbox_left);
            }
            
            if (!onBigBubble)
                bounciness = .5;
            else
                bounciness = .75;
            
            if (!is_undefined(prevYspeed)&amp;&amp;abs(prevYspeed) &gt; 1.75)
            {
                ground = 0;
                yspeed = (-prevYspeed * bounciness);
                if(yspeed*grav&gt;0)
                {
                    yspeed=0;
                }
            }
        }
        
        with (other)
            yspeed_map[? other.id] = other.yspeed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy(yspeed_map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var combineDir = sign(image_xscale);
image_xscale=ceil(image_xscale);
if(!place_meeting(x-combineDir*16,y,object_index))
{
    var next = instance_place(x+combineDir*16,y,object_index);
    while(next!=noone &amp;&amp; sign(next.image_xscale)==combineDir)
    {
        with(next)
        {
            instance_destroy();
        }
        next = instance_place(x+combineDir*16,y,object_index);
        while(next!=noone &amp;&amp; sign(next.image_xscale)==combineDir)
        {
            with(next)
            {
                instance_destroy();
                next = instance_place(x+combineDir*16,y,object_index);
            }
        }
        image_xscale+=combineDir;
        next = instance_place(x+combineDir*16,y,object_index);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var drawDir = sign(image_xscale);
for(var i=0;i&lt;abs(image_xscale);++i)
{
    draw_sprite_ext(sprBubbleFloor, image_index, xstart+drawDir*i*32, ystart, drawDir, image_yscale, image_angle, image_blend, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPakatto24</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "cannons, shielded";

facePlayerOnSpawn = true;

// Enemy specific code
delay = 10;
calibrated = 0;

actionTimer = 0;
action = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (action) // Checking if action &gt; 0
    {
        actionTimer += 1;
        switch (action)
        {
            case 1: // Waiting to pop up for 70 frames (a little over a second) 
                if (actionTimer == 60 + delay)
                {
                    action += 1;
                    actionTimer = 0; // reset timer
                    image_index += 1;
                    
                    // delay = choose(0,0,10,20); //Removed to make enemy more tolerable.
                    delay = 10;
                }
                break;
            case 2: // pop open, shoot generic bullet 
                if (actionTimer == 8)
                {
                    action += 1;
                    actionTimer = 0;
                    image_index += 1;
                    var i = instance_create(x + 8 * image_xscale, y - 11,
                        objEnemyBullet);
                    i.xspeed = image_xscale
                        * 2; // Base xspeed on the enemy's direction
                    i.contactDamage = 2; // Setting custom damage for bullet
                }
                break;
            case 3: // Peek open until actionTimer is 24 (roughly under half a second) 
                if (actionTimer == 24)
                {
                    action = 1;
                    actionTimer = 0;
                    image_index = 0;
                }
                break;
        }
    }
}
else if (dead) // reset variables if dead/offscreen
{
    actionTimer = 50;
    action = 1;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index &lt; 1)
{
    other.guardCancel = 1;
}
if (collision_rectangle(x - 16 * image_xscale, y - 29, x, y + 1, other.id,
    false, false))
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPropellerEyePropeller1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "cluster, flying, shielded";

blockCollision = false;
grav = 0;

facePlayerOnSpawn = true;

// Enemy specific code
phase = 0;
waitTimer = 0;
chase = false;

propellerTimer = 0;
animBack = false;
imgSpd = 0.25;
imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // wait to chase mega man
        case 0:
            if (instance_exists(target))
            {
                waitTimer += 1;
                if (waitTimer &gt;= 90)
                {
                    phase = 1;
                    waitTimer = 0;
                    imgIndex = 1;
                }
            }
            
            break;
        
        // look around once, and then chase mega man on the second look
        case 1:
            if (!animBack)
            {
                imgIndex += imgSpd;
                if (imgIndex &gt;= 7)
                {
                    imgIndex = 6 - imgIndex mod 7;
                    animBack = true;
                }
            }
            else
            {
                imgIndex -= imgSpd;
                if (imgIndex &lt; 1)
                {
                    if (!chase)
                    {
                        imgIndex = 2;
                        animBack = false;
                        chase = true;
                        calibrateDirection();
                        
                        if (instance_exists(target))
                        {
                            direction = point_direction(x, y, target.x, target.y);
                        }
                    }
                    else
                    {
                        phase = 0;
                        chase = false;
                        direction = 0;
                        animBack = false;
                        imgIndex = 0;
                    }
                }
            }
            
            if (chase)
            {
                speed = 1.5;
            }
            else
            {
                speed = 0;
            }
            
            break;
    }
    
    // animate propeller
    propellerTimer += 1;
    if (propellerTimer &gt;= 3) // &lt;-- propeller animation speed here
    {
        if (sprite_index == sprPropellerEyePropeller1)
        {
            sprite_index = sprPropellerEyePropeller2;
        }
        else
        {
            sprite_index = sprPropellerEyePropeller1;
        }
        
        propellerTimer = 0;
    }
}
else
{
    speed = 0;
    
    if (dead)
    {
        phase = 0;
        waitTimer = 0;
        chase = false;
        
        direction = 0;
        
        animBack = false;
        imgIndex = 0;
        propellerTimer = 0;
    }
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase != 1)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

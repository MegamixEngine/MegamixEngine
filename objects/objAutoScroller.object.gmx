<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAutoscroller</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>500</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pretty much everyone is familiar with autoscrolling as a concept. All you have to do is place
// one of these objects with the correct creation code in your section, and it'll scroll however you want.

event_inherited();

canHit = false;

grav = 0;
blockCollision = 0;
bubbleTimer = -1;

respawnRange = -1;
despawnRange = -1;

timer = 0;
phase = 1;
counter = 0;

sL = 0;
sR = 0;
sT = 0;
sB = 0;

// Customizeable variables

//@cc the direction of the autoscroll. "h" will make it go horizontally, "v" will make it go vertically. Default horizontal.
dir = "h";

//@cc the speed of the autoscroll, in pixels per frame. negative = left or up, positive = right or down
mySpeed = 0.5;

//@cc the amount of frames to wait in between entering the autoscroll section and the scrolling actually starting.
waitFrames = 64;

//@cc if set to true, the camera will be unlocked when it's done autoscrolling
unlockBounds = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    switch (phase)
    {
        case 1: // Start 
            if (instance_exists(objMegaman) &amp;&amp; insideSection(x, y))
            {
                with (objMegaman)
                {
                    if (!playerIsLocked(PL_LOCK_MOVE) &amp;&amp; !teleporting &amp;&amp; !showReady)
                    {
                        // take camera away from player &gt;:c
                        viewPlayer = 0;
                        
                        // increment phase + grab current section bounds
                        with (other)
                        {
                            phase += 1;
                            
                            if (dir == "h")
                            {
                                sL = global.sectionLeft;
                                sR = global.sectionRight;
                                global.sectionLeft = view_xview;
                                global.sectionRight = view_xview + view_wview;
                            }
                            else if (dir == "v")
                            {
                                sT = global.sectionTop;
                                sB = global.sectionBottom;
                                
                                global.sectionTop = view_yview;
                                global.sectionBottom = view_yview + view_hview;
                            }
                        }
                    }
                }
            }
            break;
        case 2: // wait 
            timer += 1;
            if (timer &gt;= waitFrames)
            {
                phase += 1;
                timer = 0;
            }
            break;
        case 3: // Move
        // stop moving if it's reached the end of the section 
            if ((dir == "h" &amp;&amp; ((global.sectionLeft &lt;= sL &amp;&amp; mySpeed &lt; 0) || (global.sectionRight &gt;= sR &amp;&amp; mySpeed &gt; 0)))
                || (dir == "v" &amp;&amp; ((global.sectionTop &lt;= sT &amp;&amp; mySpeed &lt; 0) || (global.sectionBottom &gt;= sB &amp;&amp; mySpeed &gt; 0))))
            {
                phase += 1;
            } // otherwise, Alexa, change section bounds
            else
            {
                if (dir == "h")
                {
                    global.sectionLeft += mySpeed;
                    global.sectionRight += mySpeed;
                }
                else if (dir == "v")
                {
                    global.sectionTop += mySpeed;
                    global.sectionBottom += mySpeed;
                }
            }
            break;
        case 4: // unlock bounds once finished, if set to true
            if unlockBounds
            {
                if (dir == "h")
                {
                    global.sectionLeft = sL;
                    global.sectionRight = sR;
                }
                else if (dir == "v")
                {
                    global.sectionTop = sT;
                    global.sectionBottom = sB;
                }
                
                // give camera back to mega man
                if (instance_exists(objMegaman))
                {
                    with (objMegaman)
                    {
                        viewPlayer = 1;
                    }
                }
            }
            break;
    }
}
else if (dead)
{
    phase = 1;
    timer = 0;
    counter = 0;
    sL = 0;
    sR = 0;
    sT = 0;
    sB = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// sorry nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

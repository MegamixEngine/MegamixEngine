<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadeAlpha = 1;
timer = 0;
anniversaryIndex = 0;

timeUntilFlash = 150;
timeUntilFadeOut = 80;
timeUntilTitle = 50;

playMusic('Mega_Man_6.NSF', "VGM", 14, 0, 0, 0, 1);

// reset all game state
engineConfig();
saveLoadGame(SL_INIT);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer &lt; timeUntilFlash + timeUntilFadeOut &amp;&amp; global.keyPausePressed[0])
{
    timer = timeUntilFlash + timeUntilFadeOut + timeUntilTitle / 2;
    fadeAlpha = 1;
    anniversaryIndex = 0;
    stopMusic();
}

if (timer &gt;= timeUntilFlash)
{
    if (timer == timeUntilFlash)
    {
        anniversaryIndex += 0.7;
        if (anniversaryIndex div 1 &gt;= 8)
        {
            anniversaryIndex = 0;
            timer += 1;
        }
    }
    else
    {
        if (timer &gt;= timeUntilFlash + timeUntilFadeOut)
        {
            if (fadeAlpha &gt;= 1)
            {
                if (timer &gt;= timeUntilFlash + timeUntilFadeOut + timeUntilTitle)
                {
                    global.nextRoom = rmTitleScreen;
                }
                else
                {
                    timer += 1;
                }
            }
            else
            {
                fadeAlpha += 0.2;
            }
        }
        else
        {
            timer += 1;
        }
    }
}
else
{
    timer += 1;
    
    if (timer % 8 == 0 &amp;&amp; fadeAlpha &gt; 0)
        fadeAlpha -= 0.2;
    
    //fadeAlpha -= 1 / timeUntilFlash;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// logo
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(view_xview + view_wview / 2, view_yview + (view_hview / 2) - 16, "INSPIRED BY");

draw_sprite(sprCapcom, anniversaryIndex div 1,
        view_xview + view_wview / 2, view_yview + view_hview / 2);

// fade
var oldCol, oldAlp;
oldCol = draw_get_color();
oldAlpha = draw_get_alpha();

draw_set_color(c_black);
draw_set_alpha(fadeAlpha);

draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0],
        view_yview[0] + view_hview[0], false);

draw_set_color(oldCol);
draw_set_alpha(oldAlpha);

// reset
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSwallown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "flying, nature, bird";

grav = -0.10;
blockCollision = 0;

facePlayerOnSpawn = true;

// Enemy specific code
image_speed = 0.4;
spawnTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (xspeed == 0)
    {
        xspeed = image_xscale * 1.2;
        yspeed = 2;
    }
    
    if (y &lt; ystart - 8 &amp;&amp; (xspeed == 1.2 || xspeed == -1.2))
    {
        yspeed = 0;
        grav = 0;
        xspeed = 1.5 * image_xscale;
        with (objCoswallown)
        {
            if (parent == other.id)
            {
                grav = 0;
                if (instance_exists(target))
                {
                    direction = round(point_direction(x,y,target.x,target.y)/45)*45;
                    if (direction == 90)
                    {
                        imgOffset = 8;
                        xspeed = 0;
                        yspeed = -1.5;
                    }
                    if (direction == 270)
                    {
                        imgOffset = 4;
                        xspeed = 0;
                        yspeed = 1.5;
                    }
                    if (direction == 225) || (direction == 315)
                    {
                        imgOffset = 2;
                        xspeed = 1.5*image_xscale;
                        yspeed = 1.5;
                    }
                    if (direction == 45) || (direction == 135)
                    {
                        imgOffset = 6;
                        xspeed = 1.5*image_xscale;
                        yspeed = -1.5;
                    }
                }
            }
        }
    }
    
    spawnTimer += 1;
    if (spawnTimer == 20 || spawnTimer == 30 || spawnTimer == 40)
    {
        var i = instance_create(view_xview[0] + 128 - (128 * image_xscale), y, objCoswallown);
        i.image_xscale = image_xscale;
        i.parent = id;
    }
}
else if (dead)
{
    image_speed = 0.4;
    spawnTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

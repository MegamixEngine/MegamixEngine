<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMobby</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMiniBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Randomly chooses between launching missiles or dropping spike balls

event_inherited();

respawn = true;

healthpointsStart = 14;
healthpoints = healthpointsStart;
contactDamage = 6;
category = "aquatic, bulky";
grav = 0;

// Enemy specific code
dir = image_xscale;
init = 1;

introSprite = sprMobbyIntro;
shootTimer = 0;
flipperIndex = 0;
flipDir = 1;
blink = false;
blinkTimer = 0;
yspeed = -0.1;

image_speed = 0.15;

attack = choose(0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep() &amp;&amp; introTimer &lt;= 0)
{
    if (!instance_exists(objMobbyBomb))
        shootTimer += 1;
    else
    {   
        with (objMegaman)
        {
            playerBlow((1 / 2)*sign(-other.image_xscale));//1/4
        }
    }
    blinkTimer += 1;
    
    if (blinkTimer == 120)
        blink = true;
    
    if (blinkTimer == 130)
    {
        blink = false;
        blinkTimer = 0;
    }
    
    if (!instance_exists(objMobbyBomb))
        y += yspeed;
    if (y &lt; ystart - 8)
        yspeed = abs(yspeed);
    if (y &gt;= ystart)
        yspeed = -abs(yspeed);
    flipperIndex += flipDir * 0.1;
    if (flipperIndex &lt;= 0.1)
        flipDir = 1;
    if (flipperIndex &gt;= 3 - 0.1)
        flipDir = -1;
    
    if (shootTimer == floor(shootTimer / 60) * 60)
    {
        var myAttack;
        if (attack == 0)
        {
            myAttack = instance_create(x + 38 * image_xscale, y + 20,
                objMobbyMissle);
            myAttack.image_xscale = image_xscale;
            myAttack.xspeed = myAttack.spd * image_xscale;
        }
        else
        {
            for (var i = 0; i &lt;= 3; i += 1)
            {
                myAttack = instance_create(x - 8 * image_xscale, y - 32,
                    objMobbyBomb);
                myAttack.getX = x + (40 + (i * 40)) * image_xscale;
            }
            shootTimer += 1;
        }
        myAttack.image_xscale = image_xscale;
        if (attack == 0)
            attack = choose(0, 1);
        else
            attack = 0;
    }
}
else if (!insideView())
{
    calibrateDirection();
    image_index = 0;
    shootTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Glow white when hit
if (iFrames == 1) || (iFrames == 3)
{
    d3d_set_fog(true, c_white, 0, 0);
}

// Draw code
if (introTimer &gt; 0 &amp;&amp; doesIntro)
{
    event_inherited();
}
else
{
    // Draw air suction
    if (instance_exists(objMobbyBomb))
    {
        draw_sprite_ext(sprMobbyAir, image_index, round(x + 42 * image_xscale),
            round(y + 17), image_xscale, image_yscale, image_angle,
            image_blend, image_alpha);
    }
    
    // Draw self
    draw_sprite_ext(sprite_index, image_index mod 2, round(x), round(y),
        image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    
    // Draw flipper
    draw_sprite_ext(sprite_index, floor(flipperIndex + 2), round(x), round(y),
        image_xscale, image_yscale, image_angle, image_blend, image_alpha);
        
    // Draw blinking
    if (blink)
    {
        draw_sprite_ext(sprite_index, 5, round(x), round(y), image_xscale,
            image_yscale, image_angle, image_blend, image_alpha);
    }
}

// End white when hit
if (iFrames == 1) || (iFrames == 3)
{
    d3d_set_fog(false, 0, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

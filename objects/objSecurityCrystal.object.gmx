<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSecurityCrystal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objDestroyableBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// From the Crystal Gate stage in Mega Man &amp; Bass. It will only be destroyed by the
// weapon its weakness is set to, like destroyable blocks.

//@cc how to use
//@cc weakness = global.weaponID[? objWeaponObject];
//@cc or weakness = ds_map_find_value(global.weaponID, objWeaponObject)
//@cc To make it a reflect block, use "weakness = -1;"
event_inherited();

faction = 3; // Counting as enemy so teleporters' enemyLock can work with this
contactDamage = 0;

itemDrop = -1;

image_speed = 1 / 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (weakness == objTornadoBlow)
{
    with (objTornadoEffect)
    {
        instance_destroy();
    }
}

if (weakness == objBreakDash)
{
    with (objSlashEffect)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead)
{
    // Set sprite to display
    var imgs = floor(image_number / 4);
            
    image_index = image_index mod imgs;
    
    // check for player color
    var wac = -1;
    
    with (objMegaman)
    {
        if (global.weapon[playerID] == other.weakness)
        {
            wac = playerID;
            break;
        }
    }
    
    drawSelf();
    
    if (wac != -1)
    {
        var olc, prc, scc;
        olc = global.outlineCol[wac];
        prc = global.primaryCol[wac];
        scc = global.secondaryCol[wac];
        
        draw_sprite_ext(sprite_index, image_index+9, x, y, 1, 1, 0, olc, 1);
        draw_sprite_ext(sprite_index, image_index+3, x, y, 1, 1, 0, prc, 1);
        draw_sprite_ext(sprite_index, image_index+6, x, y, 1, 1, 0, scc, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

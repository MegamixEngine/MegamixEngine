<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprYudon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// col = &lt;number&gt; (0 = red (default); 1 = game gear colouration;)
// missileCol = &lt;number&gt; (0 = green (default); 1 = purple; - note this also affects what colours "game gear colouration" uses.)

event_inherited();

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 8;

category = "bulky, shielded";

facePlayer = true;

// Enemy specific code
shooting = false;
animTimer = 0;

cooldownMax = 70;
cooldownTimer = cooldownMax;

animTimer = 8;
actionTimer = 0;
shooting = false;
closeBlastDoors = false;
doorOpenMax = 5;
img = 0;
imageOffset = 0;
missileArray[1] = 0;
missileArray[2] = 0;
e = 1;

col = 0;
missileCol = 0;

missile1 = 0;
missile2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// colour changing events. if game gear colouration is selected, the secondary colour matches the missile colour selected.
if (col &gt; 0)
{
    image_index = (8 * (col + missileCol)) + imageOffset;
}
else
{
    image_index = imageOffset;
}

// i am a fraud and couldn't figure out a way to properly count how many missile in play. woe is me. i did it on the hippo somehow...
// but yudon cares about the number of missiles in play whereas the hippo cares about none.
if (missileArray[1] != 0)
    missile1 = 1;
else
    missile1 = 0;
if (missileArray[2] != 0)
    missile2 = 1;
else
    missile2 = 0;

event_inherited();

if (entityCanStep())
{
    // tickdown cooldown timer
    
    // check to see if missiles exist, if not remove them from the array.
    for (var i = 1; i &lt;= 2; i += 1)
    {
        if (missileArray[i])
        {
            if (!instance_exists(missileArray[i]))
            {
                missileArray[i] = 0;
            }
        }
    }
    
    // if there are less than 3 missiles, begin shooting code.
    if ((missile1 + missile2) &lt; 2 &amp;&amp; !shooting &amp;&amp; imageOffset &lt;= 1)
    {
        if (cooldownTimer &gt; 0)
            cooldownTimer -= 1;
        if (cooldownTimer == 0) &amp;&amp; (instance_exists(target))
        {
            shooting = true;
            imageOffset = 2;
        }
    }
    if (!shooting)
    {
        if (animTimer &gt; 0)
            animTimer -= 1;
        if (animTimer == 0)
        {
            animTimer = 8;
            if (imageOffset == 0)
                imageOffset = 1;
            else
                imageOffset = 0;
        }
    }
    
    if (shooting)
    {
        actionTimer += 1;
        if (actionTimer == doorOpenMax * 2 &amp;&amp; closeBlastDoors == false
            &amp;&amp; imageOffset &lt; 3)
        {
            imageOffset = 3;
            actionTimer = 0;
        }
        if (actionTimer == doorOpenMax &amp;&amp; imageOffset &gt;= 3 &amp;&amp; imageOffset &lt; 7
            &amp;&amp; closeBlastDoors == false)
        {
            imageOffset += 1;
            actionTimer = 0;
        }
        
        if (actionTimer == doorOpenMax &amp;&amp; imageOffset == 7
            &amp;&amp; closeBlastDoors == false)
        {
            closeBlastDoors = true;
            actionTimer = 0;
            
            var storeMCol;
            storeMCol = missileCol;
            
            missileArray[e] = instance_create(x + 8 * image_xscale, y + 20,
                objYudonMissile);
            with (missileArray[e])
            {
                respawn = false;
                col = storeMCol;
            }
            e += 1;
        }
        if (actionTimer == doorOpenMax &amp;&amp; closeBlastDoors == true
            &amp;&amp; imageOffset &gt; 3)
        {
            imageOffset -= 1;
            actionTimer = 0;
        }
        if (actionTimer == doorOpenMax &amp;&amp; closeBlastDoors == true
            &amp;&amp; imageOffset == 3)
        {
            imageOffset = 0;
            shooting = false;
            actionTimer = 0;
            closeBlastDoors = false;
            cooldownTimer = cooldownMax;
        }
    }
    
    // reset missile counter.
    if (e == 3)
        e = 1;
}
else if (dead)
{
    imageOffset = 0;
    animTimer = 8;
    shooting = false;
    actionTimer = 0;
    closeBlastDoors = false;
    cooldownTimer = cooldownMax;
    img = 0;
    missile1 = 0;
    missile2 = 0;
    missileArray[1] = 0;
    missileArray[2] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// yudon is invunerable in image 0, 1 and 2:
if (imageOffset &lt; 3)
{
    other.guardCancel = 1;
}
else
{
    if (bboxGetYCenterObject(other.id) &gt; y)
    {
        other.guardCancel = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with (objYudonMissile)
{
    event_user(EV_DEATH);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTsurareStamp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
healthpointsStart = 12;
healthpoints = healthpointsStart;
contactDamage = 6;
image_speed = 0;
landTimer = 0;
jumpTimer = 0;
jumpType = 0;
spinTimer = 0;
jumpHeight[0] = 2.5 * 16;
jumpDistance[0] = 48;
jumpHeight[1] = 2.5 * 16;
jumpDistance[1] = 96;
jumpXSpeed = 0;
category = "big eye, bulky";
dieToSpikes = false;
// @cc - Change colours: 0 (default) = orange, 1 = red, 2 = green, 3 = blue
col = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = mskTsurareStamp;
event_inherited();
mask_index = sprite_index;
if(xcoll!=0)
{
    xspeed=xcoll;
}

if (entityCanStep())
{
    if (!ground)
    {
        landTimer = 30;
        jumpTimer = 0;
        xspeed = jumpXSpeed;
        image_index = 3;
    }
    else
    {
        xspeed = 0;
        jumpXSpeed = 0;
        if (ycoll)
            playSFX(sfxTsurareStamp);
        
        // landing animation
        if (landTimer &gt; 0)
        {
            landTimer--;
            var animTable = makeArray(0, 9, 6);
            image_index = animTable[landTimer div 10];
        } // determine jump
        else if (landTimer == 0 &amp;&amp; jumpTimer == 0)
        {
            if (instance_exists(target))
            {
                calibrateDirection();
                if (target.ground)
                    jumpType = 0;
                else
                    jumpType = 1;
                jumpTimer = 6 * 3;
            }
            image_index = 0;
        }
        
        // jumping animation
        if (jumpTimer &gt; 0)
        {
            jumpTimer--;
            if (jumpType == 0)
                image_index = 0;
            else
            {
                var animTable = makeArray(9, 9, 6);
                image_index = animTable[jumpTimer div 6];
            }
            if (jumpTimer == 0)
            {
                yspeed = -sqrt(2 * jumpHeight[jumpType] * grav);
                var airTime = 2 * abs(yspeed / grav);
                xspeed = jumpDistance[jumpType] / airTime * image_xscale;
                jumpXSpeed = xspeed;
            }
        }
        image_index += spinTimer div 4;
        spinTimer = (spinTimer + 1) mod 12;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
landTimer = 0;
jumpTimer = 0;
jumpType = 0;
spinTimer = 0;
jumpXSpeed = 0;
switch (col)
{
    case 1:
        sprite_index = sprTsurareStampRed;
        break;
    case 2:
        sprite_index = sprTsurareStampGreen;
        break;
    case 3:
        sprite_index = sprTsurareStampBlue;
        break;
    default:
        sprite_index = sprTsurareStamp;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue(objMagneticShockwave, 4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
stopSFX(sfxEnemyHit);
var i = instance_create(x,y,objBigExplosion);
with (i)
{
    playSFX(sfxMM9Explosion);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

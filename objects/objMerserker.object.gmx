<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMerserker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Merserker
// Creation code: leftLimit and rightLimit, how many regular jumps it can move
// away from its original position in each direction

event_inherited();
facePlayerOnSpawn = true;
contactDamage = 3;
healthpointsStart = 3;
healthpoints = healthpointsStart;
canHit = true;
category = "flying";


// Enemy Specific Code
isFalling = false;
animTimer = 0;
timer = 0;
moveDeceleration = 0;

// Customizable values
leftLimit = 5;
rightLimit = 5;
fallSpeed = 4;
jumpSpeed = 4; // How fast he jumps
jumpDistance = 56; // How high he jumps
moveSpeed = 3; // How fast he moves horizontally
moveDistance = 32; // How much it travels in a full jump

// Adjust decceleration (using one of the uniform accelerated movement formulas)
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var prevXspeed = xspeed;

event_inherited();

if (entityCanStep())
{
    if (prevXspeed != xspeed)
        xspeed = prevXspeed;
    
    // Deccelerate
    if (xspeed != 0)
    {
        var psign = sign(xspeed);
        xspeed += moveDeceleration * -psign;
        if (sign(xspeed) != psign)
            xspeed = 0;
    }
    
    
    if (ground)
    {
        if (ycoll != 0)
        {
            timer = 0;
            if (isFalling)
                playSFX(sfxMerserker);
        }
        timer += 1;
        if (timer &gt; 10)
        {
            yspeed = -jumpSpeed;
            isFalling = false;
            var canAdvance = true;
            if ((image_xscale &lt; 0 &amp;&amp; x &lt; xstart - (leftLimit * moveDistance)) || (image_xscale &gt; 0 &amp;&amp; x &gt; xstart + rightLimit * moveDistance))
            {
                image_xscale *= -1;
                canAdvance = false;
            }
            if (canAdvance)
                calibrateDirection();
            xspeed = moveSpeed * image_xscale;
        }
    }
    else if (yspeed &gt; 0.35 &amp;&amp; xspeed == 0)
    {
        isFalling = true;
        yspeed = fallSpeed;
    }
    if (yspeed &gt; -jumpSpeed * 0.35 &amp;&amp; !isFalling)
    {
        animTimer = 1;
    }
    
    
    // Animation
    animTimer += 0.4;
    if (floor(animTimer) &gt; 1)
        animTimer = 0;
    
    image_index = isFalling * 2 + floor(animTimer);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/// Spawnn
xspeed = 0;
yspeed = 1;
isFalling = false;
animTimer = 0;
timer = 0;
yspeed = 0;
if (spawned)
    event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = (jumpSpeed * jumpSpeed) / (2 * jumpDistance);
moveDeceleration = (moveSpeed * moveSpeed) / (2 * moveDistance);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

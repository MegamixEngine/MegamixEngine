<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHeatmanShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

blockCollision = true;
grav = 0.25;

contactDamage = 4;
image_speed = 1 / 5;
stopOnFlash = false;

style = 0;
raiseTimer = 0;
spawnFire = makeArray()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    image_speed = 1 / 5;
    if (grav != 0)
        reflectable = true;
    else
        reflectable = false;
    if (checkSolid(0, 3) &amp;&amp; style == 0)
    {
        xspeed = 0;
        blockCollision = false;
        grav = 0;
        
        raiseTimer++;
        if (raiseTimer == 1)
        {
            for (var i = 0; i &lt; 4; i++)
            {
                spawnFire[i] = instance_create(x, y, object_index);
                with (spawnFire[i])
                {
                    style = 1;
                    grav = 0;
                    blockCollision = false;
                }
            }
        }
    }
    
    if (raiseTimer &gt; 0)
    {
        raiseTimer++;
        var offset = raiseTimer;
        if (raiseTimer &gt; 32)
            offset = 32;
        if (raiseTimer &gt; 50)
            offset = 32 - (raiseTimer - 50);
        var die = false;
        if (offset &lt; 0)
            die = true;
        for (var i = 0; i &lt; 4; i++)
        {
            with (spawnFire[i])
            {
                style = 1;
                grav = 0;
                blockCollision = false;
                y = other.y - offset * i / 5;
                if (die)
                    instance_destroy();
            }
        }
        if (die)
            instance_destroy();
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

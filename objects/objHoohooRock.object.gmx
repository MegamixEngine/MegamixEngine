<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHoohooRock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

yspeed = 0;
xspeed = 0;

respawn = false;

image_speed = 0;

// @cc - Change colour: 0 (default) = brown, 1 = white
col = 0;
init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//Change colours
if (init)
{
    switch(col)
    {
        case 1:
            sprite_index = sprHoohooRockWhite;
            break;
        default:
            sprite_index = sprHoohooRock;
            break;
    }
    init = 0;
}

if (entityCanStep())
{
    if (ground)
    {
        instance_destroy();
        playSFX(sfxHoohooRock);
        
        for (var i = 1; i &lt;= 4; i++)
        {
            var debris = instance_create(x, y, objEnemyBullet);
            debris.sprite_index = sprHoohooRock;
            debris.image_speed = 0;
            debris.contactDamage = 3;
            debris.canHit = true;
            debris.grav = gravAccel;
            
            switch (i)
            {
                // leftmost rock
                case 1:
                    debris.image_index = 1;
                    debris.xspeed = 1 * image_xscale;
                    debris.yspeed = -4;
                    break;
                // middle left
                case 2:
                    debris.image_index = 2;
                    debris.xspeed = .25 * image_xscale;
                    debris.yspeed = -4.25;
                    break;
                // middle right
                case 3:
                    debris.image_index = 1;
                    debris.xspeed = -.5 * image_xscale;
                    debris.yspeed = -5.25;
                    break;
                // rightmost rock
                case 4:
                    debris.image_index = 2;
                    debris.xspeed = -.75 * image_xscale;
                    debris.yspeed = -3.75;
                    break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFeeberBubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;

itemDrop = -1;
category = "aquatic";

imgIndex = 0;
damage = false;

myLock = 0;

parent = noone;
animBack = false;
image_speed = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (instance_exists(target))
    {
        if (collision_rectangle(x - 12, y - 24, x + 12, y, target, false, true))
        {
            target.x = x;
            target.y = y - (sprite_height/2) - 4;
            if (myLock == 0)
            {
                myLock = lockPoolLock(global.playerLock[PL_LOCK_SHOOT],
                    global.playerLock[PL_LOCK_CLIMB],
                    global.playerLock[PL_LOCK_CHARGE]);
            }
            
            if ((global.keyJumpPressed[target.playerID]) &amp;&amp; (!damage)
                || (global.keyShootPressed[target.playerID]) &amp;&amp; (!damage)
                || (global.keySlidePressed[target.playerID]) &amp;&amp; (target.ground) &amp;&amp; (!damage))
            {
                event_user(EV_HURT);
                healthpoints--;
                damage = true;
            }
            else
            {
                damage = false;
            }
            
            if (healthpoints &lt;= 0)
            {
                dead = true;
                event_user(EV_DEATH);
            }
        }
    }
        
    // Turn around when hitting wall
    if (xcoll != 0)
    {
        image_xscale *= -1;
    }
    
    // Stop moving when falling
    if (!ground)
    {
        xspeed = 0;
    }
    else
    {
        xspeed = 1 * image_xscale;
    }
    
    // Animation
    if (animBack == false)
    {
        imgIndex += image_speed;
        if (imgIndex &gt;= 4)
        {
            animBack = true;
            imgIndex = 3;
        }
    }
    else
    {
        imgIndex -= image_speed;
        if (imgIndex == 1)
        {
            animBack = false;
            imgIndex = 2;
        }
    }
}
else if (dead)
{
    lockPoolRelease(myLock);
    instance_destroy();
}
image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSharkSubmarineMissile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
stopOnFlash = false;
healthpointsStart = 1;
healthpoints = healthpointsStart;
blockCollision = 0;
killOverride = false;
respawn = false;
contactDamage = 4;
grav = 0;
canHit = true;
despawnRange = 0;
speedSet = 1.5;

aiming = 0; // 0 = E, 1 = SE, 2 = S, 3 = SW, 4 = W, 5 = NW, 6 = N, 7 = NE.
indexOffset = 0; // For animation. image_index = aiming * 2 + indexOffset.
reDirTimer = 0;

playSFX(sfxMissileLaunch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (reDirTimer mod 10 == 0)
    {
        if (indexOffset == 0)
        {
            indexOffset = 1;
        }
        else
        {
            indexOffset = 0;
        }
    }
    
    if (reDirTimer &lt; 20)
    {
        reDirTimer++;
    }
    else
    {
        reDirTimer = 0;
        if (instance_exists(target))
        {
            //
            // --FIX THIS LATER--
            //
            var testAngle = point_direction(x, y, target.x, target.y);
            if (testAngle &lt;= 0)
            {
                testAngle += 360;
            }
            if (testAngle &gt;= (360 - aiming * 45)
                &amp;&amp; testAngle - (360 - aiming * 45) &lt;= 180)
            {
                aiming--;
            }
            else
            {
                aiming++;
            }
        }
        else
        {
            if (aiming &gt; 0 &amp;&amp; aiming &lt; 5)
            {
                aiming--;
            }
            else
            {
                aiming++;
            }
        }
        if (aiming &lt; 0)
        {
            aiming = 7;
        }
        if (aiming &gt; 7)
        {
            aiming = 0;
        }
    }
    
    if (aiming &gt; 4) // North.
    {
        yspeed = -speedSet;
    }
    else if (aiming &gt; 0 &amp;&amp; aiming &lt; 4) // South.
    {
        yspeed = speedSet;
    }
    else // Horizontal movement only.
    {
        yspeed = 0;
    }
    
    if (aiming &lt; 2 || aiming == 7) // East.
    {
        xspeed = speedSet;
    }
    else if (aiming &gt; 2 &amp;&amp; aiming &lt; 6) // West.
    {
        xspeed = -speedSet;
    }
    else // Vertical movement only.
    {
        xspeed = 0;
    }
    image_index = aiming * 2 + indexOffset;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, objExplosion);
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

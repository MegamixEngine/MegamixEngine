<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCoopWarpStar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerID = 0;
timer = 0;
timerMax = 20;

myPal[0] = global.primaryCol[playerID];
myPal[1] = global.secondaryCol[playerID];
myPal[2] = global.outlineCol[playerID];

img = 0;
imgDir = 1;
imgTimer = 0;
imgTimerMax = 3;

targetPlayerID = 0;

myLock = -1;
cAngle = 90;
cDist = 18;
addAngle = 12;
fastTimer = false;
freeOnKill = true;
freezeActive = true;
movePlayer = true;

playSound = true;
explosionWarp = 0.35;
explosionImg = 0;
explosionImageMax = 4;
explosionSprite = sprExplosionGameGear;
replaceColor[0] = $F8F8F8;
replaceColor[1] = $E4E460;

helloMicheal = false;
playerVisible = true;

spawnRide = noone; //if set, spawn vechicle
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.frozen || !freezeActive)
{
    if (timer &lt; timerMax)
        timer ++;
    cAngle += addAngle;
    if (cAngle &gt;= 360)
        cAngle -= 360;
    
    
        
    imgTimer ++;
    if (imgTimer &gt;= imgTimerMax)
    {
        img += imgDir;
        if (img == 2)
        {
            imgDir = -1;
        }
        if (img == 0)
        {
            imgDir = 1;
        }
        imgTimer = 0;
        if (cDist &gt; 10)
            cDist -=1;
    }
    
    
    if (timer &gt;= timerMax)
    {
        if (freeOnKill)
            event_user(EV_DEATH);
    }
}

explosionImg += explosionWarp;

var tx = x;
var ty = y;

    with (objMegaman)
    {
        if (!other.helloMicheal &amp;&amp; playerID == other.targetPlayerID)
        {
            tx = x;
            ty = y;
        }
        else if (playerID == other.playerID)
        {
            if (other.movePlayer)
            {
                    x = other.x;
                    y = other.y;
                    yspeed = 0;
            }
        }
    }
if (!fastTimer)
{
    x = lerp(xstart,tx,timer / timerMax);
    y = lerp(ystart,ty,timer / timerMax);
}
else
{
    x = lerp(xstart,tx,clamp((timer*2) / timerMax,0,1));
    y = lerp(ystart,ty,clamp((timer*2) / timerMax,0,1));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!movePlayer)
{
    with (objMegaman)
    {
        if (playerID == other.playerID)
        {
            other.myLock = lockPoolRelease(other.myLock);
            dieToPit = true;
            dieToSpikes = true;

        }
    }
}
else
{
    var tx = x;
    var ty = y;
    with (objMegaman)
    {
        if (playerID == other.targetPlayerID)
        {
            tx = x;
            ty = y;
        }
    }
    with (objMegaman)
    {
        if (playerID == other.playerID)
        {
            x = tx;
            y = ty;
            other.myLock = lockPoolRelease(other.myLock);
            dieToPit = true;
            dieToSpikes = true;
            visible = other.playerVisible;
        }
    }
    
    if(playSound)
    playSFX(getGenericSFX(SFX_TELEIN,-1));
}

if (spawnRide != noone)
{
    with (objMegaman)
    {
        var iX = 1;
        var iY = 1;
        var gravSign = 1;
        var myGuy = id; 
        if (playerID == other.targetPlayerID)
        {
            iX = image_xscale;
            iY = image_yscale;
            gravSign = gravDir;
            var myGuy = id;
            
        }
        
    }

    with (instance_create(myGuy.x,myGuy.y,other.spawnRide))
    {
        setPlayer = other.playerID;
        image_xscale = iX;
        image_yscale = iY;
        //rider = setPlayer;
        event_user(2)
        active = true;
        other.spawnRide = noone;
        
    }
        
    
    
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var spinX = round(x + sin(degtorad(cAngle + (0))) * cDist);
var spinY = round(y + cos(degtorad(cAngle + (0))) * cDist);
var spinXA = round(x + sin(degtorad(cAngle + (180))) * cDist);
var spinYA = round(y + cos(degtorad(cAngle + (180))) * cDist);
var mP = c_white;
for (var i = 0; i &lt;= 3; i ++)
{
    if (i != 0)
        mP = myPal[i-1];
    draw_sprite_ext(sprite_index,img + 3*i,round(x),round(y),1,1,image_angle,mP,image_alpha);
    if (i &lt; 3)
    {
        draw_sprite_ext(sprCoopWarpStarSparkle,(global.gameTimer mod 4) + (4*i),spinX,spinY,1,1,image_angle,mP,image_alpha);
        draw_sprite_ext(sprCoopWarpStarSparkle,(global.gameTimer mod 4) + (4*i),spinXA,spinYA,1,1,image_angle,mP,image_alpha);
    }
    
}

if (explosionImg &lt;= explosionImageMax+1)
{
    shaderSetColorreplace(
        replaceColor[0],myPal[1],replaceColor[1],myPal[0]
    );
    draw_sprite(explosionSprite,floor(explosionImg),xstart,ystart);
    shader_reset();
}


            


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

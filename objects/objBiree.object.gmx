<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBiree</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 6;
blockCollision = true;
grav = 0;

// Enemy specific code
image_speed = 0.25;
imgSpd = 0.25;
calibrated = 0;
dir = 0;
_dir = dir;
sp = 1;
db = 0;

// Variables for snapToGround
_velX = 0;
_velY = 0;
_prevCollision = true;
_groundDir = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (imgSpd == -1)
    imgSpd = image_speed;
event_inherited();

if (entityCanStep())
{
    if (!calibrated)
    {
        x = xstart;
        y = ystart;
        xspeed = 0;
        yspeed = 0;
        calibrated = 1;
        _dir = dir;
        _velX = 0;
        _velY = 0;
        _prevCollision = true;
        _groundDir = -1;
        snapToGround(sp); // let the script push the object out of the ground(
    }
    
    image_speed = imgSpd;
    
    if (!snapToGround(sp))
    {
        event_user(EV_DEATH); // die if something goes wrong
    }
    
    if (sprite_index == sprBiree) // Biree actually changes image_xscale, but not its offshoots
    {
        switch (dir)
        {
            case 1:
                if (sign(_velX) == 1) || (sign(_velY) == -1)
                    image_xscale = 1;
                if (sign(_velX) == -1) || (sign(_velY) == 1)
                    image_xscale = -1;
                break;
            case -1:
                if (sign(_velX) == -1) || (sign(_velY) == -1)
                    image_xscale = -1;
                if (sign(_velX) == 1) || (sign(_velY) == 1)
                    image_xscale = 1;
                break;
        }
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On spawn/despawn
event_inherited();
if (dir == 0)
{
    dir = choose(-1, 1);
    _dir = dir;
}
if (spawned)
{
    calibrated = 0;
    image_index = 0;
    if (sprite_index == sprBiree) || (sprite_index == sprGiree) || (sprite_index == sprSmaplar)
    image_xscale = dir;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// only tolerate objects that actually hit it
event_inherited();
global.damage = 0;
specialDamageValue(objBreakDash, 4);
isTargetable = false;
if (global.damage == 0)
{
    other.guardCancel = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

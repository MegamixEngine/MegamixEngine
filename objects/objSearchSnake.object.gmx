<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSearchSnake</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 2;

penetrate = 0;
pierces = 0;

blockCollision = 1;
grav = 0;

playSFX(sfxBuster);

calibrated = false;
phase = 0;
animTimer = 0;
spd = 3;

// Variables for snapToGround()
_groundDir = -1;
_dir = 1;
_velX = 0;
_velY = 0;
_prevCollision = 0;

gravDir = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_xscale = 1;
image_yscale = 1;
if (!global.frozen &amp;&amp; canDamage)
{
    if (phase == 0) // Coming out
    {
        if (xcoll != 0)
        {
            xspeed = xcoll;
        }
        if (ycoll != 0)
        {
            yspeed = ycoll;
        }
            
        if (sign(grav) == 1)
        {
            _groundDir = 270;
            image_index = 0;
            gravDir = 1;
        }
        else
        {
            _groundDir = 90;
            image_index = 2;
            gravDir = -1;
        }
        
        if (xcoll != 0 || ycoll != 0)
        {
            phase = 1;
        }
        
        if (phase == 1)
        {
            grav = 0;
            yspeed = 0;
            xspeed = 0;
            
            // Make sure its aligned with a solid
            if (ycoll &gt; 0)
            {
                shiftObject(0, 2, 1);
                grav = 0.25;
                _groundDir = 270;
                checkGround();
            }
            else if (ycoll &lt; 0)
            {
                _groundDir = 90;
                shiftObject(0, -2, 1);
                grav = -0.25;
                checkGround();
            }
            else if (xcoll &gt; 0)
            {
                _groundDir = 0;
                shiftObject(2, 0, 1);
            }
            else if (xcoll &lt; 0)
            {
                _groundDir = 180;
                shiftObject(-2, 0, 1);
            }
        }
    }
    else if (phase == 1) // Attached to solids
    {
        //var gravDir = sign(grav);
        //if (instance_exists(parent))
        //    gravDir = parent.gravDir;
        
        if (!snapToGround(spd, 4, 1))
        {
            event_user(EV_DEATH); // Die if the script fails
        }
        else if ((gravDir == 1 &amp;&amp; _groundDir == 90) || (gravDir == -1 &amp;&amp; _groundDir == 270)) // Also die if on a ceiling
        {
            event_user(EV_DEATH);
        }
        switch (_groundDir)
        {
            case 90:
            case 270:
                if (sign(_velX) == _dir)
                {
                    image_index = 0;
                }
                else
                {
                    image_index = 2;
                }
                break;
            case 180:
            case 0:
                if (sign(_velY) &gt; 0)
                {
                    image_index = 4;
                }
                else
                {
                    image_index = 6;
                }
                break;
        }
    }
    
    image_index += (_dir == -1) * 8 + (animTimer div 5) mod 2;
    
    animTimer += 1;
    if (phase == 0)
    {
        if (animTimer &gt;= 30)
            animTimer = 0;
    }
    else if (animTimer &gt;= 10)
        animTimer = 0;
}
else if (!canDamage)
{
    blockCollision = false;
    grav = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fire weapon
if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    var i = fireWeapon(13, 0, objSearchSnake, 3, 0.5, 1, 0);
    if (i)
    {
        i.yspeed = -3 * image_yscale;
        i.xspeed = 1 * image_xscale;
        i._dir = image_xscale;
        if (gravDir == -1)
            i._dir *= -1;
        i.grav = 0.3 * image_yscale;
        if (i.grav &gt; 0)
        {
            i._groundDir = 270;
        }
        else
        {
            i._groundDir = 90;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set special damage values
specialDamageValue("grounded", 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Mega Man's palette
weaponSetup("SEARCH SNAKE", make_color_rgb(0, 184, 0), make_color_rgb(248, 248, 248), sprWeaponIconsSearchSnake);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

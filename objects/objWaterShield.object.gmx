<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaterShieldBubble</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 1;
inWater = -1;

pierces = 0;

inWater = -1;

distance = 20;
velocity = 0;
total = 8;
count = 0;

isMaster = false;

rotationSpeed = 360 / 60;

spawnOffset = 360 / total;
angle = spawnOffset;
spawnAfter = 360 + spawnOffset;

shiftVisible = 2;
despawnRange = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen || instance_exists(objSectionSwitcher))
{
    if (instance_exists(parent))
    {
        image_yscale = parent.image_yscale;
        
        angle += rotationSpeed;
        
        x = min(view_xview + view_wview + 4, max(view_xview - 4, parent.x + lengthdir_x(distance, angle) * image_xscale));
        y = min(view_yview + view_hview + 4, max(view_yview - 4, parent.y - lengthdir_y(distance, angle) * -image_yscale + 4 * parent.image_yscale));
        
        if (isMaster) // Master bubble code, spawn other bubbles
        {
            if (angle &gt;= spawnOffset)
            {
                angle -= spawnOffset;
                count += 1;
                
                var i = instance_create(x, y, object_index);
                i.parent = parent;
                
                i.angle = angle;
                i.spawnAfter = spawnAfter - spawnOffset;
                spawnAfter = i.spawnAfter;
                i.image_xscale = image_xscale;
                i.image_yscale = image_yscale;
                
                if (count &gt;= total)
                {
                    instance_destroy();
                }
            }
        }
        else
        {
            visible = true;
            
            if (!global.frozen)
            {
                if (velocity == 0) // Spread out
                {
                    if (angle &gt;= spawnAfter + 45 &amp;&amp; global.keyShootPressed[parent.playerID])
                    {
                        with (parent)
                        {
                            if (!playerIsLocked(PL_LOCK_SHOOT))
                            {
                                playSFX(sfxWaterShield2);
                                with (objWaterShield)
                                {
                                    if (parent == other.id)
                                    {
                                        velocity = 0.1;
                                        despawnRange = 0;
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    velocity += 0.1;
                }
                
                distance += velocity;
                
                if (distance &gt; max(view_wview, view_hview))
                {
                    instance_destroy();
                    exit;
                }
            }
        }
    }
    else
    {
        event_user(EV_DEATH);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtEnemyProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canDamage)
{
    switch (other.reflectable)
    {
        case -1:
        case 1:
            playSFX(sfxEnemyHit);
            with (other)
            {
                instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
                instance_destroy();
            }
            instance_create(x, y, objBubblePopEffect);
            instance_destroy();
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(16, 0, objWaterShield, 1, 4, 1, 0);
    if (i)
    {
        playSFX(sfxWaterShield);
        i.isMaster = true;
        i.canHit = false;
        i.canDamage = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("fire", 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("WATER SHIELD", make_color_rgb(0, 112, 232), make_color_rgb(168, 224, 248), sprWeaponIconsWaterShield);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(sfxReflect);

instance_create(x, y, objBubblePopEffect);

event_user(EV_DEATH);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

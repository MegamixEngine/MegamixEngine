<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrusher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 6;

isTargetable = false;

grav = 0;
blockCollision = 1;
bubbleTimer = -1;

fallen = false;
goup = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (ground)
    {
        if (goup) // wait for a bit then go up
        {
            goup -= 1;
            if (!goup)
            {
                yspeed = -image_yscale;
                grav = 0;
            }
        }
        
        if (ycoll * image_yscale &gt; 0) // If hit the ground
        {
            // only play sfx if you can actually see it
            if (insideView())
            {
                playSFX(sfxTimeStopper);
            }
            yspeed = 0;
            goup = 64;
        }
    }
    
    if (!fallen)
    {
        if (yspeed == 0)
        {
            with (target)
            {
                with (other)
                {
                    if (abs(other.x - x) &lt; 40)
                    {
                        fallen = true;
                        grav = 0.5 * image_yscale;
                        yspeed = grav * 3;
                    }
                }
            }
        }
    }
    else
    {
        if (((y - ystart) * image_yscale &lt;= 0) || (ycoll * image_yscale &lt; 0))
        {
            yspeed = 0;
            fallen = false;
        }
    }
}
else if (dead)
{
    grav = 0;
    fallen = false;
    goup = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.guardCancel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!ground)
{
    drawSelf();
}
else
{
    draw_sprite_part(sprite_index, image_index, 0, 0, sprite_width,
        sprite_height - 2, x - sprite_xoffset, y - sprite_yoffset);
}

if (dead)
{
    exit;
}

var i = y - 6 - 16;
var endit = 0;

while (i &gt; view_yview - 16)
{
    var s = 0;
    if (collision_point(x, i, objSolid, false, false))
    {
        while (collision_point(x, i + s, objSolid, false, false))
        {
            s += 1;
            if (s == 16)
            {
                exit;
            }
            endit = 1;
        }
    }
    draw_sprite_part(sprCrusherChain, image_index, 0, s, 32, 16 - s, x - 16,
        i + s);
    i -= 16;
    if (endit)
    {
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

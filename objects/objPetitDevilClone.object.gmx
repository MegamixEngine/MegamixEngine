<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPetitDevilCloneGreen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPetitDevilGreen</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// angle = 0/90/180/270

event_inherited();

respawn = false;

healthpointsStart = 1;
healthpoints = healthpointsStart;

itemDrop = 0;

blockCollision = 0;
grav = 0;

floatTimer = 0;
init = 0;
canStep = false;
moveDir = 1;
refY = 0;
absSpeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// initialization
if (init == 0)
{
    // Set the correct color
    absSpeed = 3;
    canStep = true;
    
    init = 1;
}

if (entityCanStep())
{
    calibrateDirection();
    
    // Blinking
    blinkTimer += 1;
    switch (blinkTimer)
    {
        case 110:
            image_index = 1;
            break;
        case 113:
            image_index = 2;
            break;
        case 116:
            image_index = 1;
            break;
        case 119:
            image_index = 0;
            break;
        case 140:
            image_index = 1;
            break;
        case 143:
            image_index = 2;
            break;
        case 146:
            image_index = 1;
            break;
        case 149:
            image_index = 0;
            blinkTimer = 0;
            break;
    }
    
    // Movement
    if (absSpeed &gt; 0)
    {
        absSpeed -= 0.1;
        xspeed = cos(degtorad(angle)) * absSpeed * moveDir;
        yspeed = -sin(degtorad(angle)) * absSpeed;
    }
    else
        absSpeed = 0;
    
    // Floating
    floatTimer += 1;
    if (floatTimer &gt;= 70)
    {
        if (floatTimer == 70)
        {
            refY = y;
            yspeed = -0.11;
        }
        
        if (y &lt; refY)
            yspeed += 0.005;
        else if (y &gt; refY)
            yspeed -= 0.005;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

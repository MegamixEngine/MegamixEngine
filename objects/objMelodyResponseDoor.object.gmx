<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMelodyResponseDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// creation code - change this in the topmost door object
// BOTH OF THESE VARIABLES ARE IGNORED IF A MELODY RESPONSE CANNON IS IN EXISTANCE - But this does mean that yes, you can use this door and buttons by itself if you wish.
// allButtons = true; // if set to true, the melody response cannon will use every button in a random order.
// buttonsToPress = &lt;number&gt; ; // how many buttons the player has to press. if the previous variable is set to true, then this variable is ignored!
mySolid = noone;
alarm[0] = 1;

animTimer = 0;
destroyTimer = -1;
image_speed = 0;

// creation code variables
allButtons = false;
buttonsToPress = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mySolid = instance_create(x, y, objSolidIndependent);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.frozen)
{
    mySolid.image_yscale = image_yscale;
    
    if (animTimer &gt; 0 &amp;&amp; animTimer &lt; 48)
    {
        animTimer++;
        image_index = ((animTimer / 2) mod 3) + 1;
    }
    
    if (animTimer == 48)
    {
        if (destroyTimer == -1)
        {
            image_index = 0;
            destroyTimer = 32;
        }
        if (destroyTimer &gt; 0)
        {
            destroyTimer--;
        }
        if (destroyTimer == 0 &amp;&amp; image_yscale &gt; 1)
        {
            playSFX(getGenericSFX(SFX_DOOR));
            image_yscale--;
            destroyTimer = 8;
        }
        else if (destroyTimer == 0)
        {
            playSFX(getGenericSFX(SFX_DOOR));
            with (mySolid)
            {
                instance_destroy();
            }
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while (place_meeting(x, y + 4, object_index))
{
    while (place_meeting(x, y + 4, object_index))
    {
        with (instance_place(x, y + 4, object_index))
        {
            instance_destroy();
        }
    }
    image_yscale += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i &lt; image_yscale; i++)
{
    draw_sprite(sprite_index, image_index, x, y + (16 * i));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

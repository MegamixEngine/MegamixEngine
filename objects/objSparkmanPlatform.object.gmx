<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSparkmanPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

grav = 0;
bubbleTimer = -1;

isSolid = 1;
faction = 7;

//@cc The vertical acceleration
acc = 0.15;

// Because moving in sub-pixels messed up collision, we need a value that keeps track of the sub-pixels, and only use real pixels for yspeed
subY = 0;
subYspeed = 0;
maxSpeed = 3;
decendSpeed = 1;
phase = 0; // 0 = not moving; 1 = moving up; 2 = moving down

test = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    if (phase == 0)
    {
        with (objMegaman)
        {
            if (place_meeting(x, y + gravDir, other.id))
            {
                if (ground)
                {
                    with (other)
                    {
                        yspeed = acc * -sign(image_yscale);
                        phase = 1;
                    }
                }
            }
        }
    }
    
    if (phase == 1) // Moving up
    {
        yspeed -= (acc * sign(image_yscale));
        if (yspeed * sign(image_yscale) &lt;= -maxSpeed)
        {
            yspeed = -maxSpeed * sign(image_yscale);
        }
        
        if (ycoll != 0 || place_meeting(x, y, objSparkmanPlatformStop))
        {
            yspeed = 0;
            phase = 2;
        }
    }
    else if (phase == 2) // Moving down
    {
        yspeed = decendSpeed * sign(image_yscale);
        if ((y &gt;= ystart &amp;&amp; sign(image_yscale) == 1) || (y &lt;= ystart &amp;&amp; sign(image_yscale) == -1))
        {
            yspeed = ystart - y;
            yspeed = 0;
            phase = 0;
        }
    }
}
else if (dead)
{
    phase = 0;
    subYspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

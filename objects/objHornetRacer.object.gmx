<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHornetRacer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// attackTimerMax = &lt;number&gt; how long Hornet Racer waits for. default is 70.
// image_yscale = 1 or -1 //(Use editor for this!!) // if -1, and placed below where Mega Man will be - Hornet Racer will jump up rather than jump down will go up instead of down at beginning.

event_inherited();
healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 3;
category = "flying, nature";
blockCollision = 0;
grav = 0;

// Enemy specific code
passedTarget = false;
minusX = 0;
timer = 0;
timerMax = 70;
hasFired = false;
targetX=0;
targetY=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    timer += 1;
    if (timer &lt; timerMax) // as long as stationary, animate
    {
        calibrateDirection();
        image_index += 0.125;
        if (image_index == 2)
        {
            image_index = 0;
        }
    }
    else if (!hasFired &amp;&amp; target != noone) // divebomb!
    {
        image_index = 2;
        if(instance_exists(target))
        {
            if (image_yscale == 1)
            {
                yspeed = ySpeedAim(y, target.y, -0.25 * image_yscale);
                xspeed = xSpeedAim(x, y, target.x, target.y, yspeed, 0.001);
            }
            else
            {
                yspeed = ySpeedAim(y, target.y - 8, -0.25 * image_yscale);
                xspeed = xSpeedAim(x, y, target.x, target.y-8, yspeed,0.001);
            }
            targetX=target.x;
            targetY=target.y;
        }
        minusX = 0 - xspeed;
        hasFired = true;
    }
    else
    {
        if ((y &gt; ystart &amp;&amp; image_yscale == 1) || (y &lt; ystart &amp;&amp; image_yscale == -1))
        {
            yspeed -= 0.25 * image_yscale;
        }
        else
        {
            yspeed = 0;
            y = ystart;
        }
        if ((xspeed &gt; 0 &amp;&amp; x &gt; targetX) || (xspeed &lt; 0 &amp;&amp; x &lt; targetX))
        {
            passedTarget = true;
        }
        if ((xspeed &gt; minusX || xspeed &lt; minusX) &amp;&amp; passedTarget)
        {
            xspeed -= (abs(minusX) * 0.10) * image_xscale;
        }
        if (y == ystart &amp;&amp; yspeed == 0)
        {
            xspeed = 0;
            hasFired = false;
            timer = 0;
            passedTarget = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ysc = image_yscale;
image_yscale = abs(image_yscale);
event_inherited();
image_yscale = ysc;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlader</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// An enemy infamous for being pretty annoying. It'll erratically try to home in on Mega
// Man, and it moves very quickly. Luckily, it has only 1 HP.

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "cluster, flying";

blockCollision = 0;
grav = 0;
targetY = 0;

facePlayerOnSpawn = true;

// Enemy specific code
image_speed = 0.25;

timer = 0;
phase = 1;

//@cc 0 = green (default); 1 = blue
col = 0;
init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set color on spawn
if (init)
{
    init = 0;
    switch (col)
    {
        case 0:
            sprite_index = sprBlader;
            break;
        case 1:
            sprite_index = sprBladerBlue;
            break;
    }
}

event_inherited();

if (entityCanStep())
{
    image_speed = 0.25;
    timer++;
    switch (phase)
    {
        case 1: // Look for target 
            xspeed = 1.5 * image_xscale;
            if (target &amp;&amp; timer &gt;= 30)
            {
                if (abs(target.x - x) &lt; 48 &amp;&amp; yspeed == 0 &amp;&amp; round(target.y) != round(y))
                {
                    xspeed = (target.x - x) / 24;
                    yspeed = (target.y - y) / 24;
                    targetY = target.y;
                    phase = 2;
                    calibrateDirection();
                }
            }
            break;
        case 2: // Swoop at target 
            yspeed += 0.025 * sign(yspeed);
            xspeed += 0.025 * sign(xspeed);
            if (sign(y - targetY) == sign(yspeed))
            {
                phase = 3;
                yspeed = -yspeed;
            }
            break;
        case 3: // Move back to original height 
            yspeed -= 0.025 * sign(yspeed);
            xspeed -= 0.025 * sign(xspeed);
            if (sign(y - ystart) == sign(yspeed))
            {
                timer = 0;
                phase = 1;
                xspeed = 0;
                yspeed = 0;
                shiftObject(0, ystart - y, blockCollision);
                calibrateDirection();
            }
            break;
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On spawn
event_inherited();

timer = 0;
phase = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

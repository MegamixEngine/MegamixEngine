<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPelicanuFish</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = false;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

itemDrop = -1;

// enemy specific
killTimer = 0;

grav = 0.1;

animBack = false;
imgSpd = 0.2;
imgIndex = 0;
shaderColor = false;
shaderColor = c_black;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // anim nation wow
    if (!animBack)
    {
        imgIndex += imgSpd;
        if (imgIndex &gt;= 3)
        {
            imgIndex = 2 - imgIndex mod 3;
            animBack = true;
        }
    }
    else
    {
        imgIndex -= imgSpd;
        if (imgIndex &lt; 0)
        {
            imgIndex = 1;
            animBack = false;
        }
    }
    
    // MAGIKARP, USE SPLASH!
    if (ground)
    {
        yspeed = -1.2;
        xspeed = random_range(-1.4, 1.4);
    }
    
    // ded temer
    killTimer += 1;
    if (killTimer &gt;= 100)
    {
        instance_create(x, y, objExplosion);
        instance_destroy();
    }
    
    // bE FREE
    if (inWater)
    {
        instance_destroy();
    }
}

// do dem bettar dan game mekar staets (if you can't tell, I'm getting bored)
image_index = imgIndex div 1;

if (useShader)
{
    sparkleTimer ++;
    if (!(sparkleTimer mod 6) &amp;&amp; sparkleTimer &lt; 30)
    {
        with (instance_create(bboxGetXCenter(), bboxGetYCenter(), objSlideDust))
        {
            sprite_index = sprShine;
            image_xscale = choose(1, -1);
            direction = irandom(360);
            rotationMovement(xstart, ystart, irandom_range(5, 12), 0);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (!useShader)
{
    event_inherited();
}
else//As wonderhooked fish are intangible, we don't need to worry about flash states.
{
    shaderSetColorreplace(make_color_rgb(0,236,220),shaderColor);
    iFrames = 0;//Failsafe in case I missed something.
    event_inherited();
    shader_reset();
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPowerMuscler</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// col = &lt;number&gt; (0 = red(default); 1 = green; 2 = game gear colouration; )

event_inherited();

healthpointsStart = 13;
healthpoints = healthpointsStart;
contactDamage = 8;

category = "big eye, bulky";

facePlayerOnSpawn = true;

// enemy specific
actionTimer = 0;
dummyTimer = 999;
slamTimer = 0;
imageOffset = 0;

col = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // turn around on hitting a wall
    xSpeedTurnaround();
    
    actionTimer += 1;
    
    if (actionTimer == 80)
    {
        dummyTimer = 0;
        imageOffset = 1;
        y -= 6;
        yspeed = -5;
        xspeed = 2 * image_xscale;
    }
    
    if (ground &amp;&amp; imageOffset == 1 &amp;&amp; actionTimer &gt; 85)
    {
        playSFX(sfxPowerLand);
        slamTimer = 0;
        imageOffset = 2;
        xspeed = 0;
        calibrateDirection();
        actionTimer = 0;
    }
    if (ground &amp;&amp; imageOffset != 1)
    {
        dummyTimer += 1;
        if (dummyTimer &gt; 10)
        {
            imageOffset = 0;
        }
        else if (dummyTimer &lt; 10 &amp;&amp; dummyTimer &gt; 4)
        {
            imageOffset = 2;
        }
        else
        {
            imageOffset = 0;
        }
    }
    
    if (imageOffset == 1)
    {
        if (collision_rectangle(x - 16, y, x + 16, y + 224, target, false,
            true) &amp;&amp; slamTimer == 0)
        {
            yspeed = 0;
            xspeed = 0;
            slamTimer = 120;
            
            if (image_xscale == 1)
            {
                instance_create(x - 12, y - 67, objPowerMusclerSmoke);
                instance_create(x + 6, y - 67, objPowerMusclerSmoke);
            }
            else
            {
                instance_create(x - 14, y - 67, objPowerMusclerSmoke);
                instance_create(x + 4, y - 67, objPowerMusclerSmoke);
            }
        }
        
        if (slamTimer == 105)
        {
            yspeed = 5;
        }
    }
    if (slamTimer &gt; 0)
    {
        slamTimer -= 1;
        yspeed -= grav;
    }
}
else if (dead)
{
    actionTimer = 0;
    dummyTimer = 999;
    slamTimer = 0;
    imageOffset = 0;
}

image_index = (3 * col) + imageOffset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (spawned)
{
    imageOffset = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

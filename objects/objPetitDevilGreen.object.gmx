<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPetitDevilGreen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// angle = 0/90/180/270

event_inherited();

itemDrop = -1;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "floating";

blockCollision = 0;
grav = 0;

facePlayer = true;

// Enemy specific code
angle = 0;
blinkTimer = 0;

fric = 0.011;
spd = 0.67;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (object_index != objPetitDevilClone)
{
    if (entityCanStep())
    {
        if (angle == 0 || angle == 180)
        {
            // Move horizontally
            if (x &gt; xstart)
                xspeed -= fric;
            else if (x &lt; xstart)
                xspeed += fric;
        }
        else
        {
            // Move vertically
            if (y &gt; ystart)
                yspeed -= fric;
            else if (y &lt; ystart)
                yspeed += fric;
        }
        
        // Blinking
        blinkTimer += 1;
        switch (blinkTimer)
        {
            case 110:
                image_index = 1;
                break;
            case 113:
                image_index = 2;
                break;
            case 116:
                image_index = 1;
                break;
            case 119:
                image_index = 0;
                break;
            case 140:
                image_index = 1;
                break;
            case 143:
                image_index = 2;
                break;
            case 146:
                image_index = 1;
                break;
            case 149:
                image_index = 0;
                blinkTimer = 0;
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_index = 0;

switch (angle)
{
    case 0:
        xspeed = spd;
        break;
    case 90:
        yspeed = -spd;
        break;
    case 180:
        xspeed = -spd;
        break;
    case 270:
        yspeed = spd;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (object_index == objPetitDevilGreen)
{
    var refX = spriteGetXCenter();
    var refY = spriteGetYCenter();
    
    with (instance_create(refX, refY, objPetitDevilClone))
    {
        angle = 60;
        moveDir = other.image_xscale;
        sprite_index = sprPetitDevilCloneGreen;
    }
    
    with (instance_create(refX, refY, objPetitDevilClone))
    {
        angle = 360 - 15;
        moveDir = other.image_xscale;
        sprite_index = sprPetitDevilCloneGreen;
    }
    
    with (instance_create(refX, refY, objPetitDevilClone))
    {
        angle = 360 - 50;
        moveDir = other.image_xscale;
        sprite_index = sprPetitDevilCloneGreen;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

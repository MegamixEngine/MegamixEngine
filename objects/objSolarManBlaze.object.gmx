<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSolarSunMedium</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
grav = 0;
itemDrop = -1;
respawn = false;
despawnRange = sprite_height + 1;
stopOnFlash = false;
image_speed = 0.2;
size = 0;
isWave = 0;
isFlying = 0;
isBomb = 0; // Detonate when at Mega Man's Y?
reflectable = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    if ((!isWave) &amp;&amp; (!isFlying))
    {
        y += 3;
    }
    else if (isFlying)
    {
        y -= 6;
        if ((bbox_bottom &lt; view_yview) &amp;&amp; (instance_exists(target)))
        {
            // Fire Solar Blaze
            var i = instance_create(target.x, view_yview, objSolarManBlaze);
            i.size = size;
            i.isBomb = true;
            i.blockCollision = true;
            instance_destroy();
        }
    }
    
    if (size == 0)
    {
        if (isWave == 0)
        {
            sprite_index = sprSolarSunSmall;
        }
        else
        {
            sprite_index = sprSolarBlazeSmall;
        }
        contactDamage = 4;
    }
    else if (size == 2)
    {
        if (isWave == 0)
        {
            sprite_index = sprSolarSunLarge;
        }
        else
        {
            sprite_index = sprSolarBlazeLarge;
        }
        contactDamage = 6;
    }
    else
    {
        if (isWave == 1)
        {
            sprite_index = sprSolarBlazeMedium;
        }
        contactDamage = 5;
    }
    
    if (checkSolid(0, 0, 1, 1) &amp;&amp; (!isWave) &amp;&amp; (!isFlying)
        || (instance_exists(target)) &amp;&amp; (y &gt;= target.y) &amp;&amp; (isBomb))
    {
        repeat (2)
        {
            image_xscale *= -1;
            
            var i = instance_create(x, y, objSolarManBlaze);
            i.isWave = true;
            i.size = size;
            i.image_xscale = image_xscale;
            i.contactDamage = contactDamage;
            i.blockCollision = 0;
            i.xspeed = 4 * image_xscale;
        }
        
        // Play sound effects
        switch (size)
        {
            case 0:
                playSFX(sfxSolarBlazePopSmall);
                break;
            case 1:
                playSFX(sfxSolarBlazePop);
                break;
            case 2:
                playSFX(sfxSolarBlazePopLarge);
                break;
        }
        instance_create(x, y, objExplosion);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index == objWaterShield)
{
    instance_create(x, y, objExplosion);
    event_user(EV_DEATH);
}
else if ((other.object_index != objTornadoBlow) &amp;&amp; (other.object_index != objRainFlush))
{
    with (other)
    {
        if ((penetrate &lt;= 2) &amp;&amp; (pierces &lt;= 2))
        {
            guardCancel = 2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

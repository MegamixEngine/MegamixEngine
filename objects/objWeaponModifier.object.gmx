<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWeaponIconsMegaBuster</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPickup</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// An item that, upon touching, will unlock, lock, or force-set you to a specific weapon depending on what you set.
// The default is to unlock the weapon.

event_inherited();

grabable = 0;
heavy = 1;
respawnupondeath = 0;

// @cc the weapon object to lock on room start + unlock when touched
weapon = 0;

// @cc if this is set to true, the weapon will be locked instead of unlocked when obtained
lockWeapon = false;

// @cc if this is set to true, it'll lock you TO the weapon in this capsule (ala IC, Hardccore Parkour etc) instead of just unlocking it
lockToWeapon = false;

// @cc if this is true along with lockToWeapon, the buster will be locked along with all other weapons.
lockBuster = true;

// @cc if this is set to true, the unlocked weapon will also gain infinite energy
infiniteEnergy = false;

// @cc if this is set to true, will appear as a level reward at the end of the stage
levelReward = false;

//@cc destroy if already unlocked
destroyIfUnlocked = false;

// other variables
flashTimer = 0;
weaponID = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (destroyIfUnlocked &amp;&amp; !global.weaponLocked[global.weaponID[? weapon]])
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playSFX(sfxImportantItem);

weaponID = global.weaponID[? weapon];

if (levelReward)
{
    weaponReward(weapon);
}

// lock all weapons
if (lockToWeapon)
{
    for (var i = 0; i &lt;= global.totalWeapons; i += 1)
    {
        if ((i == 0 &amp;&amp; lockBuster) || (i != 0))
        {
            global.weaponLocked[i] = true;
        }
    }
}

// unlock the capsule's weapon
global.weaponLocked[weaponID] = lockWeapon;

// set infinite energy
if (infiniteEnergy)
{
    global.infiniteEnergy[weaponID] = true;
}

// set players to use the weapon
with (objMegaman)
{
    if (other.lockWeapon)
    {
        global.keyWeaponSwitchRight[playerID] = true;
        playerSwitchWeapons();
    }
    else
    {
        global.weapon[playerID] = other.weaponID;
    }
    playerPalette();
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponID = global.weaponID[? weapon];

if (!dead)
{
    if (sprite_index == sprWeaponIconsMegaBuster)
    {
        var icon = global.weaponIcon[weaponID];
        
        // original sprite
        draw_sprite_ext(icon, 0, x, y, image_xscale, image_yscale, image_angle, c_white, 1);
        
        if (!lockWeapon)
        {
            // whitemasks
            draw_sprite_ext(icon, 1, x, y, image_xscale, image_yscale, image_angle, global.weaponPrimaryColor[weaponID], 1);
            draw_sprite_ext(icon, 2, x, y, image_xscale, image_yscale, image_angle, global.weaponSecondaryColor[weaponID], 1);
            
            // extra
            draw_sprite_ext(icon, 3, x, y, image_xscale, image_yscale, image_angle, c_white, 1);
        }
        
        // flash if it's a locker
        if (lockToWeapon)
        {
            flashTimer++;
            
            if (flashTimer &gt;= 30)
            {
                d3d_set_fog(true, c_white, 0, 0);
                drawSelf();
                d3d_set_fog(false, 0, 0, 0);
                
                if (flashTimer == 35)
                {
                    flashTimer = 0;
                }
            }
        }
    }
    else
    {
        drawSelf();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

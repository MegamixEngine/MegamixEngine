<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTruckjoe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMiniBoss</parentName>
  <maskName>mskTruckJoe</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// image_xscale = 1 or -1 //(Use editor for this!!) // determines the direction Truck Joe is locked in.
event_inherited();
respawn = true;
introSprite = sprTruckJoeTeleport;
healthpointsStart = 18;
healthpoints = healthpointsStart;
contactDamage = 3;
blockCollision = 1;
grav = 0.325;
category = "bulky, joes";

penetrate = 3;

despawnRange = -1;
behaviourType = 4;

image_speed = 0;
image_index = 1;

faction = 5;

// Enemy specific code
spdF = 1.25;
spdB = 0.75;
phase = 0;
lockID = noone;

carFrame = 0;
joeFrame = 0;

strMMX = 0;
strMMY = 0;

overrideX = x;
overrideY = y;

animTimer = 0;

shotsFired = 0;
attackTimer = 0;

moveDir = image_xscale;

// creation code variables

//@cc The speed Truck Joe runs forwards
spdF = 1;

//@cc The speed Truck Joe runs backwards
spdB = 0.75;

//@cc If set to false, Truck Joe will not destroy terrain he collides with
destroyTerrain = true;

//@cc 0 = teleport in / 1 = move in
introType = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep() &amp;&amp; introTimer &gt; 0 &amp;&amp; introType)
{
    if (image_xscale == -1)
    {
        x = view_xview[0] + view_wview[0];
    }
    else
    {
        x = view_xview[0] - sprite_xoffset;
    }
    introTimer = 0;
    phase = -9999;
}

if (entityCanStep()
    &amp;&amp; introTimer &lt;= 0)
{
    if (instance_exists(target))
    {
        strMMX = target.x;
        strMMY = target.y;
    }
    
    if (destroyTerrain)
    {
        while (place_meeting(x + 4 * (sign(xspeed)), y, objSolid))
        {
            with (instance_place(x + 4 * (sign(xspeed)), y, objSolid))
            {
                if (image_xscale &gt; 1 || image_yscale &gt; 1)
                {
                    splitSolid();
                }
                else
                {
                    instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
                    playSFX(sfxEnemyHit);
                    instance_create(x, y, objRollingDrillField);
                    instance_deactivate_object(id);
                }
            }
        }
    }
    
    switch (phase)
    {
        case -9999: // intro 
            xspeed = image_xscale * 0.75;
            carFrame += 0.25;
            canHit = false;
            canDamage = false;
            if (carFrame &gt;= 3)
            {
                carFrame = 0;
            }
            if ((x &lt;= xstart &amp;&amp; image_xscale == -1) || (x &gt;= xstart &amp;&amp; image_xscale == 1))
            {
                xspeed = 0;
                phase = 0;
                
                canHit = true;
                canDamage = true;
            }
            break;
        case 0: // run towards mega man 
            var collider = instance_place(x + 8 * image_xscale, y, objTruckJoeStop);
            if (abs(xspeed) &lt; spdF &amp;&amp; !collider || collider &amp;&amp; x &lt; collider.x)
            {
                xspeed += image_xscale * 0.05;
            }
            else if (!collider || collider &amp;&amp; x &lt; collider.x)
            {
                xspeed = image_xscale * spdF;
            }
            else
            {
                xspeed = 0;
            }
            animTimer++;
            if (animTimer == 64)
            {
                joeFrame = 1;
            }
            if (animTimer &gt;= 72)
            {
                joeFrame = 0;
            }
            if (xspeed != 0)
            {
                carFrame += 0.25;
            }
            if (carFrame &gt;= 3)
            {
                carFrame = 0;
            }
            if ((strMMX &gt;= x &amp;&amp; image_xscale == -1) || (strMMX &lt;= x &amp;&amp; image_xscale == 1))
            {
                phase = 1;
            }
            break;
        case 1:
        case 3: // change direction 
            if (xspeed &gt; 0.25) // slow down
            {
                xspeed -= 0.25;
            }
            else if (xspeed &lt; -0.25)
            {
                xspeed += 0.25;
            }
            else
            {
                xspeed = 0;
            }
            if (joeFrame &lt; 2)
            {
                joeFrame = 2;
            }
            attackTimer++;
            switch (attackTimer)
            {
                case 8:
                    if (phase == 1)
                        joeFrame = 2;
                    else
                        joeFrame = 5;
                    break;
                case 16:
                    if (phase == 1)
                        joeFrame = 3;
                    else
                        joeFrame = 4;
                    break;
                case 24:
                    if (phase == 1)
                        joeFrame = 4;
                    else
                        joeFrame = 3;
                    break;
                case 32:
                    if (phase == 1)
                    {
                        joeFrame = 5;
                    }
                    else
                    {
                        phase = 0;
                        joeFrame = 0;
                        attackTimer = 0;
                        animTimer = 0;
                    }
                    break;
                case 48:
                    joeFrame = 6;
                    break;
                case 54:
                    joeFrame = 7;
                    break;
                case 60:
                    joeFrame = 8;
                    break;
                case 64:
                    joeFrame = 9;
                    phase = 2;
                    attackTimer = 0;
                    animTimer = 0;
                    break;
            }
            break;
        case 2: // run backwards mega man 
            if (abs(xspeed) &lt; spdB &amp;&amp; !place_meeting(x - 8 * image_xscale, y, objTruckJoeStop))
            {
                xspeed += -image_xscale * 0.05;
            }
            else if (!place_meeting(x - 8 * image_xscale, y, objTruckJoeStop))
            {
                xspeed = -image_xscale * spdB;
            }
            else
            {
                xspeed = 0;
            }
            if (xspeed != 0)
            {
                carFrame -= 0.25;
            }
            if (carFrame &lt;= -1)
            {
                carFrame = 2;
            }
            if ((strMMX &lt;= x &amp;&amp; image_xscale == -1) || (strMMX &gt;= x &amp;&amp; image_xscale == 1))
            {
                phase = 3;
            }
            break;
    
    
    }
}
if (dead)
{
    x = overrideX;
    y = overrideY;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.y &gt; y - 9)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>overrideX = x;
overrideY = y;

event_inherited();

alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw code</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, 1 + ceil(clamp(carFrame, 0, 2)), round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
if (floor(carFrame) == 1)
    draw_sprite_ext(sprite_index, 4 + joeFrame, round(x), round(y) + 1, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
else
    draw_sprite_ext(sprite_index, 4 + joeFrame, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// handles stuff differently than the Puny Regular Enemies....
if (introTimer &gt; 0 &amp;&amp; doesIntro)
{
    draw_sprite_ext(introSprite, 2 - (min(2, min(introTimer, 15) / 5)), x,
        y - max(introTimer - 10, 0) * image_yscale, image_xscale, image_yscale, 0, c_white, 1);
}
else
{
    // this debug message should be left in until
    // the spawn system stops breaking every week.
    
    if (spawned == -1)
    {
        show_debug_message(object_get_name(object_index) + " drawn without having ever spawned!");
    }
    if ((ceil(iFrames / 2) mod 4) || !iFrames)
    {
        if ((ceil(iFrames / 2) mod 2) || (iceTimer &gt; 0))
        {
            var flashcol = c_white;
            if (iceTimer &gt; 0)
            {
                flashcol = make_color_rgb(0, 120, 255);
            }
            
            d3d_set_fog(true, flashcol, 0, 0);
            event_user(2);
            d3d_set_fog(false, 0, 0, 0);
            
            if (iceTimer &gt; 0)
            {
                draw_set_blend_mode(bm_add);
                event_user(2);
                draw_set_blend_mode(bm_normal);
            }
        }
        else
        {
            event_user(2);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

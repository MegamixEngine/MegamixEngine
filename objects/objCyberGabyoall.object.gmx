<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCyberGabyoallLightEye</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// dir = 1/-1 (1 = ground (default); -1 = ceiling)

event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;
grav = 0;

facePlayerOnSpawn = true;

// respawnRange = -1;

// enemy specific code
// Now set the weaknesses
enemyDamageValue(objThunderBeam, 3);
enemyDamageValue(objBreakDash, 3);
enemyDamageValue(objIceWall, 3);
enemyDamageValue(objSakugarne, 3);
enemyDamageValue(objThunderWool, 3);
enemyDamageValue(objIceSlasher, 3);
dir = 1;
init = 1;

phase = 1;
boost = false;
cooldown = 0;

normalSpd = 0.5;
boostSpd = 2.2;

stopped = false;
alarmStop = -1;

blinkTimer = 0;
imgSpd = 0.4;
imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Upside Down setup
if (init)
{
    init = 0;
    if (dir == -1)
    {
        image_yscale = -1;
        y += 16;
        ystart += 16;
    }
}

// Code
event_inherited();

if (entityCanStep())
{
    if (!stopped)
    {
        if (xspeed == 0 || !positionCollision(x + sprite_width / 4, y + sprite_height + 1 * image_yscale))
        {
            image_xscale *= -1;
            
            if (boost)
            {
                // end boost stuff
                boost = false;
                cooldown = 60; // &lt;-- cooldown wait time here
                imgIndex = 0;
            }
            else
            {
                cooldown = 0;
            }
        }
        
        if (instance_exists(target))
        {
            switch (phase)
            {
                // Behavior
                case 1:
                    if (cooldown == 0)
                    {
                        if (!boost &amp;&amp; collision_line(x - 512,
                            y + sprite_height - image_yscale, x + 512,
                            y + sprite_height, target, false, true))
                        {
                            boost = true;
                            imgIndex = 1;
                            playSFX(sfxEnemyBoost);
                        }
                        else if (boost &amp;&amp; !collision_line(x - 512,
                            y + sprite_height - image_yscale, x + 512,
                            y + sprite_height, target, false, true))
                        {
                            // end boost stuff
                            boost = false;
                            cooldown = 60; // &lt;-- cooldown wait time here
                            imgIndex = 0;
                        }
                    }
            }
        }
        
        if (cooldown != 0)
        {
            cooldown -= 1;
        }
        
        if (boost)
        {
            xspeed = boostSpd * image_xscale;
        }
        else
        {
            xspeed = normalSpd * image_xscale;
        }
        
        // animation
        blinkTimer += 1;
        if (blinkTimer &gt;= 12)
        {
            if (sprite_index == sprCyberGabyoallLightEye)
            {
                sprite_index = sprCyberGabyoallDarkEye;
            }
            else
            {
                sprite_index = sprCyberGabyoallLightEye;
            }
            blinkTimer = 0;
        }
        
        if (boost)
        {
            imgIndex += imgSpd;
            if (imgIndex &gt;= 4)
            {
                imgIndex = 2 + imgIndex mod 4;
            }
        }
    }
    else
    {
        xspeed = 0;
        boost = false;
        cooldown = 0;
        imgIndex = 0;
        alarmStop -= 1;
        if (!alarmStop)
        {
            stopped = false;
            xspeed = normalSpd * image_xscale;
        }
    }
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (spawned)
{
    xspeed = normalSpd * image_xscale;
    phase = 1;
    boost = false;
    cooldown = 0;
    imgIndex = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set all weapons to do no damage
global.damage = 0;
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.damage == 0)
{
    other.guardCancel = 3;
}

if (other.object_index == objBusterShotCharged)
{
    alarmStop = 120;
    stopped = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprThunderBeam</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

animIndex = 0;
animSpeed = 0.4;
contactDamage = 3;
inWater = -1;
image_speed = 0.5;

penetrate = 2;
pierces = 2;

myXSpeed = 8;
myYSpeed = 0;

attackDelay = 16;
autoFireSet = 12;

cAngle = 180;
addAngle = 20.571;
cDistance = 16;
multPal[0] = $78D8F8;
multPal[1] = $0010A8;
multPal[2] = $105CE4;
multPal[3] = $F8B8B8;
multPal[4] = $D8E800;


playSFX(sfxThunderBeam);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    // snakey movement
    animIndex += animSpeed;
    xspeed = 0;
    yspeed = 0;
    spawnTimer = 0;
    
    if (floor(animIndex) != floor(animIndex + animSpeed))
    {
        // new frame
        if (floor(animIndex + animSpeed) != 5) // frame 5 does not advance
        {
            // only move on this frame
            xspeed = myXSpeed;
            yspeed = myYSpeed;
        }
    }
    
    if (animIndex &gt;= image_number)
    {
        animIndex -= image_number;
    }
    if (animIndex &lt; 0)
    {
        animIndex += image_number;
    }
    
    image_index = floor(animIndex);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (performShoot)
{
    var ammoCost = 1.5 - (0.25 * (global.energySaver &gt; 0));
    
    for (var z = 0; z &lt;= 2; z += 1)
    {
        i = fireWeapon(16, image_yscale * (ground == false), objThunderBeam, (z == 0), ammoCost * (z == 0), 1, 0);
        
        if (i)
        {
            if (z != 1) // Vertical beam
            {
                
                i.sprite_index = sprThunderBeamVertical;
                i.y += (z - 1) * 4;
                i.myXSpeed = 0;
                i.myYSpeed = 8 * (z - 1);
                ;
                if (i.myYSpeed &gt; 0)
                {
                    i.image_yscale = -1 + (-3 * checkCheats(cheatEnums.hugeWeapons));
                }
                if (i.myYSpeed &gt; 0)
                {
                    i.animSpeed *= -1;
                }
            }
            else // Horizontal beam
            {
                i.x += 16 * image_xscale;
                i.myXSpeed = 8 * image_xscale;
            }
        }
        else
        {
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("flying", 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("THUNDER BEAM", make_color_rgb(120, 120, 120), make_color_rgb(255, 222, 132), sprWeaponIconsThunderBeam);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//show_debug_message("outside before: " + sprite_get_name(sprite_index));
with (other)
{
//show_debug_message("inside : " + sprite_get_name(sprite_index));
//show_debug_message("outside : " + sprite_get_name(other.sprite_index));
    iFrames = max(iFrames, 24);
    
    repeat (16)
    {
        i = instance_create(irandom_range(bbox_left, bbox_right), irandom_range(bbox_top, bbox_bottom), objSingleLoopEffect);
        i.sprite_index = sprShine;
        i.image_speed = 0.1 * irandom_range(1, 3);
    }
}

playSFX(sfxReflect);

event_user(EV_DEATH);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.multiplayerColors &amp;&amp; global.playerCount &gt; 1)
{
    shaderSetColorreplace(
        multPal[0], global.multiplayerPalette[playerID,global.weapon[playerID]]
    );
}

event_inherited();

if (global.multiplayerColors &amp;&amp; global.playerCount &gt; 1)
{
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBariIIIWave</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
blockCollision = false;
canCollide = true;
grav = false;
angle = 25;
spd = 2;
contactDamage = 3;
deathTimer = -1;
i = 0;
image_speed = 0.16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _xsp = xspeed;
var _ysp = yspeed;
event_inherited();

if (entityCanStep())
{
    var collided = false;
    if (canCollide)
    {
        if (!collided)
        {
            var ts = instance_place(x, y + yspeed, objTopSolid);
            if (place_meeting(x, y + yspeed, objSolid) || (yspeed &gt; 0 &amp;&amp; ts != noone &amp;&amp; bbox_bottom - 1 &gt; ts.bbox_top))
            {
                yspeed *= -1;
                collided = true;
            }
        }
        if (!collided)
        {
            if (place_meeting(x + xspeed, y, objSolid))
            {
                xspeed *= -1;
                collided = true;
            }
        }
    }
    else
    {
        if (place_meeting(x, y, objSolid))
        {
            deathTimer = 0;
        }
    }
    if (collided)
    {
        canCollide = false;
    }
    
    image_xscale = sign(xspeed);
    image_yscale = -sign(yspeed);
    
    if (deathTimer != -1)
    {
        deathTimer += 1;
        if (deathTimer mod 2)
        {
            visible = true;
        }
        else
        {
            visible = false;
        }
        
        if (deathTimer &gt; 60)
        {
            instance_destroy();
            exit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = other.image_xscale;
image_yscale = i;
xspeed = image_xscale * abs(cos(degtorad(angle)) * spd);
yspeed = image_yscale * abs(sin(degtorad(angle)) * spd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMetallK1000</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;
category = "grounded, mets";

facePlayerOnSpawn = true;

// Enemy specific code
xspeed = 0;
yspeed = 0;
cSpeed = 1;
delay = 0;
headUp = false;
imageOffset = 0;
radius = 80;
shootTimer = -1;
turnTimer = 0;
boomCounter = 0;
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    imageOffset += 0.10;
    if (imageOffset &gt;= 3)
    {
        imageOffset = 0;
    }
    
    if (turnTimer == 0)
    {
        image_index = (4 * headUp) + (imageOffset);
    }
    else if (turnTimer &gt; 7)
    {
        image_index = 8;
    }
    else
    {
        image_index = 9;
    }
    
    
    if (xcoll!=0 )
    {
        turnTimer = 14;
        image_index = 9;
        image_xscale = -image_xscale;
        boomCounter += 1;
    }
    
    if (shootTimer &lt;= 0 &amp;&amp; turnTimer == 0)
    {
        delay += 1;
        switch (delay)
        {
            case 0:
                xspeed = cSpeed * image_xscale;
                break;
            case 1:
                xspeed = ((cSpeed * 2) * image_xscale) * headUp;
                break;
            case 2:
                xspeed = cSpeed * image_xscale;
                break;
            case 3:
                delay = 0;
                break;
        }
    }
    
    if (instance_exists(target))
    {
        if (abs(target.x - x) &lt;= radius &amp;&amp; shootTimer == -1)
        {
            headUp = true;
            shootTimer = 60;
            cSpeed = 0;
            xspeed = 0;
            var ID;
            for (var i = 0; i &lt;= 2; i += 1)
            {
                ID = instance_create(x + image_xscale * 12,
                    spriteGetYCenter() + 8, objMM2MetBullet);
                ID.dir = 45 - (i * 45);
                ID.image_xscale = image_xscale;
                ID.sprite_index = sprEnemyBullet;
            }
            playSFX(sfxMetallTrain);
        }
    }
    
    if (shootTimer &gt; 0)
    {
        shootTimer -= 1;
    }
    if (turnTimer &gt; 0)
    {
        turnTimer -= 1;
    }
    if (yspeed != 0)
    {
        cSpeed = 0;
    }
    else
    {
        cSpeed = 1;
    }
    
    if (boomCounter &gt;= 5)
    {
        instance_create(x, y + 8, objHarmfulExplosion);
        playSFX(sfxExplosion2);
        visible = false;
        dead = true;
    }
    
    // turn around on walls
    xSpeedTurnaround();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(spawned)
{
    xspeed = 0;
    yspeed = 0;
    image_index = 0;
    headUp = false;
    shootTimer = -1;
    delay = 0;
    turnTimer = 0;
    boomCounter = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!headUp)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

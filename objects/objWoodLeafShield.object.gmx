<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWoodFallingLeaves</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
stopOnFlash = true;
range = 24;
canHit = true;
reflectable = 0;
followWood = true;

isTargetable = false;

xs = x;
ys = y;

contactDamage = 4;
blockCollision = 0;
rotationTimer = 0;
grav = 0;
myObject = 0;

x = round(xs + 22 * cos(direction / 57));
y = round(ys + 22 * sin((direction + 180) / 57));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // sticks to wood man
    if (instance_exists(myObject))
    {
        if (followWood)
        {
            xs = bboxGetXCenterObject(myObject);
            ys = bboxGetYCenterObject(myObject);
            image_xscale = myObject.image_xscale;
        }
    }
    else
    {
        instance_destroy();
    }
    
    xs += xspeed;
    if (followWood)
        ys += yspeed;
    x = round(xs + 22 * cos(direction / 57));
    y = round(ys + 22 * sin((direction + 180) / 57));
    if rotationTimer &gt;= 3
    {
        direction += 22.5;
        rotationTimer = 0;
    }
    else
    {
        rotationTimer++
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index != objFlameMixer) &amp;&amp; (other.object_index != objTornadoBlow)
&amp;&amp; (other.object_index != objSolarBlaze)
{
    other.guardCancel = 3;
}
else
{
    if (other.object_index != objTornadoBlow)
    {
        instance_create(x,y,objExplosion);
    }
    event_user(EV_DEATH);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

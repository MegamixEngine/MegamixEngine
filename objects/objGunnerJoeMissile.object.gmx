<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGunnerJoeMissile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpoints = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

respawn = false;
grav = 0;
blockCollision = false;
itemDrop = -1;

parent = noone;
phase = 0;
despawnRange = 0;

startWait = 15;
waitTimer = 0;
jetTimer = 0;
speed = 1.4;
rotateChange = 2;
totalChange = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (instance_exists(target))
    {
        switch (phase)
        {
            case 0:
                if (startWait &gt; 0)
                {
                    startWait--;
                }
                else
                {
                    phase = 1;
                }
                break;
            case 1:
                if (waitTimer &lt; 15)
                {
                    waitTimer++;
                    break;
                }
                var pxd = target.x - x;
                var pyd = target.y - y;
                var pangle = 0;
                if (pxd != 0)
                {
                    pangle = point_direction(x, y, target.x, target.y);
                }
                else
                {
                    if (pyd &gt;= 0)
                    {
                        pangle = 270;
                    }
                    if (pyd &lt; 0)
                    {
                        pangle = 90;
                    }
                }
                
                // and now that we have the angle the player is facing, we take the difference of the angles
                var change = direction - pangle;
                
                // loop degree check, so the angle isn't above 360 or below 0
                if (change &gt; 360)
                {
                    change -= 360;
                }
                else if (change &lt; 0)
                {
                    change += 360;
                }
                
                /* this is interesting. So, by subtracting it by 180 it sort of aligns change to be how far away our angle to megaman is from our own angle
                we're pointing at as if our own angle is centered at 0 */
                change -= 180;
                
                /* and now, we just check how off mega man is, and do stuff accordingly (and also I reuse change to become the distance we change the
                angle )*/
                if (change &gt; rotateChange)
                {
                    change = rotateChange;
                }
                if (change &lt; -rotateChange)
                {
                    change = -rotateChange;
                }
                
                // Force the direction change to always be a 45 degree change (accurate to MM9)
                if ((change &lt; 45) &amp;&amp; (change &gt; 0))
                {
                    change = 45;
                }
                else if ((change &lt; 0) &amp;&amp; (change &gt; -45))
                {
                    change = -45;
                }
                
                direction += change;
                waitTimer = 0; // set cooldown
                
                totalChange += abs(change);
                
                break;
        }
    }
    // Jet Animation
    jetTimer += 1;
    if (jetTimer &gt;= 4)
    {
        // &lt;-- jet animation speed here
        if (sprite_index == sprGunnerJoeMissile2)
        {
            sprite_index = sprGunnerJoeMissile;
        }
        else
        {
            sprite_index = sprGunnerJoeMissile2;
        }
            
        jetTimer = 0;
    }
        
    image_index = round((direction) / 45);
}
else
{
    if (dead)
    {
        instance_destroy();
    }
}

// image_index = (image_index div 1) + (col*8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

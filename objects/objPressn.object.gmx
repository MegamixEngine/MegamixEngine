<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPressn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 10;
contactDamage = 6;

category = "semi bulky";

waitTimer = 0;
phase = 0;
image_speed = 0;

airDrag = 0.963;
saveXSpeed = 0;
targetX = 0;
targetY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        case 0: // sitting 
            image_index = 0;
            if (waitTimer &gt; 45)
                image_index = 1;
            waitTimer--;
            grav = 0.25;
            if (instance_exists(target) &amp;&amp; waitTimer &lt; 0)
            {
                phase = 1;
                waitTimer = 100;
            }
            break;
        case 1: // rising 
            yspeed = -2;
            grav = 0;
            if (y &lt; view_yview[0] + 4)
                phase = 2;
        case 2: // hovering 
            waitTimer--;
            image_index = 2 + (waitTimer div 4) mod 2;
            if (phase == 2)
                yspeed = 0;
            
            // aim at target
            if (waitTimer == 8)
            {
                targetX = x;
                targetY = y;
                if (instance_exists(target))
                {
                    targetX = target.x;
                    targetY = target.y;
                }
            }
            if (waitTimer &lt; 0)
            {
                phase = 3;
                
                // fling self at target
                grav = 0.25;
                var airTime = sqrt(2 * max(1 + abs(x - targetX) / 1.8, targetY - y) / grav)
                // trust calculus
                ;
                xspeed = (targetX - x) * ln(airDrag) / (power(airDrag, airTime) - 1);
                saveXSpeed = xspeed;
                
                // cap xspeed
            }
            break;
        case 3: // dropping 
            image_index = 4 + (y div 3) mod 2;
            grav = 0.25;
            xspeed *= airDrag;
            saveXSpeed *= airDrag;
            xspeed = 0.95 * xspeed + 0.05 * saveXSpeed;
            if (ycoll)
            {
                screenShake(20, 2, 2);
                playSFX(sfxLargeClamp);
                phase = 0;
                waitTimer = 60;
                xspeed = 0;
            }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

waitTimer = 0;
phase = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

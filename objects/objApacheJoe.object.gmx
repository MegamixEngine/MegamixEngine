<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprApacheJoe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_xscale = -1;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 6;

category = "flying, joes";

facePlayer = true;

// Enemy specific code
aim = 1;
shooting = false;
animTimer = 0;
attackTimer = 0;
bulletID = -10;

getY = y;

blockCollision = 1;
grav = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    {
        if (instance_exists(target) &amp;&amp; shooting == false)
        {
            facePlayer = true;
        }
        else
        {
            facePlayer = false;
        }
        
        animTimer += 1;
        
        if (animTimer == 3)
            image_index = (aim * 2) + 1;
        
        if (animTimer == 6)
        {
            image_index = (aim * 2);
            animTimer = 0;
        }
        
        if (y &lt;= getY || shooting == true)
            attackTimer += 1;
        
        if (shooting == false)
        {
            if (y &gt; getY)
                yspeed = -2;
            else if (yspeed &lt; 0)
            {
                yspeed = 0;
                y = getY;
            }
        }
        
        if (attackTimer &gt;= 30 &amp;&amp; shooting == false)
        {
            shooting = true;
            aim = 0;
            if (instance_exists(target))
            {
                if (target.y &gt; y + 12)
                    aim += 1;
                if (target.x &gt; x - 16 &amp;&amp; target.x &lt; x + 16 &amp;&amp; target.y &gt;= y)
                    aim += 1;
            }
            var bull = instance_create(x, y, objApacheJoeProjectile);
            bull.xspeed = (image_xscale - (floor(aim / 2) * image_xscale)) * 3;
            if (aim &gt; 0)
                bull.yspeed = 3;
            bull.image_index = aim;
            bull.image_xscale = image_xscale;
            
            xspeed = (image_xscale - (floor(aim / 2) * image_xscale)) * 1.5;
            if (aim &gt; 0)
                yspeed = 1.5;
            getY = y;
            attackTimer = 0;
        }
        
        if ((attackTimer &gt; 60 || (yspeed == 0 &amp;&amp; aim &gt; 0)) &amp;&amp; shooting == true)
        {
            shooting = false;
            xspeed = 0;
            attackTimer = 0;
        }
    }
}
else
{
    if (dead == true)
    {
        animTimer = 0;
        image_index = (aim * 2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

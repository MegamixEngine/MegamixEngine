<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPotton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// They attack by dropping their explosive body when Mega Man passes under them.
// Afterwards they are just glass shells with propellers that fly around.
event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 2;

category = "flying";

grav = 0;

facePlayerOnSpawn = true;

// Enemy specific code

canDrop = true;
isDrop = false;
isDropTimer = 0;

// @cc - Changes colour (0 = red (default); 1 = hot pink;)
col = 0;

imgIndex = 0;
imgSpd = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (object_index == objPottonBomb)
{
    exit;
}

if (entityCanStep())
{
    xSpeedTurnaround();
    
    // Dropping
    if (instance_exists(target) &amp;&amp; canDrop)
    {
        if (x &gt;= target.x - abs(target.xspeed) - 1
            &amp;&amp; x &lt;= target.x + abs(target.xspeed) + 1)
        {
            canDrop = false;
            isDrop = true;
            sprite_index = sprPottonDrop;
        }
    }
    
    if (isDrop)
    {
        isDropTimer += 1;
        if (isDropTimer &gt;= 6)
        {
            isDrop = false;
            isDropTimer = 0;
            sprite_index = sprPottonShell;
            with (instance_create(x, y + 6, objPottonBomb))
            {
                image_xscale = other.image_xscale;
				image_index = other.col;
            }
        }
    }
    
    xspeed = image_xscale * (1 - isDrop);
    
    // Animation
    imgIndex += imgSpd;
    if (imgIndex &gt;= 2)
    {
        imgIndex = 0;
    }
}
else if (dead)
{
    imgIndex = 0;
    canDrop = true;
    isDrop = false;
    isDropTimer = 0;
    sprite_index = sprPotton;
}
image_index = floor(imgIndex) + (2 * col);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

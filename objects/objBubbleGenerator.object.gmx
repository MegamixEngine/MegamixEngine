<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBubblePlatformLarge</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// totalTimer = ;
// bubbleInterval = ;
// isSmall = ;
// smallBubbleTimer = ;
// bubblesPerInterval = ;

event_inherited();

inWater = -1;

contactDamage = 0;
canHit = false;

grav = 0;
blockCollision = 0;
bubbleTimer = -1;

totalTimer = 60 * 6;
bubbleInterval = floor((60 * 6) / 6);
isSmall = true;
smallBubbleTimer = 60 * 1;
bubblesPerInterval = 3;

bubbleCount = 0;
timer = 0;

respawnRange = -1;
despawnRange = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep() &amp;&amp; y &gt; global.sectionTop)
{
    if (timer &lt; totalTimer)
    {
        timer += 1;
    }
    else
    {
        timer = 0;
        bubbleCount = 0;
    }
    
    if (timer == floor(timer / bubbleInterval) * bubbleInterval
        &amp;&amp; timer &gt; 0)
    {
        if (bubbleCount &lt; bubblesPerInterval)
        {
            var i;
            if (isSmall)
            {
                i = instance_create(x, y + 14, objBubblePlatformSmall);
                i.popTime = smallBubbleTimer;
            }
            else
            {
                i = instance_create(x, y + 0.25, objBubblePlatformLarge);
                i.popTime = smallBubbleTimer;
            }
            bubbleCount += 1;
        }
    }
}
else
{
    bubbleCount = 0;
    timer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

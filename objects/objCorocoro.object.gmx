<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCorocoro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "nature, bird";

facePlayerOnSpawn = true;

// Enemy specific code
jumped = false;
fallen = false;
delay = 0;
jumpY = -6;
walkX = 2;
timeToJump = 0;
turnAroundDelay = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    image_index += 0.15;
    x = ceil(x);
    
    
    // reduce delay timers.
    if (delay &gt; 0)
        delay -= 1;
    
    if (turnAroundDelay &gt; 0 &amp;&amp; ground == true)
        turnAroundDelay -= 1;
    
    if (turnAroundDelay &lt; 0 &amp;&amp; ground == true)
        turnAroundDelay += 1;
    
    // when landing, prevent egg from doing things for a small period of time.
    if (delay == 0 &amp;&amp; jumped == true &amp;&amp; ground == true)
    {
        jumped = false;
        turnAroundDelay = 10;
    }
    
    // if the egg hits a wall whilst turnAroundDelay is active, turn round.  Make turnAroundDelay negative in order to prevent the egg from jumping straight away afterwards.
    if (xspeed == 0 &amp;&amp; ground == true &amp;&amp; turnAroundDelay &gt; 0
        &amp;&amp; turnAroundDelay &lt; 5)
    {
        jumped = false;
        xspeed = -xspeed;
        image_xscale = -image_xscale;
        turnAroundDelay = -5;
        timeToJump = 0;
    }
    
    // if time to jump is 0, set it to 1 as soon as egg hits the floor.
    if (yspeed == 0 &amp;&amp; ground == true &amp;&amp; jumped == false &amp;&amp; timeToJump == 0)
    {
        xspeed = 1 * image_xscale;
        timeToJump += 1;
    }
    
    // whilst egg is falling, and if it hasn't jump, reset variables and speed.
    if (yspeed &gt; 0 &amp;&amp; jumped == false)
    {
        xspeed = 0;
        delay = 5;
        timeToJump = 0;
    }
    
    // if egg is  jumping and is not next to the wall, start it moving again.
    if (delay == 0 &amp;&amp; jumped == true
        &amp;&amp; !checkSolid(image_xscale * sprite_get_width(sprite_index) * 0.8 + xspeed, (bbox_bottom + 1) - y, 1))
        xspeed = 1 * image_xscale;
    
    // if egg is next to a wall, and on floor, increase timeToJump variable.
    if (xspeed == 0 &amp;&amp; ground == true &amp;&amp; turnAroundDelay == 0)
        timeToJump += 1;
    
    // JUMP!
    if (timeToJump == 2)
    {
        yspeed = -6;
        jumped = true;
        delay = 5;
        timeToJump = 0;
    }
}
else if (dead == true)
{
    xspeed = 0;
    yspeed = 0;
    image_index = 0;
    jumped = false;
    turnAroundDelay = 0;
    timeToJump = 0;
    delay = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

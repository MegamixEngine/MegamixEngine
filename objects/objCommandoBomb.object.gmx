<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCommandoManBombHor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
contactDamage = 5;
grav = 0;
image_speed = 0.1;
itemDrop = -1;
stopOnFlash = false;

// Unique variables
canTurn = false;
hasTurned = false;
explosionDamage = 5;
explosionCount = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    if ((canTurn == true) &amp;&amp; (hasTurned == false))
    {
        if (instance_exists(target))
        {
            // Only turn when directly under target
            if ((x &lt;= target.bbox_right) &amp;&amp; (x &gt;= target.bbox_left))
            {
                xspeed = 0;
                yspeed = 3;
                sprite_index = sprCommandoManBombVer;
                playSFX(sfxCommandoBombTurn);
                instance_create(bboxGetXCenter(),bboxGetYCenter(),objExplosion);
                hasTurned = true;
            }
        }
    }
    
    if (instance_exists(objMegaman))
    {
        if (place_meeting(x, y, objMegaman))
        {
            with (objMegaman)
            {
                if ((canHit) &amp;&amp; (iFrames == 0))
                {
                    instance_create(x, y, objHarmfulExplosion);
                    playSFX(getGenericSFX(SFX_EXPLOSIONMM9));
                    with (other)
                        instance_destroy();
                }
            }
        }
    }
    
    if ((xcoll != 0) || (ycoll != 0)) {
        // Create wall explosions
        if (sprite_index == sprCommandoManBombHor) {
            for (var i = -1; i &lt;= 1; i += 2) {
                var expl = instance_create(x + 7 * image_xscale, y + 7 * i, objCommandoBombExplosion);
                expl.image_xscale = image_xscale;
                expl.image_yscale = i;
                expl.contactDamage = explosionDamage;
                expl.shotsLeft = explosionCount;
            }
        }
        
        // Create ground explosions
        if (sprite_index == sprCommandoManBombVer) {
            for (var i = -1; i &lt;= 1; i += 2) {
                var expl = instance_create(x + 7 * i, y + 7, objCommandoBombExplosion);
                expl.sprite_index = sprCommandoExplosionHor;
                expl.image_xscale = i;
                expl.contactDamage = explosionDamage;
                expl.shotsLeft = explosionCount;
            }
        }
        
        playSFX(sfxCommandoBombExplode);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index != objBreakDash) &amp;&amp; (other.object_index != objTenguDash)
&amp;&amp; (other.object_index != objSaltWater) &amp;&amp; (other.object_index != objWheelCutter)
&amp;&amp; (other.object_index != objMetalBlade)
{
    with (other)
    {
        guardCancel = 1;
        if ((penetrate &gt;= 2) &amp;&amp; (pierces &gt;= 2))
        {
            guardCancel = 2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

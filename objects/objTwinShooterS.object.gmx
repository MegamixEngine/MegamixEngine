<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTwinShootersS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// creation code
// moveDist = &lt;number&gt;;   - The distance the enemy moves before turning back on itself. Default is 76.;
// cooldownMax = &lt;number&gt;; - How long between firing.
// image_yscale = 1 or -1 //(Use editor for this!!) // if -1, Twin Shooter will go up instead of down at beginning.
event_inherited();
respawn = true;
healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 3;
category = "floating, cannons";
blockCollision = 1;
grav = 0;
dieToSpikes = 0;
facePlayer = true;

// Enemy specific code
moveDelay = 0;
moveTimer = 0;

// shooting variables
cooldownTimer = 0;
cooldownMax = 152;
direct = -1;
storeYScale = 0;
moveDist = 76;
moveDir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    if (storeYScale == 0)
        storeYScale = image_yscale;
    image_index += 0.20;
    if ((moveTimer &gt;= moveDist) || (yspeed == 0))
    {
        image_yscale *= -1;
        moveTimer = 0;
    }
    yspeed = 0.5 * image_yscale;
    cooldownTimer += 1;
    if (cooldownTimer &gt;= cooldownMax)
    {
        // Shoot
        cooldownTimer = 0;
        var ID;
        ID = instance_create(x + image_xscale * 3, y - 12,
            objEnemyBullet);
        {
            ID.xspeed = 2 * image_xscale;
            ID.xscale = image_xscale;
            ID.sprite_index = sprTwinShooterSmLaser;
        }
        ID = instance_create(x + image_xscale * 3, y + 12,
            objEnemyBullet);
        {
            ID.xspeed = 2 * image_xscale;
            ID.xscale = image_xscale;
            ID.sprite_index = sprTwinShooterSmLaser;
        }
        playSFX(sfxEnemyShootClassic);
    }
    moveTimer += 0.5;
}
else
{
    if (dead == true)
    {
        if (storeYScale != 0)
            image_yscale = storeYScale;
        moveTimer = 0;
        cooldownTimer = 0;
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

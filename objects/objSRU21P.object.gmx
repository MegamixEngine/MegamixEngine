<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSRU21P</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "aquatic";

grav = 0; // moves at a constant speed when falling

// Enemy specific code
phase = 0;
explodeTimer = 0;
explodeWait = 130;
waterY = 0;

imgSpd = 0.3;
imgIndex = 0;

visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // wait for mega man
        case 0:
            visible = false;
            canHit = false;
            if (instance_exists(target))
            {
                if (abs(target.x - x) &lt; 64)
                {
                    phase = 1;
                    yspeed = 2.4;
                    visible = true;
                    canHit = true;
                }
            }
            break;
        
        // fall
        case 1:
            var water = instance_place(x, y + yspeed, objWater);
            if (!instance_exists(water))
            {
                if (ground)
                {
                    instance_create(x, y, objExplosion);
                    healthpoints = 0;
                    event_user(EV_DEATH);
                    playSFX(sfxEnemyHit);
                }
            }
            else
            {
                phase = 2;
                waterY = water.y;
            }
            break;
        
        // bob down
        case 2:
            yspeed -= 0.15;
            if (yspeed &lt; 0 &amp;&amp; y &lt; waterY)
            {
                phase = 3;
            }
            else if (yspeed &lt;= 0)
            {
                imgIndex = 1;
            }
            break;
        
        // bob up
        case 3:
            yspeed += 0.21;
            if (y &gt;= waterY)
            {
                phase = 4;
                yspeed = 0;
            }
        
        // count down to explode
        case 4:
            explodeTimer += 1;
            if (explodeTimer &gt;= explodeWait - 80)
            {
                if (explodeTimer &lt; explodeWait - 40)
                {
                    imgIndex += imgSpd;
                }
                else
                {
                    imgIndex += imgSpd * 2;
                }
                
                if (imgIndex &gt;= 3)
                {
                    imgIndex = 1;
                }
            }
            
            // slight bob from the water
            if (explodeTimer mod 40 == 0)
            {
                y -= 1;
            }
            else if (explodeTimer mod 20 == 0)
            {
                y += 1;
            }
            if (explodeTimer &gt;= explodeWait)
            {
                var offset = 45;
                
                var d;
                d = instance_create(x, y, objSRU21PDebris);
                d.direction = 90 + offset;
                d.image_index = 0;
                
                d = instance_create(x, y, objSRU21PDebris);
                d.direction = 90;
                d.image_index = 1;
                
                d = instance_create(x, y, objSRU21PDebris);
                d.direction = 90 - offset;
                d.image_index = 2;
                
                instance_create(x, y, objExplosion);
                
                healthpoints = 0;
                event_user(EV_DEATH);
                playSFX(sfxEnemyHit);
            }
            break;
    }
}
else if (dead)
{
    phase = 0;
    explodeTimer = 0;
    yspeed = 0;
    imgIndex = 0;
    visible = false;
    inWater = false;
    canHit = false;
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

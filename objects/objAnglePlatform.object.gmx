<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAnglePlatformGreen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>mskAnglePlatform</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

blockCollision = 0;
grav = 0;
bubbleTimer = -1;

inWater = -1;

canDrop = true;
phase = 0;
iphase = 0;
timer = 0;
timeri = 0;
touched=false;

respawnRange = -1;
despawnRange = -1;

isSolid = 1;

//@cc 0 = green; 1 = orange
col = 0;

init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = 0;
    switch (col)
    {
        case 0:
            sprite_index = sprAnglePlatformGreen;
            break;
        case 1:
            sprite_index = sprAnglePlatformOrange;
            break;
        default:
            sprite_index = sprAnglePlatformGreen;
            break;
    }
}

event_inherited();

if (entityCanStep())
{
    with(objMegaman)
    {
        if(!place_meeting(x, y + gravDir, other.id))
        {
           other.touched = false;
        }
    }

    switch (phase)
    {
        case 0: // Idle 
            with (objMegaman)
            {
                if (ground)
                {
                    if (!other.touched &amp;&amp; (place_meeting(x, y + gravDir, other.id)&amp;&amp; !place_meeting(x, y, other.id)))
                    {
                        with (other)
                        {
                            touched = true;
                            phase = 1;
                            timer = 0;
                            
                            if (image_index == 0)
                            {
                                iphase = 2;
                            }
                            else
                            {
                                iphase = 3;
                            }
                        }
                        break;
                    }
                }
            }
            break;
        case 1: // Preparing to drop down 
            timer += 1;
            if (timer &gt;= 12)
            {
                timer = 0;
                phase = iphase;
            }
            break;
        case 2: // Dropping down animation 
            timer += 1;
            if (timer == 4)
            {
                if (image_index == 2)
                {
                    with (objMegaman)
                    {
                        if (ground)
                        {
                            if (place_meeting(x, y + gravDir, other.id)
                                &amp;&amp; !place_meeting(x, y, other.id))
                            {
                                y -= gravDir;
                            }
                        }
                    }
                }
                
                image_index += 1;
                
                if (image_index == 4)
                {
                    phase = 0;
                    isSolid = 1;
                }
                
                timer = 0;
            }
            break;
        case 3:
            timer += 1;
            if (timer == 4)
            {
                if (image_index == 2)
                {
                    with (objMegaman)
                    {
                        if (ground)
                        {
                            if (place_meeting(x, y + gravDir, other.id)
                                &amp;&amp; !place_meeting(x, y, other.id))
                            {
                                shiftObject(0, -gravDir, true);
                            }
                        }
                    }
                }
                
                image_index -= 1;
                
                if (image_index == 0)
                {
                    phase = 0;
                    isSolid = 1;
                }
                
                timer = 0;
            }
            break;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(spawned)
{
    isSolid = 1;
    image_index = 0;
    canDrop = true;
    phase = 0;
    timer = 0;
    spawned = false;
    timeri = 0;
    touched = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

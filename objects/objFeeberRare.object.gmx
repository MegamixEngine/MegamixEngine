<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFeeberRare</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objFeeber</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A crab that shoots small bubbles that the player can stand on. The bubbles can also push things around, from the player to other enemies!
/// Bubbles change direction when hitting a wall. By default, bubbles pop automatically after a certain delay, which can be changed with creation code.
/// With the right architecture and placement, this enemy can add a puzzle slant to both platforming and combat encounters.

event_inherited();

// @cc - Sets delay for bubble to pop
popTimer = 600;
// @cc - If false, bubble will never pop after delay
canPop = true;
// @cc - Sets bubble invincibility; 0 = can be destroyed; 1 = reflects non-piercing weapons; 2 = all weapons pass through; 3 = all weapons reflected/pass through; 4 = all weapons reflected
bubbleStrength = 1;
// @cc = Sets bubble HP; only really matters if bubbleStrength = 0
bubbleHP = 5;

bubbleType = 1; // Makes it use heavy bubble - don't edit
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (phase == 1) &amp;&amp; (moveTimer == 30) &amp;&amp; (bubbleType) // Create heavy bubble
    {
        if (!instance_exists(bubble))
        {
            i = instance_create(x, y, objFeeberHeavyBubble);
            i.image_xscale = image_xscale;
            i.image_yscale = image_yscale;
            i.parent = id;
            i.popTimer = popTimer;
            i.canPop = canPop;
			i.bubbleStrength = bubbleStrength;
			i.healthpointsStart = bubbleHP;
            bubble = i.id;
            playSFX(sfxWaveManPipe);
        }
        else if (!instance_exists(heavyBubble))
        {
            i = instance_create(x, y, objFeeberHeavyBubble);
            i.image_xscale = image_xscale;
            i.image_yscale = image_yscale;
            i.parent = id;
            i.popTimer = popTimer;
            i.canPop = canPop;
			i.bubbleStrength = bubbleStrength;
			i.healthpointsStart = bubbleHP;
            heavyBubble = i.id;
            playSFX(sfxWaveManPipe);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

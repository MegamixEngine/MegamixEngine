<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGremlin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// An angry looking robot that slowly moves towards the player.
event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "cluster";

blockCollision = 0;
grav = 0;

// Enemy specific code
alarmAnimation = -2;
alarmRise = -1;

generated = true;
alarmGenerate = -1;
alarmAnimation = 10;
gremlinDir = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (alarmGenerate &gt; -1)
    {
        alarmGenerate -= 1;
        x += (0.33 * gremlinDir);
        if (alarmGenerate == 0)
        {
            yspeed = -3;
            alarmRise = 30;
        }
    }
    if (alarmRise &gt; -1)
    {
        alarmRise -= 1;
        if (alarmRise == 0)
        {
            generated = true;
            alarmAnimation = 10;
            yspeed = 0;
            calibrateDirection();
            xspeed = 0.5 * image_xscale;
            image_xscale = 1;
        }
    }
    if (alarmAnimation &gt; -1)
    {
        alarmAnimation -= 1;
        if (alarmAnimation == 0)
        {
            if (image_index == 2)
            {
                image_index = 1;
            }
            else
            {
                image_index = 2;
            }
            alarmAnimation = 10;
        }
    }
    
    if (instance_exists(target))
    {
        if (distance_to_object(target) &lt;= 64 &amp;&amp; generated)
        {
            mp_linear_step(target.x, target.y, 0.25, false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

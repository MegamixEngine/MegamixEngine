<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDachoneLtdEd</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Even weaker than the regular Dachone, this time he's vulnerable all the time.
/// What a valuable limited edition, eh?
event_inherited();

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "bulky";

// Enemy specific code
dir = image_xscale;

moveDelay = 0;
ground = false;

// shooting variables
cooldownMax = 60;
cooldownTimer = cooldownMax / 2;

// AI and animation variables
moveDir = 0;
imageTimer = 0;
imageOffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // setup
    if (moveDir == 0)
    {
        calibrateDirection();
        moveDir = image_xscale;
    }
    
    image_index = imageOffset;
    
    // turn around when we hit a wall
    if (xcoll != 0)
    {
        moveDir = -moveDir;
    }
    
    // turn aorund when we come up to a drop
    if (!(positionCollision(x + 16 * moveDir + xspeed, bbox_bottom + 2)))
    {
        moveDir = -moveDir;
    }
    
    // set speed
    if (ground)
    {
        xspeed = 0.66 * moveDir;
    }
    else
    {
        xspeed = 0;
    }
    
    // play animation forwards or backwards depending on the direction dachone is moving and what direction the sprite is facing.
    if (xspeed != 0)
    {
        imageTimer += 1;
        if (imageTimer == 12)
        {
            var tgx = x + 12;
            if (instance_exists(target))
                tgx = target.x;
            imageTimer = 0;
            if (moveDir &gt; 0 &amp;&amp; tgx &gt; x || moveDir &lt; 0 &amp;&amp; tgx &lt; x)
            {
                imageOffset += 1;
            }
            
            if (moveDir &gt; 0 &amp;&amp; tgx &lt; x || moveDir &lt; 0 &amp;&amp; tgx &gt; x)
            {
                imageOffset -= 1;
            }
        }
        
        if (imageOffset &gt;= 4)
        {
            imageOffset = 0;
        }
        
        if (imageOffset &lt; 0)
        {
            imageOffset = 3;
        }
    }
    
    // shooting
    if (instance_exists(target))
    {
        // dachone stops shooting if mega man is behind it.
        if (image_xscale &gt; 0 &amp;&amp; target.x &gt; x || image_xscale &lt; 0 &amp;&amp; target.x &lt; x)
        {
            cooldownTimer += 1;
        }
    }
    
    if (cooldownTimer &gt;= 60)
    {
        instance_create(x + 16 * image_xscale, y - 4, objCannonjoeBullet);
        cooldownTimer = 0;
        playSFX(sfxEnemyShoot);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On spawn
event_inherited();
if (spawned)
{
    image_index = 0;
    moveDir = 0;
    cooldownTimer = cooldownMax / 2;
    xspeed = 0;
    yspeed = 0;
    imageOffset = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
instance_create(bboxGetXCenter(),bboxGetYCenter(),objBigExplosion);
stopSFX(sfxEnemyHit);
playSFX(sfxExplosion2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

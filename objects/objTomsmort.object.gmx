<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTomsmort</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// creation code
// moveDist = &lt;number&gt;;   - The distance the enemy moves before turning back on itself. Default is 168.;
// cooldownMax = &lt;number&gt;; - How quickly the enemy shoots. The default is 120;
// spd = &lt;number&gt;; - How quickly the enemy moves. Should be a number that divides evenly into moveDist or else this won't work.

event_inherited();

respawn = true;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 2;
category = "flying, nature";

blockCollision = 0;
grav = 0;

facePlayerOnSpawn = true;

// Enemy specific code
moveDelay = 0;
moveTimer = 0;

// shooting variables
cooldownMax = 120;
cooldownTimer = round(cooldownMax / 2);
spd = 1;

moveDist = 168;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // animat tomsmort
    image_index += 0.20;
    
    // move tomsmort
    xspeed = spd * image_xscale;
    
    // constantly add to cooldown timer, when this reaches his determined maximum, tomsmort fires
    cooldownTimer += 1;
    if (cooldownTimer &gt;= cooldownMax)
    {
        // Shoot
        cooldownTimer = 0;
        var getAngle;
        
        // If megaman exists, grab his angle, otherwise grab some random different angle.
        if (instance_exists(target))
            getAngle = point_direction(x, y, target.x, target.y);
        else
            getAngle = point_direction(x, y, x + (45 * (image_xscale)),
                45 * (image_xscale));
        
        // create bullet
        var ID;
        ID = instance_create(x + image_xscale * 8, spriteGetYCenter(),
            objCFTFAimedBullet);
        {
            ID.dir = getAngle;
            ID.xscale = image_xscale;
        }
        playSFX(sfxEnemyShootClassic);
    }
    
    // constantly increase movetimer by how far tomsmsort has moved. once it has reached its predetermined distance, turn tomsmort around.
    moveTimer += spd;
    if (moveTimer &gt;= moveDist)
    {
        image_xscale = 0 - image_xscale;
        moveTimer = 0;
    }
}
else
{
    if (dead == true)
    {
        moveTimer = 0;
        cooldownTimer = 0;
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

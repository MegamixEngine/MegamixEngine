<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWatcher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;
contactStart = contactDamage;

category = "floating";

blockCollision = 0;
grav = 0;

facePlayer = true;

// Enemy specific code

//@cc how long it is until the watcher pops up.
popDelay = 32;

//@cc -1 is up, 1 is down
dir = 1;

timer = 0;
phase = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    timer += 1;
    switch (phase)
    {
        case 1: // pop up 
            if (timer &gt;= popDelay)
            {
                if (y &gt; global.sectionTop - (dir * 16)
                    &amp;&amp; y &lt; global.sectionBottom - (dir * 16))
                {
                    yspeed = 0.75 * dir;
                    phase = 2;
                }
            }
            break;
        case 2: // Look for target 
            if (target)
            {
                if (collision_rectangle(view_xview, y - 12, view_xview + view_wview, y + 12, target, false, true))
                {
                    image_index = 1;
                    timer = 0;
                    phase = 3;
                }
            }
            break;
        case 3: // Shoot 
            if (timer == 12)
            {
                image_index = 2;
            }
            else if (timer == 24)
            {
                playSFX(sfxBlockZap);
                repeat (2)
                {
                    image_yscale *= -1;
                    var i = instance_create(x + (8 * image_xscale), y + (22 * image_yscale), objEnemyBullet);
                    i.xspeed = 3 * image_xscale;
                    i.sprite_index = sprWatcherBullet;
                    i.imageSpeed = 0.3;
                }
            }
            else if (timer == 32)
            {
                image_index = 1;
                yspeed *= -2;
            }
            else if (timer == 40)
            {
                image_index = 0;
            }
            break;
    }
}
else if (dead)
{
    timer = 0;
    phase = 1;
    image_index = 0;
}

visible = (phase &gt; 1);
canHit = visible;
contactDamage = contactStart * visible;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

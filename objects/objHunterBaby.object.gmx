<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHunterA</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
respawn = false;
healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;
stopOnFlash = false;

// Enemy specific code
xspeed = 0;
yspeed = 0;
storeY = -1;
attackTimer = 0;
grav = 0;
image_speed = 0;
image_index = 0;
canflash = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    attackTimer += 1;
    image_index = 0 + ((attackTimer / 4) mod 3);
    if (xcoll != 0)
    {
        xspeed = -xcoll;
        xcoll = 0;
        image_xscale *= -1;
    }
    if (place_meeting(x, y + yspeed, objSolid))
    {
        y -= yspeed;
        yspeed *= -1;
        ycoll = 0;
        storeY *= -1;
    }
    with (instance_place(x, y + yspeed, prtEntity))
    {
        if (isSolid == 1)
        {
            with (other)
            {
                y -= yspeed;
                yspeed *= -1;
                ycoll = 0;
                storeY *= -1;
            }
        }
    }
    if (xspeed == 0)
        xspeed = image_xscale * 2;
    if (yspeed == 0)
        yspeed = storeY * 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y - 8, objExplosion);
dead = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Hunter Baby, regardless of what Image_Yscale and Image_xscale says. Image_yscale is used to determine which direction it moves in.
draw_sprite_ext(sprite_index, image_index, round(x), floor(y), 1, 1, image_angle, image_blend, image_alpha);
if (((iFrames mod 2 == 1) &amp;&amp; canflash) || (iceTimer &gt; 0))
{
    var flashcol = c_white;
    if (iceTimer &gt; 0)
        flashcol = make_color_rgb(0, 120, 255);
    hitFlashEffect(true,flashcol);
    draw_sprite_ext(sprite_index, image_index, round(x), floor(y), 1, 1, image_angle, image_blend, image_alpha);
    hitFlashEffect(false);
    if (iceTimer &gt; 0)
    {
        draw_set_blend_mode(bm_add);
        draw_sprite_ext(sprite_index, image_index, round(x), floor(y), 1, 1, image_angle, image_blend, image_alpha);
        draw_set_blend_mode(bm_normal);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRollingDrill</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

faction = 5;

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 28;

blockCollision = 0;
grav = 0;
bubbleTimer = -1;

// Enemy specific code
image_speed = 0.4;

ground = 1;

calibrated = 0;
mysolid = -1;

spd = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!dead)
{
    if (mysolid == -1)
    {
        mysolid = instance_create(x, y, prtEntity);
        mysolid.sprite_index = sprRollingDrillBlock;
        mysolid.image_xscale = image_xscale;
        mysolid.respawn = false;
        mysolid.isSolid = 1;
        mysolid.canHit = false;
        mysolid.grav = 0;
        mysolid.blockCollision = 0;
    }
    else
    {
        instance_activate_object(mysolid);
        if (!instance_exists(mysolid))
        {
            mysolid = -1;
        }
    }
}
else
{
    if (mysolid != -1)
    {
        instance_activate_object(mysolid);
        with (mysolid)
        {
            instance_destroy();
        }
        mysolid = -1;
    }
}

if (entityCanStep())
{
    xspeed = image_xscale * spd;
    
    while (place_meeting(x, y, objSolid))
    {
        with (instance_place(x, y, objSolid))
        {
            if (image_xscale &gt; 1 || image_yscale &gt; 1)
            {
                splitSolid();
            }
            else
            {
                instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
                playSFX(sfxEnemyHit);
                instance_create(x, y, objRollingDrillField);
                instance_deactivate_object(id);
            }
        }
    }
    
    if (mysolid != -1)
    {
        with (mysolid)
        {
            image_xscale = other.image_xscale;
            xprevious = x;
            shiftObject(other.x - x, 0, other.blockCollision);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_xscale == 1)
{
    if (spriteGetXCenterObject(other.id) &lt; spriteGetXCenter())
    {
        other.guardCancel = 1;
    }
}
else
{
    if (spriteGetXCenterObject(other.id) &gt; spriteGetXCenter())
    {
        other.guardCancel = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;

instance_create(bboxGetXCenter(), bboxGetYCenter(), objBigExplosion);
playSFX(sfxExplosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

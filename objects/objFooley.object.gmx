<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFooley</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// I've heard Fooley Cooley is a good anime, but I've never seen the appeal, personally.
// Oh, also it can slow down time for Mega Man. Good for it.

event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 2;

blockCollision = false;
grav = 0;
facePlayerOnSpawn = true;

category = "flying";

image_speed = 0.1;

moveTimer = 60;
shootTimer = 30;
timeSlow = 2;
drawTimer = 4;
statusObject = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    moveTimer--;
    if ((moveTimer &lt;= 30) &amp;&amp; (moveTimer &gt; 0))
    {
        timeSlow--;
        if (timeSlow == 0)
        {
            if (sprite_index == sprFooley)
            {
                sprite_index = sprFooleyTimeSlow;
                timeSlow = 2;
            }
            else
            {
                sprite_index = sprFooley;
                timeSlow = 2;
            }
        }
    }
    
    if (moveTimer == 0)
    {
        sprite_index = sprFooley;
        playSFX(sfxTimeStopper);
        timeSlow = 15;
    }
    
    if (moveTimer &lt; 0)
    {
        if instance_exists(target)
        {
            with (target)
            {
                // if there is no status effect object for current player, create one.
                if (!instance_exists(statusObject))
                {
                    statusObject = instance_create(x, y, objStatusEffect);
                }
                else
                {
                    statusObject.statusWalkSpeed = 1.3 / 2;
                    statusObject.statusChangedWalk = true;
                    statusObject.statusJumpSpeed = 4.75 / 2;
                    statusObject.statusChangedJump = true;
                    gravfactor = 0.25;
                    if (isHit)
                    {
                        gravfactor = 1;
                    }
                }
            }
        }
        
        drawTimer--;
        if (drawTimer == 0)
        {
            if instance_exists(target)
            {
                if (target.inked == false)
                {
                    target.inked = true;
                }
                else
                {
                    target.inked = false;
                }
            }
            drawTimer = 4;
        }
        
        // Create flash
        timeSlow--;
        if (timeSlow == 0)
        {
            if (!instance_exists(objFooleyFlash))
            {
                instance_create(x, y, objFooleyFlash);
            }
            else
            {
                with (objFooleyFlash)
                {
                    instance_destroy();
                }
            }
            timeSlow = 15;
        }
        
        // Shoot
        shootTimer--;
        if (shootTimer == 0)
        {
            instance_create(x, y, objFooleyShot);
            playSFX(sfxEnemyShootClassic);
            shootTimer = 30;
        }
    }
}
else if (dead)
{
    healthpoints = healthpointsStart;
    moveTimer = 60;
    shootTimer = 30;
    drawTimer = 4;
    timeSlow = 2;
    
    if (instance_exists(target))
    {
        with (target)
        {
            inked = false;
            
            if (instance_exists(statusObject))
            {
                statusObject.statusChangedWalk = false;
                statusObject.statusChangedJump = false;
                gravfactor = 1;
            }
        }
    }
    if (instance_exists(objFooleyFlash))
    {
        with (objFooleyFlash)
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
xspeed = 0.5 * image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

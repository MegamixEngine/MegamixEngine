<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprQuickSand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>objStandSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

sandWidth = sprite_get_width(sprite_index);
imgsp = 0.125;
stretchX = 1;
stretchY = 1;
stopXScale = false;
noRain = true;

// Autocombine quicksand stuff
if (!instance_place(x - sandWidth, y, objQuickSand)
    &amp;&amp; instance_place(x + sandWidth, y, objQuickSand))
{
    do
    {
        if (place_meeting(x + sandWidth * stretchX, y - 16, objQuickSand))
        {
            stopXScale = true;
        }
        
        // ignore destroy fields
        if (place_meeting(x + sandWidth * stretchX, y, objDestroyField))
        {
            stopXScale = true;
        }
        
        if (!stopXScale)
        {
            sand = instance_place(x + sandWidth * stretchX, y, objQuickSand);
            with (sand)
            {
                instance_destroy();
            }
            stretchX += 1;
        }
    } until (!place_meeting(x + sandWidth * stretchX, y, objQuickSand)
        || stopXScale)
}

stopYScale = false;

if (!instance_place(x, y - 1, objQuickSand) &amp;&amp; stretchX &gt; 1)
{
    while (instance_place(x + 1, y + 16 * stretchY, objQuickSand)
        &amp;&amp; !stopYScale)
    {
        for (i = 0; i &lt; stretchX; i += 1)
        {
            if (!instance_place(x + sandWidth * i, y + 16 * stretchY,
                objQuickSand)
                &amp;&amp; !instance_place(x + sandWidth * i, y - 16, objQuickSand))
            {
                stopYScale = false;
            }
        }
        if (!stopYScale)
        {
            for (i = 0; i &lt; stretchX; i += 1)
            {
                sand = instance_place(x + sandWidth * i, y + 16 * stretchY,
                    objQuickSand);
                with (sand)
                {
                    instance_destroy();
                }
            }
            if (!stopYScale)
            {
                stretchY += 1;
            }
        }
    }
}

if (stretchX &gt; 1)
{
    image_xscale = stretchX;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.frozen) &amp;&amp; (noRain)
{
    image_speed = imgsp;
    
    with (objMegaman)
    {
        if (place_meeting(x, y + gravDir, other.id) || place_meeting(x, y, other.id))
        {
            shiftObject(0, 0.125, 1);
        }
    }
    
    with (objRainFlush)
    {
        if (timer &gt;= 30)
        {
            other.noRain = false;
        }
    }
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; image_xscale; i += 1)
{
    for (var j = stretchY - 1; j &gt;= 0; j -= 1)
    {
        draw_sprite(sprite_index, -1,
            round(x) + sprite_get_width(sprite_index) * i,
            round(y) + j * 16);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

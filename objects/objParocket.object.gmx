<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprParocketRise</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// A rocket that flies high into the sky, then slowly drops down via parachute. If it lands
// on the ground, or is destroyed, it releases a damaging explosion. Watch out!

event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

despawnRange = 35;
grav = 0;
category = "flying";

moveTimer = 60;
phase = 0;
imgSpd = 0.2;
bounceTimes = 0;
animBack = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // On ground
        case 0:
            moveTimer--;
            if (moveTimer &lt;= 0)
            {
                if (bounceTimes &lt; 2)
                {
                    if (ground)
                    {
                        y -= 1;
                    }
                    else
                    {
                        y += 1;
                        bounceTimes++;
                    }
                }
                else
                {
                    phase = 1;
                    moveTimer = 30;
                }
            }
            break;
        // Rising
        case 1:
            image_index += imgSpd;
            if ((image_index &gt;= 4) &amp;&amp; (y &gt; view_yview))
            {
                yspeed = -3;
                blockCollision = false;
            }
            if (image_index &gt;= 6)
            {
                image_index = 4;
            }
            if (y &lt; view_yview - 2)
            {
                yspeed = 0;
                moveTimer--;
                if (moveTimer &lt;= 0)
                {
                    x += 40;
                    sprite_index = sprParocketFall;
                    yspeed = 1;
                    phase = 2;
                }
            }
            break;
        // Falling
        case 2:
            if (animBack == false)
            {
                image_index += 0.05;
                if (image_index &gt;= 3)
                {
                    animBack = true;
                    image_index = 2;
                }
            }
            else
            {
                image_index -= 0.05;
                if (image_index &lt; 0) //== 0
                {
                    animBack = false;
                    image_index = 1;
                }
            }
            if (instance_exists(target))
            {
                if (target.x &gt; x)
                {
                    xspeed = 0.5;
                }
                else if (target.x &lt; x)
                {
                    xspeed = -0.5;
                }
                else
                {
                    xspeed = 0;
                }
            }
            if (y &gt; view_yview + 32)
            {
                blockCollision = true;
                if ((xcoll != 0) || (ycoll != 0))
                {
                    dead = true;
                    itemDrop = -1;
                    i = instance_create(x, y, objHarmfulExplosion);
                    i.contactDamage = 6;
                    playSFX(sfxMM9Explosion);
                }
            }
            break;
    }
}
else if (dead)
{
    healthpoints = healthpointsStart;
    moveTimer = 60;
    phase = 0;
    sprite_index = sprParocketRise;
    image_index = 0;
    blockCollision = true;
    bounceTimes = 0;
    animBack = false;
    itemDrop = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (sprite_index == sprParocketRise)
{
    var i = instance_create(x, y - 10, objHarmfulExplosion);
    i.contactDamage = 6;
}
else
{
    var i = instance_create(x, y, objHarmfulExplosion);
    i.contactDamage = 6;
}
stopSFX(sfxEnemyHit);
playSFX(sfxMM9Explosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

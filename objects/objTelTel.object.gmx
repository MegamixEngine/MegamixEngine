<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTelTel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// More of a gimmick than an enemy, and a very complex one at that. Floats up and down. Hit one with any weapon to make it rain.
/// Once it's raining, hit another Tel Tel with an ice weapon to make it snow. Then, hit yet another Tel Tel with a fire weapon to clear away the weather. Repeat.
/// Tel Tel is indestructible, but it will fall off the screen when hit by a weapon that changes the weather, along with any other Tel Tels on screen.
/// The rain affects a variety of fire enemies and gimmicks. See the Create event of objTelTelWeatherControl (in the Projectiles subfolder) for a complete list.
/// The snow makes Revealing Tiles (Gimmicks &gt; MM7 &gt; objRevealingTiles) visible by covering them with snow.
/// Weather persists across screen transitions. To cancel it upon entering a section, place objTelTelWeatherCancel (in this same folder) anywhere in the section.
/// You can use creation code to specify which objects trigger the snow and clear effects. They don't necessarily have to be ice and fire, or even weapons!
/// If you're going to use Tel Tel, make it the star of your level, and test each setup thoroughly. Also note that the visual effects may bother some players.

event_inherited();

healthpointsStart = 999;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "floating";

blockCollision = 0;
grav = 0;

facePlayer = true;

despawnRange = 48;
respawnRange = 48;

// Enemy-specific variables
sinCounter = 0; // for wave movement

actionTimer = 0;
phase = 0;

image_speed = 0;

canIce = false;

// Tables for what triggers certain weather effects
snowSource[0] = objIceWall;
snowSource[1] = objChillSpike;
snowSource[2] = objChillSpikeLanded;
snowSource[3] = objIceSlasher;

clearSource[0] = objSolarBlaze;
clearSource[1] = objPharaohShot;
clearSource[2] = objFlameMixer;
clearSource[3] = objMagneticShockwave;

// "magnetic shockwave is  a magnetic blast, known for frying computers, so it stands to reason it'd reset the tel tel."
// - ACESpark, June 29, 2018
// We are very scientific here at MaGMML3 Incorporated

// Create weather control
if (!instance_exists(objTelTelWeatherControl))
{
    instance_create(view_xview, view_yview, objTelTelWeatherControl);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // Animation and actioning ROLLED INTO ONE????
    actionTimer++;
    
    switch (phase)
    {
        // Clear weather, not hit
        case 0:
            if (actionTimer == 6)
            {
                image_index += 1;
                if (image_index &gt; 2)
                {
                    image_index = 0;
                }
                
                actionTimer = 0;
            }
            break;
        
        // Clear weather, hit
        case 1: // initial fold up 
            if (actionTimer == 10)
            {
                image_index = 3;
            }
            
            if (actionTimer mod 6 == 0 &amp;&amp; actionTimer &gt; 10 &amp;&amp; image_index &lt; 8)
            {
                image_index += 1;
            }
            
            // spin around
            if (actionTimer mod 3 == 0 &amp;&amp; image_index &gt;= 8)
            {
                image_index += 1;
                if (image_index &gt;= 16)
                {
                    image_index = 16;
                    actionTimer = -60;
                    phase = 2;
                }
            }
            break;
        
        // Clear weather, fall down
        case 2:
            if (actionTimer &gt; 0)
            {
                grav = 0.25;
                if (actionTimer == 6)
                {
                    image_index += 1;
                    if (image_index &gt; 18)
                    {
                        image_index = 16;
                    }
                    
                    actionTimer = 0;
                }
                
                // Die if offscreen
                if (y &gt; view_yview[0] + view_hview[0])
                {
                    instance_destroy();
                    
                    // Tel Tel never respawns after this in the original game.
                }
            }
            break;
        
        // Rainy weather, not hit
        case 3:
            if (actionTimer == 6)
            {
                image_index += 1;
                if (image_index &gt; 18)
                {
                    image_index = 16;
                }
                
                actionTimer = 0;
            }
            break;
        
        // Rainy weather, hit
        case 4:
            if (actionTimer mod 8 == 0)
            {
                if (image_index &lt; 21)
                {
                    image_index += 1;
                }
                else
                {
                    // fall down like a loser
                    grav = 0.25;
                }
            }
            
            // Die if offscreen
            if (y &gt; view_yview[0] + view_hview[0])
            {
                instance_destroy();
                
                // Tel Tel never respawns after this in the original game.
            }
            break;
        
        // Snowy weather, clear
        case 5: // Absolutely nothing 
            break;
        
        // Snowy weather, hit
        case 6:
            if (actionTimer mod 6 == 0 &amp;&amp; image_index &gt; 0 &amp;&amp; actionTimer &gt; 0)
            {
                image_index -= 1;
                if (image_index == 17)
                {
                    image_index = 8;
                    actionTimer = -60;
                }
            }
            
            if (image_index == 0)
            {
                grav = 0.25;
            }
            
            // Die if offscreen
            if (y &gt; view_yview[0] + view_hview[0])
            {
                instance_destroy();
                
                // Tel Tel never respawns after this in the original game.
            }
            break;
    }
    
    // Wave movement
    if (phase == 0 || phase == 3 || phase == 5)
    {
        sinCounter += .075;
        yspeed = -(sin(sinCounter) * 1.375);
    }
}
else if (dead)
{
    phase = 0;
    sinCounter = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// if there's rain, there's rain!
if (place_meeting(x, y, objToadRain))
{
    global.telTelWeather = 1;
}

// Force phases depending on the weather
if (global.telTelWeather == 0)
{
    phase = 0;
    image_index = 0;
}
else if (global.telTelWeather == 1)
{
    phase = 3;
    image_index = 16;
}
else if (global.telTelWeather == 2)
{
    phase = 5;
    image_index = 21;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Make sure he never dies.
healthpoints += global.damage;

// Don't change weather if the tel tel isn't in a base phase
if (phase != 0 &amp;&amp; phase != 3 &amp;&amp; phase != 5)
{
    exit;
}

// different reactions
switch (global.telTelWeather)
{
    // Clear weather
    case 0: // Anything can trigger rainy weather 
        global.telTelWeather = 1;
        
        // start up animation
        with (objTelTelWeatherControl)
        {
            animTimer = 0;
        }
        
        // activate all tel tels onscreen
        with (objTelTel)
        {
            if (!dead)
            {
                image_index = 0;
                phase = 1;
                actionTimer = -20;
                
                yspeed = 0;
                sinCounter = 0;
                respawn = false;
            }
        }
        break;
    
    // Go to snow
    case 1: // Ice weapons trigger snowy weather 
        for (var i = 0; i &lt; array_length_1d(snowSource); i++)
        {
            if (other.object_index == snowSource[i])
            {
                global.telTelWeather = 2;
                
                // start up animation
                with (objTelTelWeatherControl)
                {
                    animTimer = 0;
                    darkenAlpha = (3 / 4);
                    playSFX(sfxMenuSelect);
                    stopSFX(sfxTelTelRain);
                }
                
                with (objTelTel)
                {
                    if (!dead)
                    {
                        image_index = 18;
                        phase = 4;
                        actionTimer = 0;
                        
                        yspeed = 0;
                        sinCounter = 0;
                        respawn = false;
                    }
                }
            }
        }
        break;
    
    // Go to clear
    case 2: // Fire weapons clear snowy weather 
        for (var i = 0; i &lt; array_length_1d(clearSource); i++)
        {
            if (other.object_index == clearSource[i])
            {
                // activate all tel tels onscreen
                with (objTelTel)
                {
                    if (!dead)
                    {
                        image_index = 21;
                        phase = 6;
                        actionTimer = 0;
                        
                        yspeed = 0;
                        sinCounter = 0;
                        respawn = false;
                    }
                }
                
                playSFX(sfxSearchyFound);
                
                global.telTelWeather = 0;
            }
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

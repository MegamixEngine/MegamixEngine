<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMetall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;
stopOnFlash = false;

category = "mets";

facePlayerOnSpawn = false;
respawn = false;

// Enemy specific code
cooldownTimer = 0;

animTimer = 0;

canCollide = 32;

despawnRange = -1;

itemDrop = -1;

blockCollision = false;
parent = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var xs = xspeed;
if (!ground)
{
    xspeed = 0;
}

if (ground &amp;&amp; image_index == 0)
{
    image_index = 1;
}

if (entityCanStep())
{
    xspeed = xs;
    
    canCollide--;
    
    if (canCollide &gt; 0 &amp;&amp; checkSolid(x, y))
    {
        canCollide = 32;
    }
    
    if (canCollide &lt;= 0 &amp;&amp; !blockCollision)
    {
        blockCollision = true;
    }
    
    if (animTimer == 0 &amp;&amp; cooldownTimer &lt;= 120 &amp;&amp; image_index &gt; 1)
    {
        animTimer = 6;
        if (image_index == 3)
        {
            image_index = 4;
        }
        else if (image_index == 4)
        {
            image_index = 3;
        }
        else
            image_index++;
    }
    else
    {
        animTimer -= 1;
    }
    
    cooldownTimer += 1;
    
    if (cooldownTimer == 60)
    {
        image_index = 3;
        animTimer = 6;
        xspeed = 1.5 * image_xscale;
    }
    
    if (blockCollision &amp;&amp; checkSolid(xspeed, 0) || x &lt; global.sectionLeft || x &gt; global.sectionRight)
    {
        instance_create(bboxGetXCenter(), bboxGetYCenter(), objExplosion);
        instance_destroy();
    }
}
else if (dead)
{
    cooldownTimer = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 0)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

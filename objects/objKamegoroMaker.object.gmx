<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKamegoroMaker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
healthpointsStart = 28;
healthpoints = healthpointsStart;
blockCollision = 0;
grav = 0;
pose = sprite_index;
contactDamage = 0;
moveDir = 1;
ground = false;
attackTimer = 0;
shotsFired = 0;
phase = 0;
image_speed = 0;
chosenPipe = noone;
delayPipe = 0;
introType = 0;

// Health Bar
healthBarPrimaryColor[1] = 25;
healthBarSecondaryColor[1] = 40;

// Music
music = "Mega_Man_3.nsf";
musicType = "VGM";
musicTrackNumber = 13;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Handle Intro
if (!global.frozen)
{
    with (objKamegoroTornadoMakerH)
    {
        if (id != other.chosenPipe)
            attackTimer = 0;
    }
    bubbleTimer = 0;
    image_speed = 0;
    
    // Starting the intro animation
    if (startIntro)
    {
        if (image_xscale == -1)
        {
            x = view_xview[0] + view_wview[0];
        }
        else
        {
            x = view_xview[0] - sprite_xoffset;
        }
        startIntro = false;
        isIntro = true;
        drawBoss = true;
    }
    else if (isIntro)
    {
        if (((x &lt; xstart) &amp;&amp; image_xscale == 1) || ((x &gt; xstart) &amp;&amp; image_xscale == -1))
        {
            x += image_xscale;
        }
        else
        {
            visible = true;
            isIntro = false;
            grav = gravStart;
            blockCollision = blockCollisionStart;
        }
    }
}
if (entityCanStep())
{
    if (isFight)
    {
        attackTimer += 1;
        if (delayPipe &gt; 0)
            delayPipe -= 1;
        contactDamage = 8;
        if (!instance_exists(objKamegoroTornado) &amp;&amp; delayPipe == 0)
        {
            var inst = instance_find(objKamegoroTornadoMakerH, irandom(instance_number(objKamegoroTornadoMakerH) - 1));
            if (chosenPipe != inst.id)
            {
                chosenPipe = inst.id;
                delayPipe = 64;
            }
        }
        switch (phase)
        {
            case 0: // move about 
                image_index = 0;
                xspeed = 1.5 * moveDir;
                if (place_meeting(x + 2, y, objSolid) &amp;&amp; moveDir == 1 || place_meeting(x - 2, y, objSolid) &amp;&amp; moveDir == -1)
                    moveDir *= -1;
                if (attackTimer &gt;= 72)
                {
                    image_index = 1;
                    attackTimer = 0;
                    xspeed = 0;
                    phase = 1;
                }
                break;
            case 1: // summon kamegoro 
                if (attackTimer == 16)
                {
                    instance_create(x, y + 32, objExplosion);
                    with (instance_create(x, y + 32, objKamegoro))
                    {
                        spd = (0.75 * other.shotsFired) + 1.5;
                    }
                    shotsFired += 1;
                }
                if (attackTimer == 24)
                    image_index = 0;
                if (attackTimer &gt; 24 &amp;&amp; !instance_exists(objKamegoro))
                {
                    attackTimer = 0;
                    phase = 0;
                }
                break;
        }
        if (healthpoints &lt;= 0)
            event_user(EV_DEATH);
        
        // Face the player
        calibrateDirection();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.penetrate &gt;= 2)
{
    other.guardCancel = 2;
}
else
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with (objKamegoro)
    instance_destroy();
with (objKamegoroTornado)
    instance_destroy();
with (objKamegoroShell)
    instance_destroy();
with (objKamegoroTornadoMakerH)
{
    kamegoroDead = true;
    attackTimer = 0;
    active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase == 1)
{
    if (attackTimer &lt; 16)
    {
        draw_sprite_ext(sprKamegoro, 0, round(x), round(y) + (attackTimer * 2), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    }
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

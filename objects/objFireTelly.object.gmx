<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFireTelly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "fire, floating";

grav = 0;
blockCollision = false;

facePlayerOnSpawn = true;

// enemy specific code
phase = 1;
shootTimer = 0;
chain = 0;
previousShotType = 0;

keptYSpeed = 0;

imgSpd = 0.10;
imgIndex = 0;
shootWait = 0;
moveV = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // set charge time
        case 1: // choose time to wait between shots, and don't repeat the same time more than twice in a row 
            var shotType = choose(0, 1);
            
            if (shotType == previousShotType &amp;&amp; chain &gt;= 2)
            {
                if (shotType == 0)
                {
                    shotType = 1;
                }
                else
                {
                    shotType = 0;
                }
                
                chain = 0;
            }
            
            if (shotType == 0)
            {
                shootWait = 50;
            }
            else if (shotType == 1)
            {
                shootWait = 120;
            }
            
            previousShotType = shotType;
            
            chain += 1;
            
            xspeed = 1 * image_xscale; // &lt;-- speed here
            yspeed = keptYSpeed;
            
            phase = 2;
            
            break;
        
        // wait to shoot
        case 2: // animation 
            imgIndex += imgSpd;
            if (imgIndex &gt;= 4)
            {
                imgIndex = imgIndex mod 4;
            }
            
            if (instance_exists(target))
            {
                // wait to fire
                shootWait -= 1;
                yspeed = keptYSpeed;
                if (shootWait &lt;= 0)
                {
                    phase = 3;
                    shootWait = 0;
                    imgIndex = 4;
                    xspeed = 0;
                    yspeed = 0;
                    playSFX(sfxFireTelly);
                    with (instance_create(x, y + sprite_height / 2, objFireTellyShot))
                        parent = other.id;
                }
            }
            
            break;
        
        // shoot
        case 3:
            imgIndex += imgSpd * 2;
            if (imgIndex &gt;= 6)
            {
                imgIndex = 0;
            }
            if (imgIndex &gt;= 1 &amp;&amp; imgIndex &lt; 4)
            {
                phase = 1;
            }
            
            break;
    }
    
    if (moveV)
    {
        if (keptYSpeed == 0)
        {
            if (other.y &lt; y)
            {
                keptYSpeed = -0.5;
            }
            else
            {
                keptYSpeed = 0.5;
            }
        }
    }
    image_index = imgIndex div 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On spawn
event_inherited();
if (spawned)
{
    phase = 1;
    shootTimer = 0;
    xspeed = 0;
    yspeed = 0;
    keptYSpeed = 0;
    imgIndex = 0;
    moveV = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
moveV = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprQuickLighting</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2000</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

grav = 0;
blockCollision = false;
bubbleTimer = -1;

// 1: full lighting
// 0: no lighting
lightingLevel = 1;
lightingSwitchSpeed = 1 / 20;

// multiplies tile colour by this value:
lightingColor = make_color_rgb(255 * .8, 20, 20);

// adds this factor of the original tile colour to the above:
lightingRetain = 0.2;

lightSource[0] = objTackleFire;
lightSource[1] = objHothead;
lightSource[2] = objElectricGabyoallCurrent;
lightSource[3] = objQuickLaser;
lightSource[4] = objFireBoy;
lightSource[5] = objOil;
lightSource[6] = objHarmfulExplosion;
lightSource[7] = objMagmaBeam;
lightSource[8] = objFireBoyShot;
lightSource[9] = objNapalm;
lightSource[10] = objFireWave;
lightSource[11] = objFireTotem;
lightSource[12] = objChangkeyDragon;
lightSource[13] = objSuzakAndFenix;
lightSource[14] = objDompanFireworkSpark;

// don't edit these
respawnRange = -1;
despawnRange = -1;

// semi: dark red light instead of normal
lightingSemi = false;
roundedLightingLevel = 0;

// global flag system (-1 ignores the flag)
myFlag = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    var lighting_active = false;
    
    for (var i = 0; i &lt; array_length_1d(lightSource); i++)
    {
        with (lightSource[i])
        {
            var valid = visible;
            if (object_index == objOil)
                if (!fire)
                    valid = false;
            if (object_index != objHarmfulExplosion)
                if (dead)
                    valid = false;
            if (insideView() &amp;&amp; valid)
                lighting_active = true;
        }
    }
    
    var lighting_semi_desired = true;
    with (objQuickLightingNormal)
        if (insideView())
        {
            lighting_semi_desired = false;
            lighting_active = true;
        }
    
    // Flag system
    if (myFlag != -1)
    {
        if (global.flagParent[myFlag].active)
        {
            lighting_semi_desired = false;
            lighting_active = true;
        }
    }
    
    if (lighting_active &amp;&amp; !(lighting_semi_desired ^^ lightingSemi))
        lightingLevel += lightingSwitchSpeed;
    else
        lightingLevel -= lightingSwitchSpeed;
    lightingLevel = clamp(lightingLevel, 0, 1);
    
    // can only switch between semi and non-semi lighting in the full darkness
    if (lightingLevel == 0)
        lightingSemi = lighting_semi_desired;
    
    roundedLightingLevel = floor(lightingLevel * 5) / 5;
    var _rrl = roundedLightingLevel;
    
    // oil goes dark
    with (objOil)
        if (!fire)
            image_blend = make_color_rgb(255 * _rrl, 255 * _rrl, 255 * _rrl);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
if (lightingLevel == 1 &amp;&amp; !lightingSemi)
    exit;

if (lightingSemi)
{
    draw_set_alpha(lightingRetain);
    draw_set_blend_mode_ext(bm_dest_color, bm_src_alpha);
    draw_set_color(lightingColor);
    draw_rectangle(global.sectionLeft, global.sectionTop, global.sectionRight, global.sectionBottom, false);
    draw_set_blend_mode(bm_normal);
}

draw_set_color(c_black);
draw_set_alpha(1 - roundedLightingLevel);
{
    draw_rectangle(global.sectionLeft, global.sectionTop, global.sectionRight, global.sectionBottom, false);
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaterWave</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 1;
blockCollision = 1;
grav = 0.25;

penetrate = 0;
pierces = 0;

spoutID = 0;
spawnDelay = 1;
spoutFrame = 0;

imgIndex = 0;
imgSpd = 0.2;

inWater = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = mskWaterWaveSmall; // So it can go through slide passages
event_inherited();
if (entityCanStep())
{
    if (!ground) // Halt movement when not on ground
    {
        xspeed = 0;
    }
    else
    {
        xspeed = 3 * image_xscale;
    }
    
    spawnDelay--; // Spawn extra spouts
    if (spawnDelay == 0) &amp;&amp; (spoutID &lt; 2)
    {
        with(instance_create(xstart,ystart,objWaterWave))
        {
            spoutID = other.spoutID + 1;
            image_xscale = other.image_xscale;
            image_yscale = other.image_yscale;
            if (spoutID == 1)
            {
                spawnDelay = 3;
            }
        }
    }
    
    var animTable = makeArray(0,1,2,3,2,1);
    spoutFrame += imgSpd; // Animation
    if (spoutFrame &gt;= 6)
    {
        if (xcoll != 0)
        {
            instance_destroy();
            exit;
        }
        else
        {
            spoutFrame = 2;
        }
    }
    imgIndex = animTable[spoutFrame];
}
mask_index = sprWaterWave;
image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtEnemyProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canDamage)
{
    switch (other.reflectable)
    {
        case -1:
        case 1:
            with (other)
            {
                instance_destroy();
            }
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (performShoot)
{
    if (ground)
    {
        var terrainFree = false;
        var wallCheck = instance_create(x+8 * image_xscale,y,objTomahawkPlatformStop);
        with (wallCheck)
        {
            image_xscale = other.image_xscale;
            if (!place_meeting(x,y,objSolid))
                terrainFree = true;
            instance_destroy();
        }
        
        if (terrainFree) &amp;&amp; (!checkFall(24 * image_xscale))
        {
            var ammoCost = 2 - (1 * (global.energySaver &gt; 0));
            
            with(fireWeapon(23, 0, objWaterWave, 1, ammoCost, 1, 0))
            {
                xspeed = 3 * image_xscale;
                playSFX(sfxWaterWave);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("fire",2);
specialDamageValue("grounded",3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("WATER WAVE", global.nesPalette[$11], global.nesPalette[$20], sprWeaponIconsWaterWave);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

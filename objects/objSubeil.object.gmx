<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSubeil</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// col = &lt;number&gt; (0 = green (default); 1 = red; 2 = purple)

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "grounded";

// Enemy specific code
radius = 72;
imageOffset = 0;
hitboxOffset = 6;
activated = false;
imageTimer = 0;
imageTimerMax = 8;

col = 0;

calibrateDirection();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (target)
    {
        if (!activated &amp;&amp; abs(target.x - x) &lt;= radius &amp;&amp; abs(target.y - y) &lt;= 16)
        {
            activated = true;
            imageOffset = 2;
            mask_index = sprMousubeil; // REUSING ASSETS CLAP EMOJI
            calibrateDirection();
        }
    }
    
    imageTimer += 1;
    if (imageTimer &gt; imageTimerMax)
    {
        imageTimer = 0;
    }
    
    if (!activated)
    {
        if (imageTimer == imageTimerMax / 2 &amp;&amp; imageOffset == 0)
        {
            imageOffset = 1;
            imageTimer = 0;
        }
        else if (imageTimer == imageTimerMax / 2 &amp;&amp; imageOffset == 1)
        {
            imageOffset = 0;
            imageTimer = 0;
        }
    }
    
    // animation setup
    if (imageTimer == imageTimerMax &amp;&amp; imageOffset &gt; 1 &amp;&amp; imageOffset &lt; 5)
    {
        imageOffset += 1;
        imageTimer = 0;
    }
    if (imageTimer == imageTimerMax &amp;&amp; imageOffset == 5)
    {
        imageOffset = 3;
        imageTimer = 0;
    }
    
    if (!ground)
    {
        xspeed = 0;
    }
    else
    {
        if (activated &amp;&amp; imageOffset &gt; 2)
        {
            if (xspeed == 0 &amp;&amp; yspeed == 0)
            {
                xspeed = 2 * image_xscale;
            }
        }
    }
    
    // turn around on hitting a wall
    xSpeedTurnaround();
}
else if (dead)
{
    calibrateDirection();
    xspeed = 0;
    yspeed = 0;
    imageOffset = 0;
    hitboxOffset = 6;
    activated = false;
    mask_index = sprSubeil;
}

image_index = (col * 6) + imageOffset;

// if subeil is not activated, it defaults its values.
if (!activated)
{
    contactDamage = 3;
}
else
{
    // set size of hitbox depending on animation frames.
    if (imageOffset &lt;= 2)
    {
        hitboxOffset = -6;
    }
    else if (imageOffset == 2)
    {
        hitboxOffset = 0;
    }
    else
    {
        hitboxOffset = 8;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (other.bbox_bottom &lt; y + hitboxOffset)
{
    other.guardCancel = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

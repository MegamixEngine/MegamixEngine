<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMagFly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flying magnets that pull Mega Man up and carry him
event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "flying";

blockCollision = 0;
grav = 0;

facePlayerOnSpawn = true;

// Enemy specific code
airControlSpeed = 1 / 8; // speed at which player can move up and down on their own
image_speed = 0.3;

tugDist[global.playerCount] = 0;
tugSpeed[global.playerCount] = 0;
tugLock[global.playerCount] = 0;
tugDefer[global.playerCount] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

tugDist[global.playerCount] = 0;
tugSpeed[global.playerCount] = 0;
tugLock[global.playerCount] = 0;
tugDefer[global.playerCount] = 0;

var myID = id;

var canStep = entityCanStep();
if (canStep)
    image_speed = 0.3;
else
    image_speed = 0;
with (objMegaman)
{
    if (canStep)
    {
        // check if other magfly has lock?
        var otherLock = false;
        with (objMagFly)
        {
            if (tugLock[other.playerID] &amp;&amp; id != myID)
            {
                otherLock = true;
            }
        }
        
        // pull mega man if possible
        if (iFrames == 0 &amp;&amp; !teleporting &amp;&amp; !showReady &amp;&amp; !isSlide &amp;&amp; !hitLock &amp;&amp; !otherLock &amp;&amp; !climbing)
        {
            if (x &gt; other.x - 16 &amp;&amp; x &lt; other.x + 16
                &amp;&amp; y &gt; other.y + 18 &amp;&amp; y &lt; other.y + view_hview[0])
            {
                if (!other.tugLock[playerID])
                {
                    other.tugLock[playerID] = lockPoolLock(localPlayerLock[PL_LOCK_GRAVITY]);
                    
                    // ensure lock eventually released
                    other.tugDefer[playerID] = defer(ev_destroy, EV_DEATH, -10000000, lockPoolRelease, makeArray(other.tugLock[playerID]));
                }
                
                // apply force to mega man
                if (other.tugDist[playerID] &gt;= 0)
                {
                    shiftObject(other.xspeed, 0, true);
                }
                
                // yspeed acceleration (vertical tug)
                yspeed = 0;
                if (other.tugDist[playerID] &lt; 0)
                {
                    shiftObject(0, -other.tugSpeed[playerID], true);
                    other.tugDist[playerID] += other.tugSpeed[playerID];
                    if (other.tugSpeed[playerID] &lt; 5)
                        other.tugSpeed[playerID] += 0.25;
                }
                
                // moving up and down
                if (!playerIsLocked(PL_LOCK_AERIAL))
                {
                    shiftObject(0, -global.keyUp[playerID] * other.airControlSpeed + global.keyDown[playerID] * other.airControlSpeed, true);
                }
                
                // air-jumping
                if (!playerIsLocked(PL_LOCK_JUMP))
                {
                    if (global.keyJumpPressed[playerID])
                    {
                        other.tugDist[playerID] = -32;
                    }
                }
                
                // ground fix
                repeat (10)
                {
                    if (ground &amp;&amp; other.tugSpeed &gt; 3)
                    {
                        shiftObject(0, -0.1, true);
                        checkGround();
                    }
                }
                continue;
            }
        }
    }
    
    // unlock
    other.tugLock[playerID] = lockPoolRelease(other.tugLock[playerID]);
    if (other.tugDefer[playerID] &gt; 0)
        with (other.tugDefer[playerID])
            instance_destroy();
    other.tugDist[playerID] = -30.5;
    other.tugSpeed[playerID] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (spawned)
{
    if (x &lt; view_xview[0] + view_wview[0] / 2)
        image_xscale = 1;
    else
        image_xscale = -1;
    xspeed = 1 * image_xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPukapucker_Top</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 3;

facePlayerOnSpawn = true;

// Enemy specific code
bodyInstanceStore = -1;

//creation code
moveSpeed = 2; //how fast it moves
jumpSpeed = -5; //how high it jumps
groundSound = noone; //if set,play sound when landing
imgSpd = 0.15;
jumpStart = false; //if true, start by jumping
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (iceTimer &gt; 0)
    bodyInstanceStore = 0;
if (entityCanStep())
{
    image_index += imgSpd;
    
    xSpeedTurnaround();
    
    if (ground)
    {
        yspeed = sign(grav) * jumpSpeed;
        xspeed = moveSpeed * image_xscale;
        if (groundSound != noone)
        {
            playSFX(groundSound);
        }
    }
    
    if (instance_exists(bodyInstanceStore) &amp;&amp; bodyInstanceStore != -1)
    {
        if (bodyInstanceStore != 0 &amp;&amp; !bodyInstanceStore.dead)
        {
            var inst;
            inst = bodyInstanceStore;
            shiftObject(inst.x - x, 0, true);
            xspeed = 0;
            image_xscale = inst.image_xscale;
            if (y &gt;= inst.y - 8)
            {
                yspeed = sign(grav) * (jumpSpeed + -0.5);
            }
        }
        
        if (bodyInstanceStore != 0 &amp;&amp; xspeed == 0 &amp;&amp; bodyInstanceStore.dead)
        {
            xspeed = moveSpeed * image_xscale;
        }
        if (bodyInstanceStore == 0)
        {
            xspeed = moveSpeed * image_xscale;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (spawned)
{
    xspeed = 0;
    if (jumpStart)
        yspeed = jumpSpeed;
    else
        yspeed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// if the top of the head is killed, destroy bottom half
with (bodyInstanceStore)
{
    if (!dead)
    {
        event_user(EV_DEATH);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

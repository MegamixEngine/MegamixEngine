<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGravitron</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "floating";

grav = 0;
blockCollision = 0;

// Enemy specific code
animTimer = 0;
bulletID = -10;
myGravity = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // spawn bullet if one doesn't exist
    if (!instance_exists(bulletID))
    {
        bulletID = instance_create(x + 8, y - 4, objGravitronGumball);
        bulletID.grav = myGravity * gravAccel;
        bulletID.yspeed = 1 * myGravity;
        bulletID.image_yscale = myGravity;
        if (myGravity == 1)
        {
            bulletID.y += sprite_height + 4;
        }
    }
    
    // animation timer
    if (animTimer &gt; -1)
    {
        animTimer -= 1;
    }
    if (animTimer == 0)
    {
        if (image_index == 1)
        {
            image_index = 2;
            myGravity = -1;
        }
        else if (image_index == 3)
        {
            image_index = 0;
            myGravity = 1;
        }
    }
    
    // detect target's gravity
    if (instance_exists(target))
    {
        if (myGravity == 1 &amp;&amp; target.image_yscale == -1 &amp;&amp; image_index == 0)
        {
            image_index = 1;
            animTimer = 5;
        }
        if (myGravity == -1 &amp;&amp; target.image_yscale == 1 &amp;&amp; image_index == 2)
        {
            image_index = 3;
            animTimer = 5;
        }
    }
}
else if (dead)
{
    animTimer = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTatepakkan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// col = &lt;number&gt; (0 = orange (default); 1 = red; 2 = green ; 3 = game gear colouration)

event_inherited();

respawn = true;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 5;
category = "cannons, shielded";
doesTransition = false;
isSolid = 0;

facePlayerOnSpawn = true;

// Enemy specific code
mySolid = instance_create(x, y, objTatepakkanPlatform);

// Image variables
cooldownImageTimer = 0;
cooldownImageMax = 120;
imageOffset = 0;

platformOffset = 7;
platformCalc = 7;
currentPlatformOffset = 7;

col = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// destroy leftover solid if it's still there
instance_activate_object(mySolid);
with (mySolid)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // setup defences
    if (imageOffset == 0)
    {
        calibrateDirection();
    }
    
    cooldownImageTimer += 1;
    
    if (imageOffset == 2 &amp;&amp; cooldownImageTimer == cooldownImageMax / 2)
    {
        var ID;
        ID = instance_create(x + image_xscale * 9, spriteGetYCenter() + 5,
            objEnemyBullet);
        {
            ID.xspeed = image_xscale * 2;
            ID.contactDamage = 4;
        }
        playSFX(sfxEnemyShootClassic);
    }
}

if (!dead)
{
    // animation timer setup;
    switch (imageOffset)
    {
        case 0:
            cooldownImageMax = 120;
            break;
        case 1:
            cooldownImageMax = 9;
            break;
        case 2:
            cooldownImageMax = 36;
            break;
        case 3:
            cooldownImageMax = 9;
            break;
    }
    
    if (cooldownImageTimer == cooldownImageMax &amp;&amp; imageOffset &lt; 3)
    {
        cooldownImageTimer = 0;
        imageOffset += 1;
    }
    if (cooldownImageTimer == cooldownImageMax &amp;&amp; imageOffset == 3)
    {
        cooldownImageTimer = 0;
        imageOffset = 0;
    }
    image_index = (4 * col) + imageOffset;
    
    // create standable block:
    if (instance_exists(mySolid))
    {
        if (!visible)
        {
            with (mySolid)
                instance_destroy();
        }
        else
        {
            mySolid.x = x;
            mySolid.yspeed = ((y - currentPlatformOffset) - mySolid.y);
            if (currentPlatformOffset &lt; platformCalc)
                currentPlatformOffset += 1;
            else if (currentPlatformOffset &gt; platformCalc)
                currentPlatformOffset -= 1;
            
            if (imageOffset &lt; 3)
                platformCalc = (platformOffset + (imageOffset * 3));
            else
                platformCalc = (platformOffset + (imageOffset * 3) - 6);
        }
    }
    else if (visible)
    {
        mySolid = instance_create(x, y, objTatepakkanPlatform);
    }
}
else if (dead)
{
    if (instance_exists(mySolid))
    {
        with (mySolid)
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_index = 0;
imageOffset = 0;
cooldownImageTimer = 0;
cooldownImageMax = 130;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage tables
specialDamageValue(objHornetChaser, 2);
specialDamageValue(objJewelSatellite, 1);
specialDamageValue(objGrabBuster, 2);
specialDamageValue(objTripleBlade, 1);
specialDamageValue(objWheelCutter, 2);
specialDamageValue(objSlashClaw, 2);
specialDamageValue(objSakugarne, 2);
specialDamageValue(objSuperArrow, 2);
specialDamageValue(objWireAdapter, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (imageOffset == 0)
{
    if (sign(bboxGetXCenterObject(other.id) - bboxGetXCenter()) == image_xscale)
    {
        other.guardCancel = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

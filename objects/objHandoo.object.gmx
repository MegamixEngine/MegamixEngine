<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHandoo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// This enemy jumps toward the player until it gets close, launches its hands one at a time in the direction of the player, and then chases the player on foot.
/// Also, it deflects shots just by blinking.
/// Handoo is VERY slow to act, so it's best used in situations where the player may be too occupied with other hazards to deal with it immediately.

event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 3;

facePlayerOnSpawn = true;

imgIndex = 0;
imgSpd = 0.1;
animBack = false;

moveTimer = 60;
phase = 0;
hasBlinked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // Blinking
        case 0:
            facePlayer = true;
            moveTimer--;
            if (moveTimer &lt;= 0)
            {
                if (hasBlinked == false)
                {
                    imgIndex += imgSpd;
                }
                if (imgIndex &gt;= 3)
                {
                    animBack = true;
                    hasBlinked = true;
                }
                if (animBack == true)
                {
                    imgIndex -= imgSpd;
                    if (imgIndex == 0)
                    {
                        animBack = false;
                        
                        // Is Mega Man near? Yes = throw hands. No = jump.
                        if (instance_exists(target))
                        {
                            if ((target.x &gt; x - 80) &amp;&amp; (image_xscale == -1) ||
                                (target.x &lt; x + 80) &amp;&amp; (image_xscale == 1))
                            {
                                phase = 2;
                                moveTimer = 30;
                                imgIndex = 5;
                                facePlayer = false;
                            }
                            else
                            {
                                phase = 1;
                                moveTimer = 20;
                                hasBlinked = false;
                                facePlayer = false;
                            }
                        }
                    }
                }
            }
            else
            {
                imgIndex = 0;
            }
            break;
        
        // Jumping
        case 1:
            moveTimer--;
            if (moveTimer == 10)
            {
                imgIndex = 4;
            }
            if (moveTimer &lt;= 0)
            {
                imgIndex = 3;
                if (imgIndex == 3)
                {
                    y -= 3;
                    yspeed -= 4;
                    xspeed = 1 * image_xscale;
                    phase = 4;
                }
            }
            break;
        
        // Punching
        case 2:
            if ((floor(imgIndex) == 13) || (floor(imgIndex) == 19))
            {
                moveTimer--;
                if (moveTimer == 29)
                {
                    var i = instance_create(x + 8 * image_xscale, y - 7, objHandooHand);
                    i.xspeed = 2 * image_xscale;
                    i.image_xscale = image_xscale;
                }
                
                if (moveTimer == 0)
                {
                    imgIndex += 1;
                    moveTimer = 30;
                }
            }
            else
            {
                imgIndex += imgSpd;
            }
            if (imgIndex &gt; 21)
            {
                imgIndex = 23;
                phase = 3;
            }
            break;
        
        // Charging
        case 3:
            if (ground)
            {
                xspeed = 1 * image_xscale;
                
                if (instance_exists(target))
                {
                    if ((image_xscale == -1) &amp;&amp; (x &lt; target.x - 16) ||
                        (image_xscale == 1) &amp;&amp; (x &gt; target.x + 16))
                    {
                        image_xscale *= -1;
                    }
                }
            }
            else
            {
                xspeed = 0;
            }
                
            // Animation
            if (!animBack)
            {
                imgIndex += 0.2;
                if (imgIndex &gt;= 25)
                {
                    animBack = true;
                    imgIndex = 23;
                }
            }
            else
            {
                imgIndex -= 0.2;
                if (imgIndex &lt; 22)
                {
                    animBack = false;
                    imgIndex = 23;
                }
            }
            break;
        
        // Mid-air movement (see case 1)
        case 4:
            if (ground)
            {
                xspeed = 0;
                yspeed = 0;
                imgIndex = 4;
                moveTimer = 60;
                inAir = false;
                phase = 0;
                facePlayer = true;
            }
            break;
    }
}
else if (dead)
{
    healthpoints = healthpointsStart;
    phase = 0;
    imgIndex = 0;
    moveTimer = 60;
    hasBlinked = false;
    animBack = false;
}
image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if ((image_index &gt; 0) &amp;&amp; (image_index &lt; 3))
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

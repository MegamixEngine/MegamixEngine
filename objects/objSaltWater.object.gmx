<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSaltWater</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 2;

penetrate = 1;
pierces = 2;

grav = 0.25;
phase = 0;

blockCollision = 1;

imgs = 0;

if (sprite_index == sprSaltWater)
{
    attackDelay = 16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    switch (phase)
    {
        // Salt Water shot
        case 0: // When landing on ground 
            if (ground)
            {
                if (sprite_index == sprSaltWater)
                {
                    phase = 1;
                    playSFX(sfxSplash);
                    sprite_index = sprSaltWaterSplash1;
                    canDamage = 0;
                    
                    // Create drops
                    var i = instance_create(x, y, objSaltWater);
                    i.sprite_index = sprSaltWaterDrop;
                    i.xspeed = 0.5 * image_xscale;
                    i.yspeed = -5 * image_yscale;
                    i.grav = grav;
                    
                    var i = instance_create(x, y, objSaltWater);
                    i.sprite_index = sprSaltWaterDrop;
                    i.xspeed = 1.25 * image_xscale;
                    i.yspeed = -4.5 * image_yscale;
                    i.grav = grav;
                    
                    var i = instance_create(x, y, objSaltWater);
                    i.sprite_index = sprSaltWaterDrop;
                    i.xspeed = 2 * image_xscale;
                    i.yspeed = -4 * image_yscale;
                    i.grav = grav;
                }
                else
                {
                    phase = 2;
                }
            } // When hitting a wall
            else if (xcoll != 0)
            {
                if (sprite_index == sprSaltWater)
                {
                    phase = 1;
                    playSFX(sfxSplash);
                    sprite_index = sprSaltWaterSplash2;
                    canDamage = 0;
                    
                    // Create drops
                    var i = instance_create(x, y, objSaltWater);
                    i.sprite_index = sprSaltWaterDrop;
                    i.xspeed = -0.5 * image_xscale;
                    i.yspeed = -4 * image_yscale;
                    i.grav = grav;
                    
                    var i = instance_create(x, y, objSaltWater);
                    i.sprite_index = sprSaltWaterDrop;
                    i.xspeed = -1.25 * image_xscale;
                    i.yspeed = -3.5 * image_yscale;
                    i.grav = grav;
                    
                    var i = instance_create(x, y, objSaltWater);
                    i.sprite_index = sprSaltWaterDrop;
                    i.xspeed = -2 * image_xscale;
                    i.yspeed = -3 * image_yscale;
                    i.grav = grav;
                }
                else
                {
                    phase = 2;
                }
            }
            break;
        // Salt Water splash
        case 1:
            blockCollision = 0;
            xspeed = 0;
            yspeed = 0;
            grav = 0;
            image_speed = 0.1;
            imgs += image_speed;
            if (imgs == 3)
            {
                event_user(EV_DEATH);
            }
            break;
        // Salt Water drops
        case 2:
            xspeed = 0;
            yspeed = 0;
            grav = 0;
            image_speed = 0.25;
            imgs += image_speed;
            if (imgs == 4)
            {
                event_user(EV_DEATH);
            }
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(25, -1, objSaltWater, 1, 1, 1, 2);
    if (instance_exists(i)) // Set starting speed
    {
        if ((global.keyUp[playerID] &amp;&amp; gravDir == 1) || (global.keyDown[playerID] &amp;&amp; gravDir == -1))
        {
            i.yspeed = -5 * image_yscale;
            i.xspeed = 2 * image_xscale;
        }
        else if ((global.keyDown[playerID] &amp;&amp; gravDir == 1) || (global.keyUp[playerID] &amp;&amp; gravDir == -1))
        {
            i.yspeed = -2 * image_yscale;
            i.xspeed = 2 * image_xscale;
        }
        else
        {
            i.yspeed = -3 * image_yscale; //-2
            i.xspeed = 2 * image_xscale;
        }
        i.grav = i.grav * image_yscale;
        playSFX(sfxBuster);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Special Damage

specialDamageValue("bulky", 4);
specialDamageValue("semi bulky", 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Mega Man's palette
weaponSetup("SALT WATER", make_color_rgb(0, 120, 248), make_color_rgb(248, 248, 248), sprWeaponIconsSaltWater);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sprSaltWater)
{
    event_inherited();
    grav = 0;
}
else if (sprite_index == sprSaltWaterDrop)
{
    phase = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

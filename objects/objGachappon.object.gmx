<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGachappon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 12;
healthpoints = healthpointsStart;
contactDamage = 6;

category = "bulky";

facePlayerOnSpawn = true;

// Enemy specific code
animTimer = 0;
animFrame = 0;
animOffset = 0;
timer = 0;
phase = 0;
shootCount = 0;
phaseRepeatCount = 0;
prevPhase = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (instance_exists(target))
    {
        if (abs(target.x - x) &gt; 8)
        {
            calibrateDirection();
        }
    }
    
    animFrame += 0.2;
    var didLoop = false;
    if (floor(animFrame) &gt; 1)
    {
        animFrame = 0;
        didLoop = true;
    }
    
    switch (phase)
    {
        case 0: // Idle: choose an attack 
            if (timer == 0 &amp;&amp; prevPhase == 0)
                phaseRepeatCount = 0;
            timer += 1;
            animOffset = 0;
            if (timer &gt; 60)
            {
                phase = irandom(1) + 1;
                if (phase == prevPhase &amp;&amp; prevPhase != 0)
                {
                    phaseRepeatCount += 1;
                    if (phaseRepeatCount &gt; 1)
                    {
                        phaseRepeatCount = 0;
                        if (phase == 1)
                            phase = 2;
                        else
                            phase = 1;
                    }
                }
                if (phase == 1)
                    animFrame = 0;
                prevPhase = phase;
                timer = 0;
                shootCount = 0;
            }
            break;
        case 1: // aim and shoot 
            if (timer &gt; 16)
            {
                if (animOffset != 4)
                {
                    animOffset = 4;
                    didLoop = false;
                    animFrame = 0;
                }
                if (didLoop)
                {
                    animFrame = 1;
                    var i = instance_create(x, y - 64, objEnemyBullet);
                    i.sprite_index = sprTotemPolenProjectile;
                    i.blockCollision = false;
                    i.grav = 0.25;
                    i.yspeed = -5;
                    i.contactDamage = 2;
                    animFrame = 1;
                    if (instance_exists(target))
                    {
                        i.xspeed = xSpeedAim(i.x, i.y, target.x, target.y, i.yspeed, i.grav, 2.65);
                    }
                    timer = 0;
                    shootCount += 1;
                    if (shootCount == 3)
                    {
                        phase = 0;
                    }
                }
            }
            else
            {
                timer += 1;
                animOffset = 0;
            }
            break;
        case 2: // Regular shot 
            if (timer &gt; 20)
            {
                var pao = floor(animOffset);
                animOffset += 0.2;
                if (floor(animOffset) &gt; 3 &amp;&amp; pao != floor(animOffset))
                {
                    animOffset = 3;
                    shootCount += 1;
                    timer = -1;
                    var i = instance_create(x + 8 * image_xscale, y - 4, objEnemyBullet);
                    i.xspeed = 3.5 * image_xscale;
                    i.contactDamage = 2;
                }
            }
            else if (timer &gt;= 0)
            {
                timer += 1;
                animOffset = 0;
            }
            else if (timer &lt; 0)
            {
                timer -= 1;
                animOffset -= 0.2;
                if (floor(animOffset) &lt; 0)
                {
                    animOffset = 0;
                    timer = 0;
                    if (shootCount == 2)
                    {
                        phase = 0;
                    }
                }
            }
            break;
    }
    
    image_index = floor(animOffset) * 2 + floor(animFrame);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_index = 0;
animTimer = 0;
animFrame = 0;
animOffset = 0;
phase = 0;
shootCount = 0;
phaseRepeatCount = 0;
prevPhase = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

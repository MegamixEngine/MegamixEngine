<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPandeeta</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 6;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "semi bulky, nature";

facePlayerOnSpawn = true;

// Enemy specific code
phase = 0;
shootTimer = 0;
shootWait = 80;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (instance_exists(target))
    {
        if (shootTimer &lt;= 0)
        {
            shootTimer = shootWait;
            
            if (abs(target.x - x)
                &lt; abs(sprite_width) / 2 + 32)
            {
                // straight bullet
                var bullet = instance_create(x + sprite_width * 0.3, y - 8, objEnemyBullet);
                bullet.sprite_index = sprPandeetaStraightShot;
                bullet.xspeed = 2.5 * image_xscale;
                playSFX(sfxEnemyShoot);
            }
            else
            {
                // arc bullet
                var bullet = instance_create(x + sprite_width * 0.3, y - 8, objEnemyBullet);
                bullet.contactDamage = 3;
                bullet.sprite_index = sprPandeetaArcShot;
                bullet.grav = 0.15;
                bullet.yspeed = -4;
                bullet.target = target;
                bullet.xspeed = xSpeedAim(bullet.x, bullet.y, bullet.target.x, bullet.target.y, bullet.yspeed, bullet.grav);
                
                playSFX(sfxEnemyDrop);
            }
            
            image_index = 1;
        }
    }
    
    if (shootTimer &lt;= shootWait - 30)
    {
        image_index = 0;
        calibrateDirection();
    }
    
    shootTimer -= 1;
}
else if (dead)
{
    phase = 0;
    shootTimer = shootWait;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrashBombFired</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

grav = 0;

image_speed = 0;
stopOnFlash = false;

contactDamage = 4;

var spd;
spd = 6;
cooldownTimer = 32;

// dang Slight Difference In The Code From aimAtTarget....once again foiled
if (instance_exists(target))
{
    var angle;
    angle = point_direction(spriteGetXCenter(), spriteGetYCenter(),
        spriteGetXCenterObject(target),
        spriteGetYCenterObject(target));
    
    xspeed = cos(degtorad(angle)) * spd;
    yspeed = -sin(degtorad(angle)) * spd;
}
else
{
    xspeed = spd;
    yspeed = spd;
}

reflectable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (xspeed != 0)
    {
        image_xscale = sign(xspeed);
    }
    
    if (ycoll != 0 &amp;&amp; sprite_index != sprCrashBombArmed)
    {
        playSFX(sfxCrashBombArm);
        xspeed = 0;
        yspeed = 0;
        sprite_index = sprCrashBombArmed;
    }
    
    if (sprite_index == sprCrashBombArmed)
    {
        image_index += 0.125;
        cooldownTimer -= 1;
        if (cooldownTimer &lt;= 0)
        {
            // visible = false;
            if (cooldownTimer mod 8 == 0)
            {
                playSFX(sfxEnemyHit);//playSFX(sfxCrashBomb);
                var i;
                var d = choose(1, -1);
                var t = irandom(45) * -d;
                for (i = 0; i &lt; 4; i += 1)
                {
                    t += irandom_range(45, 90) * sign(d);
                    var expl = instance_create(x, y, objHarmfulExplosion);
                    expl.stopOnFlash = false;
                    expl.sprite_index = sprCrashExplosion;
                    expl.contactDamage = 4;
                    with (expl)
                    {
                        direction = other.t;
                        rotationMovement(x, y, irandom_range(8, 20), 0);
                    }
                }
            }
        }
        if (cooldownTimer &lt;= -64)
            instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

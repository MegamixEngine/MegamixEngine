<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprChillSpikeGenerate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEffect</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

spike = 0;
cooldownTimer = 8;
image_speed = 0.25;

i = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.frozen)
{
    if (cooldownTimer &gt; 0)
    {
        cooldownTimer -= 1;
    }
    
    if (cooldownTimer == 0)
    {
        if (!i)
        {
            //playSFX(sfxChillShoot);
            switch (spike)
            {
                case 0: // generate spike 
                    i = instance_create(x, y - 16, objChillSpikeDetector);
                    i.image_xscale = -1;
                    i.spreadAttack = true;
                    break;
                case 1: // generate spike 
                    i = instance_create(x - 48, y, objChillSpikeDetector);
                    i.image_xscale = -1;
                    i.spreadAttack = true;
                    i.aimAtMegaman = true;
                    break;
                case 2: // generate spike 
                    i = instance_create(x, y, objChillSpikeDetector);
                    i.image_xscale = 1;
                    i.spreadAttack = true;
                    i.aimAtMegaman = true;
                    break;
                case 3: // generate spike 
                    i = instance_create(x + 48, y, objChillSpikeDetector);
                    i.image_xscale = 1;
                    i.spreadAttack = true;
                    i.aimAtMegaman = true;
                    break;
                case 4: // generate spike 
                    i = instance_create(x, y, objChillSpikeDetector);
                    i.image_xscale = 1;
                    i.spreadAttack = true;
                    break;
            }
            cooldownTimer = 2;
        }
        else
        {
            var cS;
            switch (spike)
            {
                case 0:
                    cS = instance_create(x, y, objChillSpike);
                    cS.image_xscale = -1;
                    cS.toWall = true;
                    cS.spreadAttack = true;
                    cS.direction = 270 - 48;
                    break;
                case 1:
                    cS = instance_create(x, y, objChillSpike);
                    cS.image_xscale = -1;
                    cS.spreadAttack = true;
                    cS.imageReset = 3;
                    cS.image_index = cS.imageReset;
                    cS.imageMax = 5;
                    cS.direction = 270 - 28;
                    break;
                case 2:
                    cS = instance_create(x, y, objChillSpike);
                    cS.image_xscale = 1;
                    cS.spreadAttack = true;
                    cS.imageReset = 6;
                    cS.image_index = cS.imageReset;
                    cS.imageMax = 8;
                    cS.direction = 270;
                    break;
                case 3:
                    cS = instance_create(x, y, objChillSpike);
                    cS.image_xscale = 1;
                    cS.spreadAttack = true;
                    cS.imageReset = 3;
                    cS.image_index = cS.imageReset;
                    cS.imageMax = 5;
                    cS.direction = 270 + 28;
                    break;
                case 4:
                    cS = instance_create(x, y, objChillSpike);
                    cS.image_xscale = 1;
                    cS.toWall = true;
                    cS.spreadAttack = true;
                    cS.direction = 270 + 48;
                    break;
            }
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

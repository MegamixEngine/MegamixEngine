<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCopterPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

isSolid = 1;

blockCollision = 0;
grav = 0;
bubbleTimer = -1;

phase = 0; // 0 = not moving; 1 = moving up; 2 = moving down
timer = 0;

doesTransition = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    // bottom
    if (phase == 0)
    {
        // check if our friend the tornado is goin
        if (instance_exists(objTornadoBlow))
        {
            phase = 1;
        }
    }
    
    // GO UP BOY
    if (phase == 1)
    {
        if (yspeed &gt; -3)
        {
            yspeed -= 0.01;
        }
        if (image_speed &lt; 0.5)
        {
            image_speed += 0.01;
        }
        
        if (instance_place(x, y, objCopterPlatformStop))
        {
            yspeed = 0;
            phase = 2;
            timer = 150;
        }
    }
    
    // wait
    if (phase == 2)
    {
        timer -= 1;
        if (timer == 0)
        {
            phase = 3;
        }
    }
    
    // go back to original position
    if (phase == 3)
    {
        if (image_speed &gt; 0)
        {
            image_speed -= 0.02;
        }
        
        if (yspeed &lt; 2)
        {
            yspeed += 0.025;
        }
        
        if (y &gt; ystart)
        {
            y = ystart;
            yspeed = 0;
            phase = 0;
            image_speed = 0;
            image_index = 0;
        }
    }
}
else if (dead)
{
    phase = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

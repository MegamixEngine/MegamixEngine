<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFireSpike</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 4;
healthpointsStart = 3;
healthpoints = healthpointsStart;

image_speed = 0;
image_index = 0;

despawnRange = -1;
respawnRange = -1;
animTimer = 0;
animPhase = 0;
blockCollision = false;
grav = 0;
bubbleTimer = -1;
freezeTimer = 0;
canIce = false;

// @cc - max distance from starting point to move
radius = 32;

// @cc - number of frames per tick
moveTime = 5;

// @cc - -1: moves left. 1: moves right
dir = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    healthpoints = 3;
    // Freeze Control
    if (freezeTimer &gt; 0)
    {
        freezeTimer--;
        if (freezeTimer == 1)
        {
            if (sprite_index == sprFireSpikeFrozen)
            {
                sprite_index = sprFireSpike;
            }
        }
    }
    else
    {
        animTimer++;
        if (animTimer &gt;= moveTime)
        {
            animTimer = 0;
            animPhase = (animPhase + 1) mod 4;
            x += 8 * dir;
            if (place_meeting(x, y, objSolid) || abs(x - xstart) &gt; radius)
            {
                x = xstart - floorTo(radius, 8) * dir;
                animPhase = 0;
            }
        }
        var animTable = makeArray(2, 1, 0, 1);
        image_index = animTable[animPhase];
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

animTimer = 0;
animPhase = 0;
image_index = 0;
freezeTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.object_index == objIceWall) || (other.object_index == objIceSlasher)
{
    freezeTimer = 240;
                
    if (sprite_index == sprFireSpike)
    {
        sprite_index = sprFireSpikeFrozen;
    }
    playSFX(sfxEnemyHit);
    healthpoints = 3;
}
else
{
    other.guardCancel = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

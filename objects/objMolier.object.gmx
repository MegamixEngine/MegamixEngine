<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMolier</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 5;

category = "grounded, semi bulky";

facePlayerOnSpawn = true;

// Enemy specific code
timer = 60;
knocked = 0;

imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // Landing sfx
    if (ycoll &gt; 0)
    {
        playSFX(sfxBikkyLand);
    }
    
    // Explode when a wall is hit
    if (xcoll != 0)
    {
        instance_create(x, y, objBigExplosion);
        playSFX(sfxExplosion2);
        healthpoints = 0;
        itemDrop = -1;
        
        dead = true; //event_user(EV_DEATH);
    }
    
    // moving towards the player
    if (!knocked)
    {
        if (timer)
        {
            if (ground) // If it fell off a ledge, then face the player after landing after a bit
            {
                timer -= 1;
                if (timer == 8)
                {
                    imgIndex = 2;
                }
                if (!timer)
                {
                    calibrateDirection();
                    imgIndex = 0;
                }
            }
        }
        else
        {
            if (ground) // Drive forward
            {
                xspeed = 1.7 * image_xscale;
            }
            else
            {
                xspeed = 0;
                imgIndex = 0;
                timer = 32;
            }
        }
    }
    
    // Animate
    if (xspeed != 0)
    {
        imgIndex += 0.25;
        if (imgIndex &gt;= 2)
        {
            imgIndex = imgIndex mod 2;
        }
    }
    
    // Play audio as long as Molier can move
    if (!audio_is_playing(sfxHeliButonHover))
    {
        playSFX(sfxHeliButonHover);
    }
}
else 
{
    // Stop audio if time is stopped/Molier is dead
    //audio_stop_sound(sfxHeliButonHover);
    if (dead)
    {
        timer = 60;
        knocked = 0;
        itemDrop = -1;
        xspeed = 0;
        yspeed = 0;
    }
}

image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (spawned)
{
    timer = 16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!knocked &amp;&amp; other.object_index == objSlashClaw || other.object_index == objBreakDash)
{
    knocked = 1;
    xspeed = 4.2 * other.image_xscale;
    
    playSFX(sfxEnemyHit);
    iFrames = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
instance_create(bboxGetXCenter(),bboxGetYCenter(),objBigExplosion);
stopSFX(sfxEnemyHit);
playSFX(sfxExplosion2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHeliButon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation Code (optional)
// variation = &lt;number&gt; (0 = don't drop from foliage (default); 1 = drop from foliage)
// made not dropping from foliage the default since dropping from foliage won't be applicable in most settings

event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "flying, nature";

grav = 0;
blockCollision = false;

// Enemy specific code
variation = 0;
init = 1;

phase = 0;
revealed = false;
canHit = false;

spd = 0.4;

imgSpd = 1;
imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = 0;
    if (variation == 1)
    {
        visible = false;
    }
}

event_inherited();

if (entityCanStep())
{
    if (instance_exists(target))
    {
        if (phase == 1)
        {
            facePlayer = false;
        }
        else
        {
            facePlayer = true;
        }
        
        switch (phase)
        {
            // pop out of foliage
            case 0:
                visible = false;
                canHit = false;
                if (variation == 0)
                {
                    // setup chasing player phase
                    phase = 2;
                    
                    speed = spd;
                    direction = point_direction(x, y, target.x, target.y);
                    
                    imgIndex = 2;
                    visible = true;
                    canHit = true;
                }
                else if (variation == 1)
                {
                    // pop out of foliage stuff
                    if (abs(x - target.x) &lt; 96)
                    {
                        phase = 1;
                        
                        yspeed = 2;
                        
                        visible = true;
                        canHit = true;
                        
                        playSFX(sfxHeliButonReveal);
                        
                        var i;
                        for (i = 0; i &lt; 4; i += 1)
                        {
                            instance_create(x, y, objHeliButonLeaf);
                        }
                    }
                }
                break;
            
            // slow down and stop
            case 1: // animation 
                if (imgIndex &lt; 2)
                {
                    imgIndex += imgSpd / 9;
                }
                else
                {
                    imgIndex += imgSpd;
                }
                if (imgIndex &gt;= 4)
                {
                    imgIndex = 2 + imgIndex mod 4;
                }
                if (yspeed &lt;= 0)
                {
                    phase = 2;
                    
                    direction = point_direction(x, y, target.x, target.y);
                }
                yspeed -= 0.07;
                break;
            
            // chase megaman
            case 2:
                speed = spd;
                imgIndex += imgSpd / 4;
                if (imgIndex &gt;= 4)
                {
                    imgIndex = 2 + imgIndex mod 4;
                }
                correctDirection(round(point_direction(bboxGetXCenter(),
                    bboxGetYCenter(), bboxGetXCenterObject(target),
                    bboxGetYCenterObject(target))), 2);
                
                // hover sfx
                if (!audio_is_playing(sfxHeliButonHover))
                {
                    playSFX(sfxHeliButonHover);
                }
                break;
        }
    }
}
else
{
    speed = 0;
    //audio_stop_sound(sfxHeliButonHover);
    
    if (dead)
    {
        phase = 0;
        revealed = false;
        
        xspeed = 0;
        yspeed = 0;
        direction = 0;
        
        imgIndex = 0;
        
        
        canHit = false;
    }
}

image_index = imgIndex div 1;

contactDamage = 3 * visible;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

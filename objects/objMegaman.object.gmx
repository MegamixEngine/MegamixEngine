<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMegaman</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>mskMegaman</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

faction = 1;
shiftVisible = 2;
WheelLock = -1;
despawnRange = -1;

stopOnFlash = 0;

killOverride = false;

dieToSpikes = true;

// co-op variables:
playerID = 0;
costumeID = 0;
fanoutDistance = 0;

// Physics variables
grav = 0.25; // The player's gravity
gravfactor = 1;
gravWater = 0.38 * grav; // The player's gravity in water
gravDir = 1;

jumpSpeed = 4.75 + grav * 2; // Dunno why grav needs to be multiplied by 2, but MM jumps as high as in MM5 when doing so
jumpSpeedWater = 0.1;

// jumpSpeedWater = 4.85 + grav*2;

walkSpeed = 1.3; // walkSpeed = 1.296875;
oilWalk = 0.3;
maxVspeed = 7;

premask = mask_index;
stepSpeed = 1 / 7;
stepFrames = 7;

iceDec = 0.025; // The deceleration on ice when not holding any buttons
iceDecWalk = 0.05; // The deceleration on ice when moving in the opposite direction

slideSpeed = 2.5;
slideFrames = 26;
// climbSpeed = 1.296875; //Official value of MM3
climbSpeed = 1.3;

if (checkCheats(cheatEnums.wiiPhysics))
{
    walkSpeed = 1.4;
    stepSpeed = 1;//Is forced to only run on the first frame.
    slideSpeed = 2.55;//Closest approximation I could get with side-by-side tests in MM10 Wily 4 LC2.
    climbSpeed = 1.4;
}



hitTime = 32; // The amount of frames you experience knockback after getting hit
if (global.sturdyHelmet)
    hitTime = 16;
    
// Variables

// Lock certain actions
playerLockLocalInit();
hitLock = false;
climbLock = false;
shootStandStillLock = false;
slideLock = false;
icedLock = false;
slideChargeLock = false;
teleportLock = false;
shockLock = false;
honeyLock = false;
stunLock = false;

ground = true;
xDir = 0;
yDir = 0;

prevXScale = image_xscale;
isStep = false;
stepTimer = 0;
canMinJump = false;
climbShootXscale = 1;
movementXScale = image_xscale;
xScaleOverride = 0;

chargeTime = 0;
initChargeTime = 0;

isShoot = false;
shootTimer = 0;

isSlide = false;
slideTimer = 0;
firstSlideMask = mskMegamanSlide;
secondSlideMask = mskMegamanSlide2;

canHit = false;
isHit = false;
hitRecover = 0;

isShocked = false; // had to resort to this ~dracmeister
shockedTime = 0; // for how long?

isCharge = false;
chargeTimer = 0;
initChargeTimer = 0; // The timer for when to start charging after exiting the shooting animation

climbing = false;
climbSpriteTimer = 0;

quickWeaponScrollTimer = 25;
prevWeapon = -1;

teleporting = false;
showDuringReady = false;
showReady = false;
readyTimer = 0;
teleportTimer = 0;
teleportImg = 0;

playLandSound = true; // Should we play the landing SFX when colliding with a floor? (Disabled on ladders, for example)
blinkTimer = 0; // Timer for MM's blinking animation when standing still
blinkTimerMax = 120;
blinkImage = 0; // 0 for no blinking, 1 for blinking
blinkDuration = 8; // The amount of frames the blinking lasts
weaponIconDrawing = false; // Whether or not we should draw the weapon icon above our head (used when using quick weapon switching)
weaponIconMode = 0; // 0 - icon above Mega Man's head; 1 - icons in a wheel around Mega Man

landy = y;
deathByPit = false; // Did we die by falling in a bottomless pit?
dieToPit = true;
isSolid = 0;
statusObject = noone;
statusSliding = true;
plt = 0;
isFrozen = 0;
freezeHitOverride = false;
freezeTimer = 0;
reverseControls = false;

// vehicle: the instance of a vehicle mega man
// is embarked in.
vehicle = noone;
deathTimer = -1;
global.outlineCol[playerID] = c_black;
playerPalette();

// Show the READY text
showReady = false; // this is set to true by objGlobalControl.
readyTimer = 0;

// Camera
viewPlayer = 1;

//Jump Counter
jumpCounter = 0;
jumpCounterMax = 1; //If you want multiple jumps then increase this

//Dash things
dashSlide = false; // Dash enabled?
dashJumped = false;
multiJumpDashCancel = true; //controls whether dash momentum is removed after multiple jumps.

//Contact Damage Multiplier
contactDamageMultiplier = 1; //you can increase this to multiply the amount of damage mega man takes from a certain object.

// Animation Initiation
spriteX = 0;
spriteY = 0;
animNameID = 0;
lastAnimNameID = 0;
spriteLoopStart = 0;
spriteLoopEnd = 1;
spriteLoopSpeed = 1;
spriteLoopID = 0;
spriteLoopPoint = 0;
for (i = 0; i &lt;= 99; i += 1)
{
    spriteIDX[i] = 0;
    spriteIDY[i] = 0;
}
animSpinOffset = 0;
animSpinTurn = 1;
animLookUp = false;

paletteRefresh = 0;

// Added to fix a crash in one stage. 
lastanimation = 'Normal';

//Creation code for the weapon wheel
wheelDirection = -1;
usingWheel = false;

//Accessibility variables
fireHeld = false; // whether or not fire is being held (accessibility options)
autoFireDelay = 0; // auto fire delay timer

myProtoShield = noone;
myTrebleBoost = noone;
isBoost = false;//Used in Bass mode for flying.
lastWeapon = noone;//Just needed for Bass Mode rn.
lastanimation = "Normal";//For some reason this value was set but is never used until I started using it now, so I'm declaring it here to prevent a crash.
airDashed = false;

tpk = false;

sectionStartx = xstart;
sectionStarty = ystart;

gCollXScale = 0;//Used as a reference for damage spike knockback calc, which occurs in generalCollision.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
for (var i = 0; i &lt; PL_LOCK_MAX; i++)
{
    lockPoolDestroy(localPlayerLock[i], true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerEndStep();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// costumeID needs to be set here or it won't display correctly.
if (global.customCostumeEquipped[playerID])
{
    costumeID = global.customCostumeIndex+playerID;//global.playerSpriteMax;
}
else
{
    costumeID = global.costumeID[? global.costumeSelected[playerID]];
}

// corrects palette
if (paletteRefresh == 0) &amp;&amp; (!inked)
{
    playerPalette();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerStepEventDefault();

if (!global.frozen &amp;&amp; !frozen) // used by accessibility options
{
    if (autoFireDelay &gt; 0) //tick down autoFireDelay
    {
        autoFireDelay --;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move all players
if (DEBUG_ENABLED)
{
    if (mouse_x &gt;= bbox_left &amp;&amp; mouse_x &lt;= bbox_right &amp;&amp; mouse_y &gt;= bbox_top &amp;&amp; mouse_y &lt;= bbox_bottom)
    {
        coopWarp(playerID,true,30);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (spawned)
{
    if (global.customCostumeEquipped[playerID])
    {
        costumeID = global.customCostumeIndex+playerID;//global.playerSpriteMax;
    }
    else
    {
        costumeID = global.costumeID[? global.costumeSelected[playerID]];
    }
    
    global.defaultPrimaryPalette[playerID] = global.costumePrimaryColor[costumeID];
    global.defaultSecondaryPalette[playerID] = global.costumeSecondaryColor[costumeID];
    
    if (global.playerCount &lt;= 1)
    {
        global.weaponName[0] = global.costumeBusterName[costumeID];
        global.weaponIcon[0] = global.costumeBusterIcon[costumeID];
    }
    else
    {
        global.weaponName[0] = "MEGA BUSTER";
        global.weaponIcon[0] = sprWeaponIconsMegaBuster;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.difficulty == DIFF_EASY)
{
    global.damage = max(1, global.damage div 2);
}

global.damage *= contactDamageMultiplier;

if ((checkCheats(cheatEnums.invincible) &amp;&amp; !checkCheats(cheatEnums.buddha)))
{
    global.damage = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(checkCheats(cheatEnums.invincible || checkCheats(cheatEnums.buddha)))
{
    global.playerHealth[playerID] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerGetHit(global.damage,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
for (var i = 0; i &lt; PL_LOCK_MAX; i++)
{
    lockPoolDestroy(localPlayerLock[i], true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerDraw();
//drawDebugText(x,bbox_top - 8, string(global.weapon[playerID]) + " " + global.weaponName[global.weapon[playerID]])
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

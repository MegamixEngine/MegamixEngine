<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMetallJump</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "mets";

facePlayerOnSpawn = true;

// Enemy specific code
radius = 4 * 16; // Four blocks; the radius that MM needs to enter to trigger the shooting of the met
cooldownTimer = 0;
canShoot = true;

animTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if(xcoll!=0)
{
    xspeed=xcoll;
}
if (entityCanStep())
{
    // trigger shooting variable if the target is near
    if (instance_exists(target))
    {
        // if not moving, face the player
        if (xspeed == 0)
        {
            calibrateDirection();
        }
        
        // check if the target is in range
        if (distance_to_object(target) &lt;= radius)
        {
            if (canShoot)
            {
                canShoot = false;
                if (cooldownTimer &gt;= 0)
                {
                    image_index = 1;
                }
            }
        }
    }
    
    // landing animation
    if (ground &amp;&amp; image_index == 5)
    {
        canShoot = true;
        cooldownTimer = -40;
        xspeed = 0;
        animTimer = 16;
        image_index = 4;
    }
    if (animTimer &gt; 0)
    {
        animTimer -= 1;
    }
    if (animTimer == 12 || animTimer == 8 || animTimer == 4 || animTimer == 1)
    {
        image_index -= 1;
    }
    
    // canShoot = false is telling the met to do its shooting animation basically
    if (!canShoot)
    {
        cooldownTimer += 1;
        if (cooldownTimer == 1)
        {
            image_index = 1;
        }
        else if (cooldownTimer == 8)
        {
            image_index = 2;
        }
        else if (cooldownTimer == 12)
        {
            image_index = 3;
        }
        else if (cooldownTimer == 16)
        {
            image_index = 4;
            
            // Shoot
            var ID;
            for (var i = -1; i &lt;= 1; i += 1)
            {
                ID = instance_create(x + image_xscale * 8, spriteGetYCenter(), objMM4MetBullet);
                ID.dir = 45 * i;
                ID.xscale = image_xscale;
                ID.sprite_index = sprEnemyBullet;
            }
            //playSFX(sfxEnemyShoot);
        }
        else if (cooldownTimer == 35)
        {
            image_index = 5;
            
            // jump jump
            if (ground)
            {
                yspeed = choose(-2.5, -4.5);
            }
            xspeed = 1 * image_xscale;
        }
    }
}
else if (dead)
{
    animTimer = 0;
    cooldownTimer = 0;
    canShoot = true;
    image_index = 0;
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 0)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

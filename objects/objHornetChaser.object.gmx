<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHornetChaser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 2;

imgIndex = 0;

penetrate = 0;
pierces = 1;

xspeed = 0;
yspeed = 0;
grav = 0;

speed = 2;
chase = 0;
pickup = 0;

alarmChase = 20;

playSFX(sfxHornetChaser);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    imgIndex += 0.3;
    if (imgIndex &gt;= 2)
    {
        imgIndex = 0;
    }
    
    if (alarmChase)
    {
        alarmChase -= 1;
        if (!alarmChase)
        {
            chase = 1;
        }
    }
    
    if (!canDamage)
    {
        chase = 0;
        alarmChase = -1;
    }
    
    if (!pickup &amp;&amp; instance_exists(parent)) // Collect pickups
    {
        if (place_meeting(x, y, prtPickup))
        {
            pickup = instance_place(x, y, prtPickup);
            if (pickup.grabable)
            {
                pickup.depth = depth - 1;
                with (object_index)
                {
                    if (id != other.id)
                    {
                        if (pickup == other.pickup)
                        {
                            other.pickup = 0;
                        }
                    }
                }
            }
            else
            {
                pickup = 0;
            }
        }
    }
    
    if (pickup) // Control collected pickup
    {
        if (instance_exists(pickup))
        {
            pickx = spriteGetXCenterObject(pickup) - pickup.x;
            picky = spriteGetYCenterObject(pickup) - pickup.y;
            pickup.x = x - pickx + 8 * image_xscale;
            pickup.xspeed = 0;
            pickup.y = y - picky + 6;
            pickup.yspeed = 0;
        }
        else
        {
            pickup = 0;
        }
    }
    
    if (chase)
    {
        var dis = view_wview;
        var chaseObj = target;
        
        if (pickup &amp;&amp; instance_exists(parent))
        {
            chaseObj = parent;
        }
        else
        {
            dis = distance_to_object(chaseObj);
            
            with (prtPickup) // Find closest item
            {
                if (grabable &amp;&amp; !place_meeting(x, y, other.object_index))
                {
                    if (insideView())
                    {
                        if (distance_to_object(other) &lt; dis)
                        {
                            dis = distance_to_object(other);
                            chaseObj = id;
                        }
                    }
                }
            }
        }
        
        if (instance_exists(chaseObj)) // Round direction to target direction
        {
            correctDirection(round(point_direction(x, y,
                spriteGetXCenterObject(chaseObj),
                spriteGetYCenterObject(chaseObj))), 12);
        }
        
        image_xscale = 1 - (2 * (direction &gt; 90 &amp;&amp; direction &lt;= 270));
    }
}
image_index = imgIndex div 1 + (2 * pickup);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ammoCost = 1 - (0.5 * (global.energySaver &gt; 0));

if (performShoot)
{
    i = fireWeapon(14, -3, objHornetChaser, 3, ammoCost, 1, 0);
    
    // set its starting angle.
    if (i)
    {
        i.direction = 30 + (120 * (image_xscale == -1 &amp;&amp; image_yscale == 1)) + (300 * (image_yscale == -1)) - (120 * (image_xscale == -1 &amp;&amp; image_yscale == -1));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("bulky", 1);
specialDamageValue("joes", 1);
specialDamageValue("shield attackers", 1);
specialDamageValue("floating", 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("HORNET CHASER", make_color_rgb(231, 191, 60), make_color_rgb(252, 252, 252), sprWeaponIconsHornetChaser);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
instance_create(bboxGetXCenter(),bboxGetYCenter(),objExplosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

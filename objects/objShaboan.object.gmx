<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprShaboan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// A big soap bubble that hangs on ceilings until Mega Man gets close. It then drops down
// and jumps after him constantly.

event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 3;

grav = 0;
phase = 0;
category = "aquatic";

imgSpd = 0.1;
moveTimer = 10;
blinkCount = 0;
canBlink = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    switch (phase)
    {
        // Hang on ceiling
        case 0:
        image_index += imgSpd;
                
            if (instance_exists(target))
            {
                // Mostly here for the sake of the "else" block.
                if ((target.x &gt; x + 85) || (target.x &lt; x - 85))
                {
                    if (image_index &gt;= 2)
                    {
                        image_index = 0;
                    }
                }
                else
                {
                    if (image_index == 2)
                    {
                        calibrateDirection();
                        phase = 1;
                    }
                }
            }
            break;
        
        // Drop down
        case 1:
        moveTimer--;
        if (moveTimer &lt;= 0)
        {
            image_index = 3;
            grav = 0.25;
            if (ground)
            {
                playSFX(sfxWaveManPipe);
                image_index = 4;
                phase = 2;
            }
        }
        break;
        
        // On ground
        case 2:
            image_index += imgSpd;
            if (image_index == 9)
            {
                image_index = 10;
            }
            if (image_index == 12)
            {
                xspeed = 2 * image_xscale;
                yspeed = -5;
                phase = 3;
                moveTimer = 30;
            }
            calibrateDirection();
            break;
            
        // Land from jump
        case 3:
            if (yspeed &gt; 0)
            {
                image_index = 4;
            }
            if (ground)
            {
                xspeed = 0;
                if (sprite_index != sprShaboanLand)
                {
                    sprite_index = sprShaboanLand;
                    image_index = 0;
                    playSFX(sfxWaveManPipe);
                }
                if (image_index &lt; 6)
                {
                    image_index += imgSpd;
                }
                else
                {
                    moveTimer--;
                    if (moveTimer &lt;= 0)
                    {
                        sprite_index = sprShaboan;
                        image_index = 6;
                        phase = 4;
                        moveTimer = 120;
                    }
                }
            }
            break;
        // Remain idle
        case 4:
            image_index += imgSpd;
            if (instance_exists(target))
            {
                if ((target.x &gt; x + 85) || (target.x &lt; x - 85))
                {
                    moveTimer--;
                    if (moveTimer &gt; 0)
                    {
                        if (image_index &gt;= 8)
                        {
                            image_index = 6;
                        }
                    }
                    else
                    {
                        image_index = 9;
                        moveTimer = 30;
                        phase = 5;
                    }
                }
                else
                {
                    phase = 2;
                }
            }
            // Do idle animation if Mega Man is dead
            else
            {
                moveTimer--;
                if (moveTimer &gt; 0)
                {
                    if (image_index &gt;= 8)
                    {
                        image_index = 6;
                    }
                }
                else
                {
                    image_index = 9;
                    moveTimer = 30;
                    phase = 5;
                }
            }
            break;
        // Blink Once
        case 5:
            if (instance_exists(target))
            {
                if ((target.x &gt; x + 100) || (target.x &lt; x - 100))
                {
                    if (canBlink == true)
                    {
                        image_index += imgSpd;
                        if (image_index &gt;= 10)
                        {
                            image_index = 8;
                        }
                    }
                    if (blinkCount &lt; 2)
                    {
                        if (image_index == 8)
                        {
                            blinkCount++;
                        }
                    }
                    else
                    {
                        canBlink = false;
                        moveTimer--;
                        if (moveTimer == 0)
                        {
                            phase = 6;
                        }
                    }
                }
                else
                {
                    image_index = 10;
                    blinkCount = 0;
                    canBlink = true;
                    phase = 2;
                }
            }
            break;
        case 6:
            if (instance_exists(target))
            {
                if ((target.x &gt; x + 100) || (target.x &lt; x - 100))
                {
                    image_index += imgSpd;
                    if (image_index &gt;= 10)
                    {
                        image_index = 8;
                        blinkCount++;
                    }
                    
                    if (blinkCount == 3)
                    {
                        if (image_index &gt;= 8)
                        {
                            image_index = 6;
                            phase = 4;
                            moveTimer = 120;
                            blinkCount = 0;
                            canBlink = true;
                        }
                    }
                }
                else
                {
                    image_index = 10;
                    blinkCount = 0;
                    canBlink = true;
                    phase = 2;
                }
            }
            break;
    }
}
else if (dead)
{
    healthpoints = healthpointsStart;
    grav = 0;
    phase = 0;
    xspeed = 0;
    yspeed = 0;
    moveTimer = 10;
    sprite_index = sprShaboan;
    image_index = 0;
    blinkCount = 0;
    canBlink = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

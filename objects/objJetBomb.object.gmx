<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJetBomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// col = &lt;number&gt; (0 = orange(default); 1 = green; 2 = game gear colouration; 3 = manga colouration;)

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 6;

category = "cluster, flying";

blockCollision = 0;
grav = 0;

facePlayerOnSpawn = true;

// Enemy specific code
getAngle = 0;
shootAngle = 45;
imageOffset = 0;

explode = false;

col = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // Hit wall
    if (checkSolid(0, 0, 1, 1))
    {
        explode = true;
    }
    if (explode)
    {
        var ID;
        ID = instance_create(spriteGetXCenter(), spriteGetYCenter(),
            objExplosion);
        ID.xscale = image_xscale;
        playSFX(sfxMinorExplosion);
        
        // If megaman exists, grab his angle, otherwise grab some random different angle.
        if (instance_exists(target))
            getAngle = point_direction(spriteGetXCenter(),
                spriteGetYCenter(), target.x, target.y);
        else
            getAngle = point_direction(spriteGetXCenter(),
                spriteGetYCenter(), x + (45 * (xspeed)), 45 * (xspeed));
        
        ID = instance_create(x + image_xscale, spriteGetYCenter(),
            objMM5AimedBullet);
        {
            ID.dir = getAngle;
            ID.xscale = image_xscale;
            ID.sprite_index = sprJetBombDebry;
            ID.image_index = (col * 4) + 2;
            ID.image_speed = 0;
            ID.moveAtSpeed = 2;
        }
        ID = instance_create(spriteGetXCenter(), spriteGetYCenter(),
            objMM5AimedBullet);
        {
            ID.dir = getAngle + shootAngle;
            ID.xscale = image_xscale;
            ID.sprite_index = sprJetBombDebry;
            ID.image_index = (col * 4) + 3;
            ID.image_speed = 0;
            ID.moveAtSpeed = 2;
        }
        ID = instance_create(spriteGetXCenter(), spriteGetYCenter(),
            objMM5AimedBullet);
        {
            ID.dir = getAngle - shootAngle;
            ID.xscale = image_xscale;
            ID.sprite_index = sprJetBombDebry;
            ID.image_index = (col * 4) + 0;
            ID.image_speed = 0;
            ID.moveAtSpeed = 2;
        }
        dead = true;
    }
    imageOffset += 0.20;
    
    if (imageOffset == 2)
        imageOffset = 0;
}
image_index = (3 * col) + (imageOffset);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

xspeed = 2 * image_xscale;

// resetting
image_index = 0;
explode = false;
imageOffset = 0;
visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>create debry upon death</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

for (var i = 0; i &lt; 4; i++)
{
    ID = instance_create(x + image_xscale, spriteGetYCenter(), objMM5AimedBullet);
    ID.dir = 45 + (90 * i);
    ID.xscale = image_xscale;
    ID.sprite_index = sprJetBombDebry;
    ID.image_index = (col * 4) + i;
    ID.image_speed = 0;
    ID.moveAtSpeed = 2;
}
stopSFX(sfxEnemyHit);
playSFX(sfxExplosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

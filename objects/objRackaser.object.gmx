<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRackaser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "flying";

grav = 0;

// Enemy specific code
oldmask = mask_index;
phase = 1;
phasetimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    phasetimer += 1;
    switch (phase)
    {
        case 1: // Trigger dropping 
            if (instance_exists(target))
            {
                if (abs(target.x - x) &lt; 40)
                {
                    phase = 2;
                    yspeed = 1.5;
                    calibrateDirection();
                }
            }
            break;
        case 2: // Dropping / check for floor 
            if (!(phasetimer mod 6))
            {
                image_index += 1;
                if (image_index &gt; 3)
                {
                    image_index = 0;
                }
            }
            if (yspeed == 0)
            {
                image_index = 3;
                grav = 0.25;
                phase = 3;
                phasetimer = 0;
                calibrateDirection();
            }
            break;
        case 3: // Launch the speer of DEATH 
            if (!(phasetimer mod 6))
            {
                image_index += 1;
                if (image_index == 11)
                {
                    var i = instance_create(x + 28 * image_xscale, y - 8, objEnemyBullet);
                    i.sprite_index = sprUmbrella;
                    i.xspeed = 2 * image_xscale;
                }
                else if (image_index == 13)
                {
                    mask_index = sprRackaserMask;
                    phase = 4;
                    phasetimer = 0;
                }
            }
            break;
        case 4: // Move around 
            if (!(phasetimer mod 6))
            {
                image_index += 1;
                if (image_index &gt; 16)
                {
                    image_index = 13;
                }
            }
            
            // turning around on ledges or walls
            xSpeedTurnaround();
            if (xspeed == 0 || checkFall(16 * image_xscale))
            {
                xspeed = image_xscale * 1;
            }
            
            // don't move in midair
            if (!ground)
            {
                xspeed = 0;
            }
            break;
    }
}
else if (dead)
{
    phase = 1;
    phasetimer = 0;
    grav = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase != 1)
{
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

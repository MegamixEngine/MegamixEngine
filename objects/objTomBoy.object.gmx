<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTomBoy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 6;
healthpoints = healthpointsStart;
contactDamage = 6;

category = "grounded";

facePlayerOnSpawn = true;

// Enemy specific code
calibrated = 0;

actionTimer = 0;
action = 1;
first = 1;
pit = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (action)
    {
        var iaction = action;
        actionTimer += 1;
        switch (action)
        {
            case 1:
                if (actionTimer == 8)
                {
                    action += 1;
                    image_index = 1;
                    if (!first)
                    {
                        x += 16 * image_xscale;
                        y += pit * 16;
                        pit = 0;
                    }
                    else
                    {
                        first = 0;
                    }
                    var turned = 0;
                    
                    // Flip if wall
                    if (checkSolid(16 * image_xscale, 0, 1, 1))
                    {
                        x -= 16 * image_xscale;
                        image_xscale *= -1;
                        turned = 1;
                    }
                    
                    // Look for ledge
                    var xs = x;
                    x += 16 * image_xscale;
                    var ys = y;
                    for (var i = 0; i &lt;= 2; i += 1)
                    {
                        ground = checkSolid(0, 1, 1, 1);
                        if (ground)
                        {
                            pit = i;
                            break;
                        }
                        else
                        {
                            pit = 0;
                        }
                        y += 16;
                    }
                    y = ys;
                    if (!ground &amp;&amp; !turned)
                    {
                        xs -= 16 * image_xscale;
                        image_xscale *= -1;
                        ground = 1;
                    }
                    x = xs;
                }
                break;
            case 2:
                if (actionTimer == 8)
                {
                    action += 1;
                    image_index = 2;
                }
                break;
            case 3:
                if (actionTimer == 8)
                {
                    action += 1;
                    image_index = 3;
                }
                break;
            case 4:
                if (actionTimer == 8)
                {
                    if (!pit)
                    {
                        action = 5;
                        image_index = 4;
                    }
                    else
                    {
                        action = 6;
                        image_index = 6;
                    }
                }
                break;
            case 5:
                if (actionTimer == 8)
                {
                    // action += 1;
                    image_index = 5;
                    action = 1;
                }
                break;
            case 6:
                if (actionTimer == 8)
                {
                    action += 1;
                    image_index = 7;
                    if (pit == 2)
                    {
                        image_index += 3;
                    }
                }
                break;
            case 7:
                if (actionTimer == 8)
                {
                    action += 1;
                    image_index += 1;
                }
                break;
            case 8:
                if (actionTimer == 8)
                {
                    // action += 1;
                    image_index += 1;
                    action = 1;
                }
                break;
        }
        if (action != iaction)
        {
            actionTimer = 0;
        }
    }
}
else if (dead)
{
    actionTimer = 0;
    action = 1;
    ground = 1;
    image_index = 0;
    first = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = 1;

instance_create(bboxGetXCenter(), bboxGetYCenter() - 16, objExplosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

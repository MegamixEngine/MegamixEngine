<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFuraibonSpawner</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// A spawner for Furaibon.
event_inherited();
grav = 0;
canHit = false;
blockCollision = false;

behaviourType = 1;

// Enemy specific variables
col = 0; // SET IN CREATION CODE - 0 = purple, 1 = blue, 2 = red, 3 = yellow
spawnTimer = 120; // Time until next Furaibon is spawned
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    if (instance_exists(target))
    {
        if (abs(round(target.x) - x) &lt;= 48)
        {
            if (spawnTimer == 120)
            {
                with (instance_create(x, y, objFuraibon))
                {
                    parent = other.id;
                    switch (other.col)
                    {
                        // Blue
                        case 1:
                            sprite_index = sprFuraibonBlue;
                            break;
                        // Red
                        case 2:
                            sprite_index = sprFuraibonRed;
                            break;
                        case 3:
                            sprite_index = sprFuraibonYellow;
                            break;
                        default:
                            sprite_index = sprFuraibonPurple;
                            break;
                    }
                }
                spawnTimer = 0;
            }
            else
            {
                spawnTimer++;
            }
        }
        else
        {
            spawnTimer = 120;
        }
    }
}
else if (dead)
{
    spawnTimer = 120;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

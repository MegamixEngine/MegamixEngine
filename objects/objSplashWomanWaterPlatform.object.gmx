<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSplashWomanWaterPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// startup =  (the amount of frames it takes for the block to Launch)
// active =  (the amount of frames the block is active before exploding)
// spd =

event_inherited();
canHit = false;

isSolid = 1;

blockCollision = 0;
grav = 0;

respawnRange = -1;
despawnRange = -1;

startup = 60;
active = 60;
parent = noone;
ID = noone;
spd = 2;
getX = x;
dir = 1;

totalTimer = startup + active;

timer = 0;

init = 1;

shiftVisible = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = 0;
    totalTimer = startup + active;
}

event_inherited();

if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    if ((x &lt; view_xview + view_wview / 2 &amp;&amp; dir == 1)
        || (x &gt; view_xview + view_wview / 2 &amp;&amp; dir == -1) || xspeed != 0)
    {
        visible = true;
        if (!instance_exists(parent))
        {
            timer += 1;
            
            // startup
            if (timer == startup)
            {
                xspeed = spd * dir;
                ID = instance_create(x - 32 * sign(xspeed), y, object_index);
                ID.parent = id;
                ID.getX = x;
                ID.startup = startup;
                ID.spd = spd;
                ID.active = active;
                ID.dir = dir;
                ID.totalTimer = totalTimer;
                getX = x;
            }
            if (instance_exists(ID))
            {
                ID.visible = true;
                if (timer &gt; startup)
                {
                    if (ID.x &lt; getX - spd)
                    {
                        ID.x += spd;
                    }
                    else if (ID.x &gt; getX + spd)
                    {
                        ID.x -= spd;
                    }
                    else
                    {
                        ID.x = getX;
                    }
                }
            }
            if (x != getX)
                image_index = (max(0,
                    timer - startup) / (startup + active)) * image_number;
            else
                image_index = 0;
            
            if (timer == startup + active)
                instance_create(x, y + 8, objExplosion);
            
            if (timer &gt;= startup + active)
            {
                x = getX;
                xspeed = 0;
                visible = false;
                if (timer &gt; totalTimer)
                    instance_destroy();
            }
        }
    }
    else
    {
        if (!instance_exists(parent))
            visible = false;
        
        //        if !insideView()
        if (instance_exists(target))
            if (x &gt; global.sectionRight + 32 || x &lt; global.sectionLeft - 32)
            {
                //            if timer &gt; totalTimer
                //                timer = 0;
                x = getX;
                xspeed = 0;
            }
    }
}
else if (!global.timeStopped &amp;&amp; !global.frozen)
{
    timer = 0;
    x = getX;
    xspeed = 0;
    if (instance_exists(ID))
    {
        with (ID)
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objSectionSwitcher))
{
    exit;
}

var ys = 0;

switch (startup - timer)
{
    case 1:
    case 2:
        ys = -1;
        break;
    case 5:
    case 6:
        ys = 1;
        break;
    case 9:
    case 10:
        ys = -1;
        break;
    case 13:
    case 14:
        ys = 1;
        break;
    case 17:
    case 18:
        ys = -1;
        break;
    case 21:
    case 22:
        ys = 1;
        break;
    case 25:
    case 26:
        ys = -1;
        break;
    case 29:
    case 30:
        ys = 1;
        break;
}

y += ys;
event_inherited();
y -= ys;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

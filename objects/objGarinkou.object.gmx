<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGarinkou</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>mskGarinkou</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;
image_speed = 0;

// @cc - Change colour: 0 (default) = blue, 1 = purple
col = 0;

init = 1;
landTimer = 16;
jumpType = 0;
jumpHeight[0] = 80;
jumpDistance[0] = 32;
jumpHeight[1] = 32;
jumpDistance[1] = 48;
jumpXSpeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = mskGarinkou;
event_inherited();
mask_index = sprite_index;
if (entityCanStep())
{
    if (!ground)
    {
        landTimer = 16;
        image_index = 3;
        xspeed = jumpXSpeed;
    }
    else
    {
        jumpXSpeed = 0;
        xspeed = 0;
        
        // landing animation
        if (landTimer &gt; 0)
        {
            landTimer--;
            image_index = landTimer div 8;
            
            //Play sound
            if (landTimer == 15)
                playSFX(sfxGarinkou);
        }
        
        // jumping animation
        if (landTimer &lt;= 0)
        {
            jumpType = choose(0, 0, 1);
            yspeed = -sqrt(2 * jumpHeight[jumpType] * grav);
            var airTime = 2 * abs(yspeed / grav);
            xspeed = jumpDistance[jumpType] / airTime * image_xscale;
            jumpXSpeed = xspeed;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
landTimer = 16;
jumpType = 0;
jumpXSpeed = 0;
calibrateDirection();

if (init)
{
    switch (col)
    {
        case 1:
            sprite_index = sprGarinkouPurple;
            break;
        default:
            sprite_index = sprGarinkou;
            break;
    }
    init = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

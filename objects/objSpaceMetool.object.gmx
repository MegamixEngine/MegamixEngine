<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSpaceMetool</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "mets, cluster, flying";

blockCollision = 0;
grav = 0;

// Enemy specific code
col = 0;

chgPhases = 0;
lockMovement = 0;
xLock = 0;
yLock = 0;
xCont = 0;
yCont = 0;
toggle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    image_index += 0.25;
    
    // timer
    
    chgPhases += 1;
    if (chgPhases &gt;= 32)
    {
        chgPhases = 0;
        lockMovement = 0;
    }
    
    // lock movement
    if (lockMovement == 0)
    {
        lockMovement = 1;
        if (instance_exists(target))
        {
            xLock = ceil(target.x / 16) * 16;
            yLock = ceil(target.y / 16) * 16;
            
            // Set whether or not xContinue is set or not. This means that Pukapelly will continue moving if he reaches Mega Man's x co-ordinate.
            if (x &gt;= target.x - 3 &amp;&amp; x &lt;= target.x + 3)
                xCont = 0;
            else
                xCont = target.x - x;
            
            // Set whether or not yContinue is set or not. This means that Pukapelly will continue moving if he reaches Mega Man's y co-ordinate.
            if (y &gt;= target.y - 3 &amp;&amp; y &lt;= target.y + 3)
                yCont = 0;
            else
                yCont = target.y - y;
        }
    }
    
    // lock onto xLock and yLock.
    if (instance_exists(target))
    {
        if (abs(target.x - x) &gt; 16 || abs(target.y - y) &gt; 16)
        {
            if (x &gt; xLock)
                xspeed = -1.2;
            else if (x &lt; xLock)
                xspeed = 1.2;
            else
                xspeed = 0;
            
            if (y &gt; yLock)
                yspeed = -1.2;
            else if (y &lt; yLock)
                yspeed = 1.2;
            else
                yspeed = 0;
        }
        else
        {
            xspeed = 0;
            yspeed = 0;
        }
    }
    
    // follow mega man
    if (x &lt;= xLock &amp;&amp; xCont &lt;= -1)
        xLock = x - 16;
    if (x &gt;= xLock &amp;&amp; xCont &gt;= 1)
        xLock = x + 16;
    if (y &lt;= yLock &amp;&amp; yCont &lt;= -1)
        yLock = y - 16;
    if (y &gt;= yLock &amp;&amp; yCont &gt;= 1)
        yLock = y + 16;
    
    
    
    // Set direction of sprite
    if (xspeed &lt; 0)
        image_xscale = -1;
    else if (xspeed &gt; 0)
        image_xscale = 1;
}

// reset default values whilst ded.
if (dead == true &amp;&amp; respawn == true)
{
    chgPhases = 0;
    xLock = 0;
    yLock = 0;
    yCont = 0;
    xCont = 0;
    lockMovement = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKoukerQ</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// A flying enemy that will stall its engines and drop down if it gets near Mega Man.

event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "flying";

grav = 0;
blockCollision = 0;

facePlayerOnSpawn = true;

// @cc - Change colour (0 = orange, 1 = green)
col = 0;

animTimer = 0;
isFalling = false;

shakeDir = 1;
imgIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    animTimer += 1;
    
    // animation
    if (animTimer == 6)
    {
        if (imgIndex == 0)
        {
            animTimer = 0;
            imgIndex = 1;
        }
        else if (imgIndex == 1)
        {
            animTimer = 0;
            imgIndex = 0;
        }
        else if (imgIndex == 2)
        {
            imgIndex = 3;
        }
    }
    
    // small pause
    if (animTimer == 20 &amp;&amp; !isFalling)
    {
        animTimer = 0;
        if (imgIndex == 3)
        {
            yspeed = .5;
            playSFX(sfxFallNoise);
            isFalling = true;
        }
    }
    
    // shaking
    if (animTimer mod 3 == 0 &amp;&amp; imgIndex &lt; 2)
    {
        y += shakeDir;
        shakeDir = -shakeDir;
    }
    
    // detect target
    if (collision_rectangle(x - 8, y - 512, x + 8, y + 512, target, false,
        true) &amp;&amp; xspeed != 0)
    {
        imgIndex = 2;
        xspeed = 0;
    }
    
    if (isFalling)
    {
        grav = gravAccel;
    }
}
else if (dead)
{
    animTimer = 0;
    isFalling = false;
    imgIndex = 0;
    grav = 0;
}
image_index = imgIndex + (4 * col);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (spawned)
{
    xspeed = image_xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

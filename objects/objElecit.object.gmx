<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprElecit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// An electric enemy that electrifies the ground beneath it and fires out five electric shots.

event_inherited();

healthpointsStart = 6;
healthpoints = healthpointsStart;
contactDamage = 4;

grav = 0;
phase = 0;
imgSpd = 0.1;

category = "floating";

// Enemy specific code
moveTimer = 60;
animTimer = 10;
animBack = false;
shots = 0;
hasShot = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        case 0:
            moveTimer--;
            if (moveTimer &lt;= 10)
            {
                yspeed = 2;
                
                if (moveTimer &lt;= 0)
                {
                    image_index = 4;
                }
                
                if (ground)
                {
                    phase = 1;
                    moveTimer = 60;
                }
            }
            break;
        case 1:
            moveTimer--;
            if (moveTimer == 30)
            {
                instance_create(x, y - 8, objElecitSpark);
                playSFX(sfxElecnShoot);
            }
            if (moveTimer &lt;= 0)
            {
                yspeed = -2;
                image_index = 0;
                if (-ycoll || y &lt; ystart)
                {
                    phase = 2;
                    moveTimer = 30;
                    yspeed = 0;
                }
            }
            break;
        case 2:
            moveTimer--;
            if (moveTimer &lt;= 0)
            {
                if (animBack == false)
                {
                    if (image_index != 3)
                    {
                        image_index += imgSpd;
                    }
                    
                    if (image_index &gt;= 2)
                    {
                        image_index = 3;
                    }
                    
                    if (image_index == 3)
                    {
                        // Fire Shots
                        if (hasShot == false)
                        {
                            switch (shots)
                            {
                                case 0:
                                    var i = instance_create(x, y, objElecitShot);
                                    i.xspeed = -2;
                                    playSFX(sfxElectricShot);
                                    break;
                                case 1:
                                    var i = instance_create(x, y, objElecitShot);
                                    i.xspeed = 2;
                                    playSFX(sfxElectricShot);
                                    break;
                                case 2:
                                    var i = instance_create(x, y, objElecitShot);
                                    i.xspeed = 1;
                                    playSFX(sfxElectricShot);
                                    break;
                                case 3:
                                    var i = instance_create(x, y, objElecitShot);
                                    playSFX(sfxElectricShot);
                                    break;
                                case 4:
                                    var i = instance_create(x, y, objElecitShot);
                                    i.xspeed = -1;
                                    playSFX(sfxElectricShot);
                                    break;
                            }
                            hasShot = true;
                        }
                        
                        animTimer--;
                        if (animTimer &lt;= 0)
                        {
                            animBack = true;
                            shots++;
                            hasShot = false;
                            animTimer = 10;
                        }
                    }
                }
                else
                {
                    image_index -= imgSpd;
                    if (image_index &lt;= 0)
                    {
                        animBack = false;
                        if (shots == 5)
                        {
                            phase = 0;
                            moveTimer = 10;
                            shots = 0;
                        }
                    }
                }
            }
            break;
    }
}
else if (dead)
{
    healthpoints = healthpointsStart;
    image_index = 0;
    phase = 0;
    moveTimer = 60;
    shots = 0;
    animTimer = 10;
    animBack = false;
    hasShot = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

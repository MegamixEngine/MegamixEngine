<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCompactorTop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = false;

isSolid = 1;
blockCollision = 0;
grav = 0;

action = 1;
actionTimer = 0;

alarmTime = 80;
mySpeed = 3.5;
yscalestart = 0;

respawnRange = -1;
despawnRange = -1;

shiftVisible = 1;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sprCompactor;

y += 1;

setSection(x, y + 8, 0);

while (!place_meeting(x, y - 1, objSolid)
&amp;&amp; sectionTop &lt; y &amp;&amp; bbox_top - 1 &gt; 0)
{
    y -= 1;
}

image_yscale = ystart - y + 16;
yscalestart = image_yscale;
ystart = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // only collide this way
    blockCollision = (action == 2);
    
    actionTimer += 1;
    
    switch (action)
    {
        case 1: // wait 
            if (actionTimer == alarmTime)
            {
                action += 1;
                actionTimer = 0;
            }
            break;
        case 2: // Down 
            yspeed = mySpeed;
            image_yscale += yspeed;
            y = ystart;
            
            if (checkSolid(0, ceil(yspeed)) || bbox_bottom &gt;= global.sectionBottom)
            {
                action += 1;
                actionTimer = 0;
                yspeed = 0;
                if (insideView() &amp;&amp; bbox_bottom &lt; global.sectionBottom)
                {
                    playSFX(sfxCompactor);
                }
            }
            
            //image_yscale = bbox_bottom - ystart;
            //y = ystart;
            
            /*if (bbox_bottom &gt;= global.sectionBottom)
            {
                while (bbox_bottom &gt;= global.sectionBottom)
                {
                    image_yscale -= 1;
                }
                action += 1;
                actionTimer = 0;
            }*/
            break;
        case 3: // wait again 
            if (actionTimer == 80)
            {
                action += 1;
                actionTimer = 0;
            }
            break;
        case 4: // Up 
            image_yscale -= mySpeed * 1.25;
            if (image_yscale &lt;= yscalestart)
            {
                image_yscale = yscalestart;
                action = 1;
            }
            break;
    }
}
else if (dead)
{
    image_yscale = yscalestart;
    actionTimer = 0;
    action = 1;
    yspeed = 0;
    blockCollision = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawSelf();

draw_sprite(sprCompactorTop, 0, x, ceil(bbox_bottom - 14));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

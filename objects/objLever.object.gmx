<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLever</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 0;
canHit = false;
bubbleTimer = -1;

state = 0; //@cc 0: up, 1: down
uptag = ""; //@cc tag for the leverfield to activate when up
downtag = ""; //@cc tag for the leverfield to activate when down
oneShot = false; //@cc if set to true, lever can only be flipped once, then is stuck.

respawnRange = -1;
despawnRange = -1;

touchingPlayer = false; // set to true when the player is touching to prevent toggling back and forth
transition_anim = 0;
flipped = false;

grav = 0;
blockCollision = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen &amp;&amp; !dead &amp;&amp; !global.timeStopped)
{
    // detect player touching and whether they're moving up or down
    var touching, player_yspeed, prev_state;
    touching = false;
    player_yspeed = 0;
    prev_state = state;
    
    if (!flipped || !oneShot)
    {
        with (objMegaman)
        {
            // normal check touching
            if (place_meeting(x, y - 1, other) &amp;&amp; !ground)
            {
                if ((yspeed &gt; 0 &amp;&amp; y &lt; other.y) || (yspeed &lt; 0 &amp;&amp; y &gt; other.y))
                {
                    player_yspeed = yspeed;
                }
                touching = true;
            }
        }
        
        if (touching
            &amp;&amp; !touchingPlayer) // suddenly touching; was not touching in previous frame.
        {
            touchingPlayer = true;
            if (player_yspeed &gt; 0) // player moving down
            {
                state = 1;
            }
            if (player_yspeed &lt; 0) // player moving up:
            {
                state = 0;
            }
        }
        
        if (!touching) // no longer touching, but was in previous frame:
        {
            touchingPlayer = false;
        }
    }
    
    // toggled this frame:
    if (state != prev_state)
    {
        transition_anim = 5;
        flipped = true;
    }
    
    image_index = 2 * state;
    
    // for a few frames, lever is in center:
    if (transition_anim &gt; 0)
    {
        transition_anim -= 1;
        image_index = 1;
    }
    
    // set leverfields to active / inactive depending on state
    with (objLeverField)
    {
        if (other.state == 0)
        {
            if (tag == other.uptag)
                active = true;
            if (tag == other.downtag)
                active = false;
        }
        else if (other.state == 1)
        {
            if (tag == other.uptag)
                active = false;
            if (tag == other.downtag)
                active = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

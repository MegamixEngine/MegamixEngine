<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCutsceneSkipMenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000000</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

x = view_xview + view_wview / 2 - (sprite_width / 2);
y = view_yview + view_hview / 2 - (sprite_height / 2);

parent = -1; // cutscene object spawned by
playerID = 0;
active = false;

option = 1;
drawOffset = 32;

drawCommand = true;

type = 0; // 0 = cutscene skip, 1 = exit, 2 = load checkpoint

autoSkip = global.autoCutsceneSkip;
cooldownTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (global.frozen)
{
    global.frozen = false;
}
    
with (objTeleporter)
{
    cooldown = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// die with parent
if (!instance_exists(parent))
{
    instance_destroy();
    exit;
}

x = view_xview + view_wview / 2 - (sprite_width / 2);
y = view_yview + view_hview / 2 - (sprite_height / 2);

// Trigger menu
if (!active)
{
    if (((global.keyMap[0] &amp;&amp; global.keyUp[0]) || (autoSkip &amp;&amp; type == 0)) &amp;&amp; !instance_exists(objPauseMenu))
    {
        active = true;
        global.frozen = true;
        playSFX(getGenericSFX(SFX_PAUSE));
    }
}
else // --Is Active--
{
    cooldownTimer ++;
    
    // halt textboxes
    with (objDialogueBox)
    {
        frozen = 1;
    }
    
    // extra fix
    if (!global.frozen)
    {
        global.frozen = true;
    }
    
    //"Skip Cutscene?"
    var start = (global.keyJumpPressed[playerID] || global.keyPausePressed[playerID]);
    var shoot = global.keyShootPressed[playerID];
    
    // move cursor
    if (global.keyLeftPressed[playerID] || global.keyRightPressed[playerID])
    {
        option = !option;
        playSFX(sfxMenuMove);
    }
    
    if ((start || shoot || autoSkip) &amp;&amp; (cooldownTimer &gt; 10 || autoSkip))
    {
        if ((start &amp;&amp; option == 0) || autoSkip)
        {
            if (!autoSkip)
                playSFX(sfxMenuSelect);
            
            if (type == 0)
            {
                with (parent)
                    event_user(5);
                    
                with (objGlobalControl)
                    fadeAlpha = 1;
                
                with (objDialogueBox)
                    instance_destroy();
                
            }
            else if (type == 1)
            {
                returnFromLevel(true, true);
            }
            else if (type == 2)
            {
                with (parent)
                {
                    stageStartFlag = true;
                    confirmedCheckpoint = 1;
                }
            }
            
            instance_destroy();
        }
        else if (shoot || (start &amp;&amp; option == 1))
        {
            with (objDialogueBox)
            {
                frozen = 0;
            }
                
            active = false;
            cooldownTimer = 0;
            
            if (type == 2)
            {
                slDelete(roomExternalGetName(global.nextRoom), 1);
            }
        }
        
        // exit no matter what
        global.frozen = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Command
if (!active &amp;&amp; !autoSkip)
{
    if (drawCommand &amp;&amp; type == 0 &amp;&amp; !instance_exists(objPauseMenu) &amp;&amp; view_current == 0)
    {
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        
        var yy = view_yview + view_hview - 9 - objGlobalControl.shakey;
        var xx = view_xview + 2 - objGlobalControl.shakex;
        
        drawButtonPrompt("map", xx, yy);
        xx += 11;
        
        drawButtonPrompt("up", xx, yy);
        xx += 12;
        
        draw_text(xx, yy, "SKIP");
    }
    
    exit;
}

// Menu
draw_set_halign(fa_center);
draw_set_valign(fa_center);

draw_self();

var txt = "";
    
switch (type)
{
    case 0:
        txt = "Skip?";
        break;

    case 1:
        txt = "Exit?";
        break;

    case 2:
        txt = "Continue from#Checkpoint?";
        break;
}

draw_text(spriteGetXCenter(), y + 20, txt);

draw_text(spriteGetXCenter() - 32, y + 40, "YES");
draw_text(spriteGetXCenter() + 32, y + 40, "NO");

var offset = 32;
if (option == 0)
    offset = -32;
    
if (abs(offset - drawOffset) &gt;= 1)
    drawOffset += (offset - drawOffset) / 6;
else
    drawOffset = offset;

var xx = round(spriteGetXCenter() + drawOffset);
var yy = (y + 40);

draw_sprite(sprSkipMenuCursor, 0, xx - 12, yy - 6);
draw_sprite(sprSkipMenuCursor, 1, xx + 12, yy - 6);
draw_sprite(sprSkipMenuCursor, 2, xx + 12, yy + 6);
draw_sprite(sprSkipMenuCursor, 3, xx - 12, yy + 6);

draw_set_halign(fa_left);
draw_set_valign(fa_top);

if (global.showColoredTextOverlays) {
    draw_sprite_ext(sprDot, 0, x, y, sprite_width, sprite_height, 0,
        make_color_rgb(global.coloredTextOverlaysRed, global.coloredTextOverlaysGreen, global.coloredTextOverlaysBlue),
        global.coloredTextOverlaysOpacity / 255);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// no
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

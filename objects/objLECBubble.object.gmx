<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLECBubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
respawn = false;
healthpointsStart = 10;
healthpoints = healthpointsStart;
contactDamage = 0;
facePlayerOnSpawn = true;
image_speed = 0;
image_index = 0;
image_xscale = 1;
bubbleTimer = -1;

// Enemy specific code
capture = noone;
animTimer = 5;
calibrateDirection();
init = 1;
//playSFX(sfxLECBubble);
pop = false;
setMega = false;
ySpeedMul = 1;

mask = mskLECBubble;
tmpMask = mask_index;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = tmpMask;
event_inherited();

if init {
init = 0;
if insideView() {
playSFX(sfxLECBubble);
}
}

if (!pop)
{
    if (place_meeting(x, y + 2, objLadder))
        setMega = false;
    else
        setMega = true;
    with (target)
    {
        if (place_meeting(x, y, other) &amp;&amp; other.capture == noone &amp;&amp; !other.dead)
        {
            with (other)
            {
                if (place_meeting(x, y, objLECBubble))
                {
                    capture = noone;
                    pop = true;
                }
            }
            other.capture = id;
            if (other.setMega)
            {
                /* other.x = x;
                other.y = y-2 ;*/
                xspeed = 0;
                yspeed = 0;
            }
        }
        if (other.capture == id)
        {
            if (climbing)
            {
                climbing = false;
                climbLock = lockPoolRelease(climbLock);
            }
            x = other.x;
            y = other.y - 2;
            xspeed = 0;
            yspeed = 0;
            animNameID = 3;
        }
    }
}
if ((entityCanStep()) &amp;&amp; !pop)
{
    if (place_meeting(x, y + 1, objSolid) || place_meeting(x, y + 1, objTopSolid) &amp;&amp; !place_meeting(x, y + 2, objLadder))
    {
        xspeed = 0.5 * image_xscale;
        yspeed = 0;
        blockCollision = 1;
    }
    else if (place_meeting(x, y + 1, objTopSolid) &amp;&amp; place_meeting(x, y + 2, objLadder))
    {
        blockCollision = 0;
        yspeed = 0.5*ySpeedMul;
        xspeed = 0;
    }
    else if (ground)
    {
        blockCollision = 1;
        yspeed = 0;
        xspeed = 0.5 * image_xscale;
    }
    else
    {
        blockCollision = 1;
        yspeed = 0.5*ySpeedMul;
        xspeed = 0;
    }
    if ((x &lt;= view_xview + 16 || x &gt;= view_xview + view_wview - 16) &amp;&amp; capture != noone)
        pop = true;
}
else if (pop)
{
    capture = noone;
    image_index = 1;
    animTimer -= 1;
    if (animTimer &lt;= 0)
        instance_destroy();
}
if (dead)
{
    capture = noone;
}
mask_index = mask;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pop = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_ext(mask,image_index,x,y,image_xscale,image_yscale,0,c_white,1);
draw_sprite_ext(sprite_index, image_index, round(x), floor(y), 1, image_yscale, image_angle, image_blend, image_alpha);
if ((iFrames mod 2 == 1) || (iceTimer &gt; 0))
{
    var flashcol = c_white;
    if (iceTimer &gt; 0)
        flashcol = make_color_rgb(0, 120, 255);
    d3d_set_fog(true, flashcol, 0, 0);
    draw_sprite_ext(sprite_index, image_index, round(x), floor(y), 1, image_yscale, image_angle, image_blend, image_alpha);
    d3d_set_fog(false, 0, 0, 0);
    if (iceTimer &gt; 0)
    {
        draw_set_blend_mode(bm_add);
        draw_sprite_ext(sprite_index, image_index, round(x), floor(y), 1, image_yscale, image_angle, image_blend, image_alpha);
        draw_set_blend_mode(bm_normal);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

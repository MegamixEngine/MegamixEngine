<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBenK</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>sprHammerjoeClosed</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 12;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "bulky, shielded";

facePlayerOnSpawn = true;

// Enemy specific code
phase = 0;
timer = 0;

imgSpd = 0.4;
imgIndex = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        // rotating spear
        case 1:
            imgIndex += imgSpd;
            if (imgIndex &gt;= 6)
            {
                imgIndex = 4 + imgIndex mod 6;
            }
            
            timer += 1;
            
            if (timer == 60)
            {
                calibrateDirection(); // only turn a tiny bit before shooting
            }
            
            if (timer &gt;= 90)
            {
                // &lt;-- time spinning spear here
                phase = 2;
                imgIndex = 6;
                timer = 0;
                
                var spear = instance_create(x + sprite_width * 0.65, y - 5, objBenKSpear);
                spear.image_xscale = image_xscale;
                spear.xspeed *= image_xscale;
            }
            
            break;
        
        // shoot spear
        case 2:
            /*if (imgIndex &lt; 7)
            {
                imgIndex += imgSpd;
            }
            else
            {*/
                timer += 1;
                if (timer &gt;= 30)
                {
                    /*phase = 3;
                    timer = 0;
                    imgIndex = 0;*/
                    
                    imgIndex += imgSpd;
                    if (imgIndex &gt;= 8)
                    {
                        phase = 3;
                        timer = 0;
                        imgIndex = 0;
                    }
                }
            //}
            
            /*if (imgIndex &gt;= 8)
            {
                imgIndex = 7;
            }*/
            
            break;
        
        // grab another spear
        case 3:
            if (imgIndex &lt; 2)
            {
                imgIndex += imgSpd / 4;
            }
            else if (imgIndex &lt; 3)
            {
                imgIndex += imgSpd / 2;
            }
            else
            {
                timer += 1;
                if (timer &gt;= 30)
                {
                    phase = 1;
                    timer = 0;
                    imgIndex = 4;
                }
            }
            
            break;
    }
    image_index = imgIndex div 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On spawn
event_inherited();
phase = 1;
timer = 0;
xspeed = 0;
yspeed = 0;
imgIndex = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 4 || image_index == 5 &amp;&amp; !global.timeStopped)
{
    if (image_xscale == -1)
    {
        if (bboxGetXCenterObject(other.id) &lt; bboxGetXCenter())
        {
            other.guardCancel = 1;
        }
    }
    else
    {
        if (bboxGetXCenterObject(other.id) &gt; bboxGetXCenter())
        {
            other.guardCancel = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
instance_create(bboxGetXCenter(),bboxGetYCenter(),objBigExplosion);
stopSFX(sfxEnemyHit);
playSFX(sfxExplosion2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

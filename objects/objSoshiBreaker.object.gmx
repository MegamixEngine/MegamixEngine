<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSoshiBreaker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 6;
contactDamage = 6;

category = "semi bulky";
facePlayerOnSpawn = true;

imgIndex = 0;
imgSpd = 0.1;
phase = 0;
safeTimer = 0;

block = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    switch (phase)
    {
        case 0:
            if (!instance_exists(objSoshiBreakerDebris))
            {
                if (imgIndex &lt; 2)
                {
                    imgIndex += imgSpd;
                }
                else
                {
                    yspeed = -5;
                    phase = 1;
                }
            }
            break;
        case 1:
            if ((yspeed &gt;= 0) &amp;&amp; (!ground))
            {
                imgIndex = 0;
            }
            else if (ground)
            {
                if (imgIndex == 0)
                {
                    imgIndex = 1;
                    playSFX(sfxClamp);
                }
                imgIndex += imgSpd;
                if (imgIndex == 2)
                {
                    imgIndex = 0;
                    phase = 2;
                    block = instance_create(x + 1 * image_xscale, view_yview, objSoshiBreakerCube);
                    block.image_xscale = image_xscale;
                }
            }
            break;
        case 2:
            if (place_meeting(x, y, block))
            {
                with (block)
                {
                    instance_destroy();
                }
                
                if (imgIndex == 0)
                {
                    imgIndex = 3;
                    phase = 3;
                }
            }
            else //Didn't hit the block for whatever reason? No biggie, start again!
            {
                safeTimer++;
                if (safeTimer == 240)
                {
                    phase = 0;
                    safeTimer = 0;
                }
            }
            break;
        case 3:
            imgIndex += imgSpd;
            if (imgIndex &gt;= 6)
            {
                phase = 0;
                imgIndex = 0;
                
                // Create 7-way spreadshot
                var i = instance_create(x, y - 8, objSoshiBreakerDebris);
                i.xspeed = -2;
                i.yspeed = 2;
                var i = instance_create(x - 2, y - 9, objSoshiBreakerDebris);
                i.xspeed = -3;
                i.yspeed = 0;
                var i = instance_create(x, y - 10, objSoshiBreakerDebris);
                i.xspeed = -2;
                i.yspeed = -2;
                var i = instance_create(x + 1, y - 12, objSoshiBreakerDebris);
                i.xspeed = 0;
                i.yspeed = -3;
                var i = instance_create(x + 2, y - 10, objSoshiBreakerDebris);
                i.xspeed = 2;
                i.yspeed = -2;
                var i = instance_create(x + 4, y - 9, objSoshiBreakerDebris);
                i.xspeed = 3;
                i.yspeed = 0;
                var i = instance_create(x + 2, y - 8, objSoshiBreakerDebris);
                i.xspeed = 2;
                i.yspeed = 2;
                
                playSFX(sfxLargeClamp);
            }
            break;
    }
}
else if (dead)
{
    healthpoints = healthpointsStart;
    imgIndex = 0;
    phase = 0;
    safeTimer = 0;
}
image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (imgIndex &gt;= 3)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

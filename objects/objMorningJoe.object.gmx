<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMorningJoe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A stationary Joe that swings a spike flail overhead. When it attacks, the spike balls extend toward the player in a horizontal line and then retract.
/// Unlike most other Joes, this one does not have a shield. However, the spike balls absorb attacks and essentially function like a shield.
/// This enemy synergizes well with several different gimmicks. Keep in mind that its default health is much higher than average for a regular enemy.

event_inherited();

healthpointsStart = 12;
healthpoints = healthpointsStart;
contactDamage = 5;

category = "joes";

facePlayer = true;

image_index = 1;
image_speed = 0;

// Enemy specific code
star[0] = noone;
star[1] = noone;
star[2] = noone;
star[3] = noone;
cAngle = 0;
cDistance = 16;
addAngle = 3;
attackTimer = -32;
animFrame = 0;
xOffset[0] = -2;
xOffset[1] = 0;
xOffset[2] = 2;

explosionSprite = sprExplosionWonderswan;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    attackTimer++;
    cAngle += addAngle * image_xscale;
    if (abs(cAngle) &gt;= 360)
    {
        cAngle -= 360 * image_xscale;
    }
    if (attackTimer &gt;= 0 &amp;&amp; attackTimer &lt; 118)
    {
        if (image_index == 1)
        {
            image_index = 2;
            for (var i = 0; i &lt; 4; i++)
            {
                star[i] = instance_create(x, y - 23, objMorningJoeStar);
                star[i].newX = x;
                star[i].newY = star[i].y;
                star[i].parent = id;
                star[i].cFrame = i;
            }
        }
        else
        {
            animFrame += 0.125;
            image_index = 2 + (animFrame mod 3);
            for (var i = 0; i &lt; 4; i++)
            {
                star[i].newX = xOffset[floor(animFrame mod 3)] * image_xscale + round(x + cos(degtorad(cAngle + i * 90)) * cDistance);
                star[i].newY = y - 24;
            }
        }
    }
    else if (attackTimer == 118)
    {
        image_index = 5;
        star[0].newX = x - 8 * image_xscale;
        star[0].newY = y - 23;
        star[1].newX = x - 6 * image_xscale;
        star[1].newY = y - 21;
        star[2].newX = x - 4 * image_xscale;
        star[2].newY = y - 19;
        star[3].newX = x - 2 * image_xscale;
        star[3].newY = y - 17;
    }
    else if (attackTimer == 124)
    {
        for (var i = 0; i &lt; 4; i++)
        {
            star[i].newX = x + 32 * image_xscale;
            star[i].newY = y + 1;
        }
    }
    else if (attackTimer &gt; 124 &amp;&amp; attackTimer &lt; 172)
    {
        if (attackTimer == 136)
        {
            star[1].newX = x + 56 * image_xscale;
            star[2].newX = x + 56 * image_xscale;
            star[3].newX = x + 56 * image_xscale;
        }
        if (attackTimer == 148)
        {
            star[2].newX = x + 80 * image_xscale;
            star[3].newX = x + 80 * image_xscale;
        }
        if (attackTimer == 160)
        {
            star[3].newX = x + 104 * image_xscale;
        }
    }
    else if (attackTimer &gt;= 172 &amp;&amp; attackTimer &lt; 220)
    {
        if (attackTimer == 184)
        {
            star[3].newX = x + 32 * image_xscale;
        }
        if (attackTimer == 196)
        {
            star[2].newX = x + 32 * image_xscale;
        }
        if (attackTimer == 208)
        {
            star[1].newX = x + 32 * image_xscale;
        }
    }
    else if (attackTimer == 220)
    {
        image_index = 2;
        attackTimer = 0;
    }
    else
    {
        image_index = 1;
    }
}
else if (dead)
{
    attackTimer = -32;
    image_index = 1;
    animFrame = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 0)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

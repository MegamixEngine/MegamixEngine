<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTerraSparkChaser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

mainShot = 1; // If true, instance is an invisible orbiting point for the visible shots
grav = 0;
blockCollision = 0;
stopOnFlash = false;

despawnRange = 64; //-16;//64;
parent = noone;

phase = 0;
timer = 0;
cAngle = 0;
cDistance = 0;

dir = 0;

followPlayer = true; // Do I follow the player's location?
spd = 3; // The speed of the ray
fireDelay = 90; // How long before ray actually moves
expandSpeed = 30; // The speed at which the ray expands

imgIndex = 0;
imgSpd = 0.2;

reflectable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (mainShot) // Invisible orbit point for spheres
    {
        timer++;
        if (timer == 1)
        {
            for (i = 120; i &lt;= 360; i += 120)
            {
                var sd = instance_create(x, y, objTerraFreezeRay);
                sd.mainShot = false;
                sd.cAngle = i;
                sd.parent = id;
                sd.image_xscale = image_xscale;
            }
        }
        
        if (timer == fireDelay)
        {
            xspeed = spd * image_xscale;
            despawnRange = 80;
        }
    }
    else // Actual paralysing ray
    {
        if (instance_exists(parent)) //Only exist if orbit point does
        {
            var xCenter = parent.x;
            var yCenter = parent.y;
            
            x = xCenter + cos(degtorad(cAngle)) * cDistance;
            y = yCenter + sin(degtorad(cAngle)) * cDistance;
            
            if (image_xscale == -1) // Change rotation direction based on Terra's xscale
                cAngle -= 360 / expandSpeed;
            else
                cAngle += 360 / expandSpeed;
            if (cAngle &gt;= 360)
                cAngle -= 360;
            if (cDistance &lt; 32)
                cDistance += 0.2;
        }
        else
        {
            instance_destroy();
        }
        
        // Actually freeze Mega Man
        if (instance_exists(target))
        {
            if (place_meeting(x,y,target)) &amp;&amp; (target.canHit &amp;&amp; !target.iFrames)
            {
                if (instance_exists(objBreakDash)) // Cancel Break Dash
                {
                    with (objBreakDash)
                    {
                        if (parent == other.target)
                            instance_destroy();
                    }
                }
                else
                {
                    if (!instance_exists(objTerraTimeStop)) // Create object if none exist
                    {
                        instance_create(x,y,objTerraTimeStop);
                        screenFlash(2);
                        playSFX(sfxTimeStopper);
                    }
                }
            }
        }
    }
    
    // Animation
    imgIndex += 0.2;
    if (imgIndex &gt;= 2)
    {
        imgIndex = 0;
    }
}
image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (spawned)
{
    if (mainShot)
        visible = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

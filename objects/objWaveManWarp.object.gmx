<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskMegaman</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = "Right";
spd = 4;

xspeed = 0;
yspeed = 0;

playSFX(sfxWaveManPipe);

global.waveManWarpLock = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dir == "Right")
{
    xspeed = spd;
    yspeed = 0;
    var warp;
    if (instance_place(x, y, objWaveManWarpUp))
    {
        warp = instance_place(x, y, objWaveManWarpUp);
        if (x &gt; warp.x + 8 &amp;&amp; warp.object_index == objWaveManWarpUp)
        {
            x = warp.x + 8;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
    else if (instance_place(x, y, objWaveManWarpDown))
    {
        warp = instance_place(x, y, objWaveManWarpDown);
        if (x &gt; warp.x + 8 &amp;&amp; warp.object_index == objWaveManWarpDown)
        {
            x = warp.x + 8;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
}
if (dir == "Left")
{
    xspeed = -spd;
    yspeed = 0;
    if (instance_place(x, y, objWaveManWarpUp))
    {
        warp = instance_place(x, y, objWaveManWarpUp);
        if (x &gt; warp.x + 8 &amp;&amp; warp.object_index == objWaveManWarpUp)
        {
            x = warp.x + 8;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
    else if (instance_place(x, y, objWaveManWarpDown))
    {
        warp = instance_place(x, y, objWaveManWarpDown);
        if (x &gt; warp.x + 8 &amp;&amp; warp.object_index == objWaveManWarpDown)
        {
            x = warp.x + 8;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
}
if (dir == "Up")
{
    yspeed = -spd;
    xspeed = 0;
    if (instance_place(x, y, objWaveManWarpRight))
    {
        warp = instance_place(x, y, objWaveManWarpRight);
        if (y &gt; warp.y &amp;&amp; warp.object_index == objWaveManWarpRight)
        {
            y = warp.y;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
    else if (instance_place(x, y, objWaveManWarpLeft))
    {
        warp = instance_place(x, y, objWaveManWarpLeft);
        if (y &gt; warp.y &amp;&amp; warp.object_index == objWaveManWarpLeft)
        {
            y = warp.y;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
}
if (dir == "Down")
{
    yspeed = spd;
    xspeed = 0;
    if (instance_place(x, y, objWaveManWarpRight))
    {
        warp = instance_place(x, y, objWaveManWarpRight);
        if (y &gt; warp.y &amp;&amp; warp.object_index == objWaveManWarpRight)
        {
            y = warp.y;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
    else if (instance_place(x, y, objWaveManWarpLeft))
    {
        warp = instance_place(x, y, objWaveManWarpLeft);
        if (y &gt; warp.y &amp;&amp; warp.object_index == objWaveManWarpLeft)
        {
            y = warp.y;
            dir = warp.dir;
            xspeed = 0;
            yspeed = 0;
            playSFX(sfxWaveManPipe);
        }
    }
}

if (!global.frozen)
{
    x += xspeed;
    y += yspeed;
}

if (instance_exists(objMegaman))
{
    if (!global.waveManWarpLock)
        global.waveManWarpLock = lockPoolLock(
            global.playerLock[PL_LOCK_MOVE],
            global.playerLock[PL_LOCK_TURN],
            global.playerLock[PL_LOCK_SHOOT]);
            
    with (objMegaman)
    {
        if !instance_exists(objSectionSwitcher)
        {
            x = other.x;
            y = other.y + 4;
            xspeed = 0;
            yspeed = 0;
            blockCollision = false;
        }
        
        spriteX = 7;
    }
}
if (instance_exists(objSectionSwitcher))
{
    x = objSectionSwitcher.x;
    y = objSectionSwitcher.y - 2;
}
if (instance_exists(objMegaman))
{
    if (place_meeting(x, y, objWaveManWarpStop)
        &amp;&amp; !place_meeting(x, y, objSolid))
    {
        with (objMegaman)
        {
            xspeed = other.xspeed;
            yspeed = other.yspeed;
            blockCollision = true;
        }
        global.waveManWarpLock = lockPoolRelease(
            global
            .waveManWarpLock);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

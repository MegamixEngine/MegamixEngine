<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKamapot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

canHit = false;
blockCollision = false;
bubbleTimer = -1;
respawn = false;
isSolid = true;
grav = 0;

delayDisplay = 2;
kamapotSpeed = noone;
jitter = true;
jitterTime = 4;
moveTimer = 0;
imgIndex = 0;
imgSpd = 0.3;
child = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (delayDisplay &gt; 0)
    {
        delayDisplay--;
    }
    
    moveTimer--;
    
    if (moveTimer &gt; 0)
    {
        if (jitter == true)
        {
            if (jitterTime == 4)
            {
                y -= 1;
            }
            jitterTime--;
            
            if (jitterTime == 0)
            {
                jitter = false;
                jitterTime = 4;
            }
        }
        else
        {
            if (jitterTime == 4)
            {
                y += 1;
            }
            jitterTime--;
            
            if (jitterTime == 0)
            {
                jitter = true;
                jitterTime = 4;
            }
        }
    }
    else
    {
        imgIndex += imgSpd;
        
        yspeed = kamapotSpeed;
        
        // shift up player if theyre on top of the kamapot
        if place_meeting(x, y - 1 * image_yscale, objMegaman)
        {
            with instance_place(x, y - 1 * image_yscale, objMegaman)
            {
                shiftObject(0, -1 * image_yscale, true);
            }
        }
        
        if (!collision_rectangle(x - (16 * image_yscale == -1), y - (26 * image_yscale == -1), 
        x + (16 * image_yscale == 1), y + 26 * (image_yscale == 1), objSolid, false, true))
        {
            if (instance_exists(child))
            {
                with (child)
                {
                    if (deathTimer &lt;= 0)
                    {
                        instance_destroy();
                    }
                }
            }
        }
    }
}
image_index = imgIndex div 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_rectangle(x - (16 * image_yscale == -1), y - (26 * image_yscale == -1), 
x + (16 * image_yscale == 1), y + 26 * (image_yscale == 1), objSolid, false, true))
{
    var cover = instance_create(x, y, objGundrillCover); // Use this to hide underground parts
    cover.parent = id;
    child = cover.id;
    cover.image_yscale = image_yscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (delayDisplay &lt;= 0)
{
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

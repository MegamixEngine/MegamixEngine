/// setInstanceVariableArray(varstring, val, i, j)
/// sets the instance array at index [i, j] to the value provided.
/// returns true if success.

var _____vs_____ = argument0;
var _____val_____ = argument1;
var _____i_____ = argument2;
var _____j_____ = argument3;

/// THIS SCRIPT WAS GENERATED AUTOMATICALLY
/// VIA strexec_varsearch.py. 
/// DO NOT EDIT BY HAND!

/// Stats:
/// 4581 variables
/// from 1655 source files

if (_____vs_____ == "") return false;
else if (stringStartsWith(_____vs_____, 'a'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "a") a[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a0") a0[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a1") a1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a2") a2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a3") a3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a4") a4[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a5") a5[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a6") a6[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "a7") a7[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aN") aN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aStr") aStr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aa") aa[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "absSpeed") absSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "absolve") absolve[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "absorbSFXTimer") absorbSFXTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "acc") acc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "accceptableTarget") accceptableTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "accel") accel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "accelSpeed") accelSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "accelTime") accelTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "accelerating") accelerating[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "acceleration") acceleration[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "acceptableTarget") acceptableTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "action") action[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "actionTimer") actionTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "activate") activate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "activateTimer") activateTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "activated") activated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "activationDistance") activationDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "active") active[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "activeDisk") activeDisk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "activeTime") activeTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "activeTimer") activeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addAngle") addAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addAngleX") addAngleX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addAngleY") addAngleY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addDistance") addDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addEnergy") addEnergy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addNew") addNew[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addX") addX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "addY") addY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "added") added[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "additionalTile") additionalTile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aggressor") aggressor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aiBug") aiBug[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aiTurn") aiTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aim") aim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aimAtMegaman") aimAtMegaman[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aimDir") aimDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aimDist") aimDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aimSpeed") aimSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aimTimer") aimTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aiming") aiming[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "airControlSpeed") airControlSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "airDrag") airDrag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "airShoot") airShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "airSpeed") airSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "airTime") airTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarm") alarm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmAnimation") alarmAnimation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmAttack") alarmAttack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmCalm") alarmCalm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmChange") alarmChange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmChase") alarmChase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmDie") alarmDie[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmDrop") alarmDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmFish") alarmFish[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmGenerate") alarmGenerate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmHitSolid") alarmHitSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmImg") alarmImg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmJump") alarmJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmMove") alarmMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmPop") alarmPop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmRise") alarmRise[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmSpawn") alarmSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmStop") alarmStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmTime") alarmTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmTimeMax") alarmTimeMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmTimer") alarmTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alarmTurn") alarmTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "align") align[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "aliveCount") aliveCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "allButtons") allButtons[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "allDead") allDead[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "allowSpawn") allowSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alone") alone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alpha") alpha[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alphaBase") alphaBase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alphaOutline") alphaOutline[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alphaPrimary") alphaPrimary[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alphaSecondary") alphaSecondary[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alreadyCollected") alreadyCollected[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "altTag") altTag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "alwaysCheckSolids") alwaysCheckSolids[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ammo") ammo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ammoCost") ammoCost[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "amounts") amounts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ang") ang[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "angl") angl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "angle") angle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "angleDir") angleDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "angleImage") angleImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "angleSpd") angleSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "angularSpeed") angularSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "anim") anim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animAdd") animAdd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animBack") animBack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animBackgrounds") animBackgrounds[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animCount") animCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animDelay") animDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animDelays") animDelays[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animDiv") animDiv[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animEndme") animEndme[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animFrame") animFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animFrameBase") animFrameBase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animFrameHead") animFrameHead[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animFrameMiddle") animFrameMiddle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animFrames") animFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animID") animID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animImage") animImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animIndex") animIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animIter") animIter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animLayer") animLayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animLayerOffset") animLayerOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animLength") animLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animLengths") animLengths[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animLimit") animLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animLoop") animLoop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animMax") animMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animNameID") animNameID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animOffset") animOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animPauseTimer") animPauseTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animPhase") animPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animSpeed") animSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animSpeeds") animSpeeds[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animSpinOffset") animSpinOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animSpinTurn") animSpinTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animStorage") animStorage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animStore") animStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTable") animTable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTilesTotal") animTilesTotal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTime") animTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTimer") animTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTimerMouth") animTimerMouth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTimerTreads") animTimerTreads[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTimers") animTimers[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animTotal") animTotal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animType") animType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animate") animate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animateOnTransition") animateOnTransition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animationLayer") animationLayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animationTimer") animationTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "animeTimer") animeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "any") any[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "anyRelease") anyRelease[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ap") ap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "appear") appear[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "appearTime") appearTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "appearTimer") appearTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "areaBottom") areaBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "areaLeft") areaLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "areaRight") areaRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "areaTop") areaTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arenaCenter") arenaCenter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arenaCentre") arenaCentre[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arg") arg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "argCount") argCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arg_n") arg_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "argn") argn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "args") args[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "argsin") argsin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arr") arr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arrN") arrN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "array") array[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arrayLength") arrayLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arrowBlinkTimer") arrowBlinkTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arrowDraw") arrowDraw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "arrowTimer") arrowTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "as") as[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "asObject") asObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "asas") asas[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ascendDist") ascendDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ascendSpeed") ascendSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "assTimer") assTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "asset_index") asset_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "assign_var") assign_var[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "at") at[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "atEnd") atEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attachX") attachX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attached") attached[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attachedToCloud") attachedToCloud[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attack") attack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attackCount") attackCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attackDelay") attackDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attackRandomiser") attackRandomiser[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attackTime") attackTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attackTimer") attackTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attackTimerMax") attackTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attackTimerMax2") attackTimerMax2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attr") attr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attr2") attr2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "attribute") attribute[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "autoDieTime") autoDieTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "autoDieTimer") autoDieTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "autodeath") autodeath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "automapperID") automapperID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "avoidsPits") avoidsPits[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "awaken") awaken[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ax") ax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ax1") ax1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ax2") ax2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "axX") axX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "axY") axY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ay1") ay1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ay2") ay2[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'b'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "b") b[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "back") back[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "backSprite") backSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "background_color") background_color[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "background_colour") background_colour[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "background_index") background_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "background_visible") background_visible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "backtrack") backtrack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "backtrackTimer") backtrackTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "backtrackTimerMax") backtrackTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ball") ball[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ballDir") ballDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ballImage") ballImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ballPosX") ballPosX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ballPosY") ballPosY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ballSpeed") ballSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "barrier1") barrier1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "barrier2") barrier2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "base") base[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "baseCol") baseCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bboxHeight") bboxHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bboxWidth") bboxWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bd") bd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bee") bee[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "beenOutsideView") beenOutsideView[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "beginAttackTimer") beginAttackTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "beginMoveTimer") beginMoveTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "beginShoot") beginShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "beginStartDir") beginStartDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "beginTime") beginTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "begunMove") begunMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "behaviour") behaviour[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "behaviourType") behaviourType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "beingKilled") beingKilled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bestDifference") bestDifference[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bestIndex") bestIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bg") bg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bgH") bgH[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bgID") bgID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bgL") bgL[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bgName") bgName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bgT") bgT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bgW") bgW[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "big") big[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bigJumpHeight") bigJumpHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "binary") binary[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "birb") birb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "birdID") birdID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "birdInstanceStore") birdInstanceStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "birdTurn") birdTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bit") bit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bladeThrow") bladeThrow[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blink") blink[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkCount") blinkCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkDuration") blinkDuration[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkImage") blinkImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkMultiple") blinkMultiple[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkSpeed") blinkSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkTimer") blinkTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkTimerMax") blinkTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinkWait") blinkWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blinks") blinks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blk") blk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blobID") blobID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blobMove") blobMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blobTimer") blobTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "block") block[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blockCollision") blockCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blockCollisionPreIce") blockCollisionPreIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blockCollisionStart") blockCollisionStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blockCollison") blockCollison[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blockObject") blockObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "block_string") block_string[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blowSpeed") blowSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blownUp") blownUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "blueSprite") blueSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bobAround") bobAround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bod") bod[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "body") body[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bodyFrame") bodyFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bodyInstanceStore") bodyInstanceStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bodyShark") bodyShark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bodySolid") bodySolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boltCounterXOffset") boltCounterXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boltCounterYOffset") boltCounterYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boltIconXOffset") boltIconXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boltIconYOffset") boltIconYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bomb") bomb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bombToThrow") bombToThrow[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bombX") bombX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bombY") bombY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boobeamCount") boobeamCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boomCounter") boomCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boomerangBack") boomerangBack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boost") boost[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boostSpd") boostSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boostWait") boostWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boosting") boosting[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bor") bor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "borderDistance") borderDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boss") boss[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossFade") bossFade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossGrav") bossGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossID") bossID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossImageIndex") bossImageIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossIntroBorderRadius") bossIntroBorderRadius[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossIntroName") bossIntroName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossIntroNameX") bossIntroNameX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossObject") bossObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossObjectIntroFinished") bossObjectIntroFinished[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossThere") bossThere[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossTriggered") bossTriggered[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossX") bossX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossXScale") bossXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossXSpeed") bossXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossY") bossY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossYSpeed") bossYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossesDefeated") bossesDefeated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bossesToDefeat") bossesToDefeat[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bottom") bottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bottomBlock") bottomBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bottomPart") bottomPart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boulderCount") boulderCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boulderEnd") boulderEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boulderStart") boulderStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounce") bounce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounceCount") bounceCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounceForce") bounceForce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bouncePhase") bouncePhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounceTimer") bounceTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounceTimes") bounceTimes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounced") bounced[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounces") bounces[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bouncesMax") bouncesMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bounciness") bounciness[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bouncyCalamity") bouncyCalamity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bound") bound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bound_bottom") bound_bottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bound_left") bound_left[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bound_right") bound_right[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bound_top") bound_top[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "box") box[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boxLeft") boxLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boxOffset") boxOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "boxTop") boxTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bracketCounter") bracketCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "breakDashLock") breakDashLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "breakTimer") breakTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "breakY") breakY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "breatheTimer") breatheTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bubble") bubble[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bubbleCount") bubbleCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bubbleInterval") bubbleInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bubbleLimit") bubbleLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bubbleTimer") bubbleTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bubbles") bubbles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bubblesPerInterval") bubblesPerInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buf") buf[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bufPointer") bufPointer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buffer") buffer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buffer_count") buffer_count[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buffer_gme") buffer_gme[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buffer_gme_address") buffer_gme_address[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buffer_gme_size") buffer_gme_size[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buffer_index") buffer_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buffer_size") buffer_size[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bugActive") bugActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bull") bull[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bullet") bullet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bulletID") bulletID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bulletLimit") bulletLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bulletLimitCost") bulletLimitCost[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bulletMax") bulletMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bulletObject") bulletObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bulletSpeed") bulletSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bulletTimes") bulletTimes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bullets") bullets[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bumped") bumped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "burnOut") burnOut[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "burnTimer") burnTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bursted") bursted[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "button") button[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buttonAmount") buttonAmount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buttonNoPressed") buttonNoPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buttonPuzzle") buttonPuzzle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "buttonsToPress") buttonsToPress[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "butts") butts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bwooooaaaaaaa") bwooooaaaaaaa[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bx") bx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bx1") bx1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bx2") bx2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "bxspeed") bxspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "by") by[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "by1") by1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "by2") by2[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'c'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "c") c[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cAngle") cAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cAngleX") cAngleX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cAngleY") cAngleY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cB") cB[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cD") cD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cDir") cDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cDistance") cDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cDistanceMax") cDistanceMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cDistanceX") cDistanceX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cDistanceY") cDistanceY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cFrame") cFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cG") cG[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cID") cID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cLocation") cLocation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cS") cS[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cSpeed") cSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cTurn") cTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cY") cY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ca") ca[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cachedShakeH") cachedShakeH[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cachedShakeV") cachedShakeV[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cachedXSpeed") cachedXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cachedYSpeed") cachedYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "calibrateTimer") calibrateTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "calibrated") calibrated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "caller") caller[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "camX") camX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "camY") camY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canAdvance") canAdvance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canAim") canAim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canAnimate") canAnimate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canBacktrack") canBacktrack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canBlink") canBlink[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canBounce") canBounce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canCoil") canCoil[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canCollide") canCollide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canContinue") canContinue[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canCreateMinoan") canCreateMinoan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canCreateMissiles") canCreateMissiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canDamage") canDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canDraw") canDraw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canDrop") canDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canExecute") canExecute[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canFall") canFall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canFillHealthBar") canFillHealthBar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canFlip") canFlip[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canHit") canHit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canIce") canIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canInitShoot") canInitShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canJet") canJet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canJump") canJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canLean") canLean[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canLive") canLive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canMinJump") canMinJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canMove") canMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canNeverLand") canNeverLand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canOpen") canOpen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canPraise") canPraise[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canProceed") canProceed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canProgressDoor") canProgressDoor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canRegen") canRegen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canShift") canShift[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canShoot") canShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canSpin") canSpin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canSpriteChange") canSpriteChange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canStep") canStep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canTurn") canTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canUnlock") canUnlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canWave") canWave[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "candidateN") candidateN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "candidateScore") candidateScore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "candidates") candidates[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canflash") canflash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "canincrease") canincrease[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cannon") cannon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cannonIndex") cannonIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cantDraw") cantDraw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "capture") capture[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "carFrame") carFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "caseName") caseName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cases") cases[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "catArray") catArray[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "catchTimes") catchTimes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "catcherSpeed") catcherSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "categories") categories[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "category") category[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "caughtPlayer") caughtPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "caughtTimer") caughtTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "caughtXScalePrev") caughtXScalePrev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ccode") ccode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ceilOrFloor") ceilOrFloor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ceiling") ceiling[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ceilingAnimSpeed") ceilingAnimSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ceilingSpeed") ceilingSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cel") cel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "center") center[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "centerBottomBlock") centerBottomBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "centerShift") centerShift[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "centerTopBlock") centerTopBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "centerX") centerX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "centerY") centerY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cgrav") cgrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chain") chain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "change") change[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "changeDir") changeDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "changeFrame") changeFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "changePhase") changePhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "changePhaseStart") changePhaseStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "changkeyNumber") changkeyNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "char") char[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "character") character[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "charge") charge[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chargeCol") chargeCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chargeDelay") chargeDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chargeSpeed") chargeSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chargeTime") chargeTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chargeTimeDiv") chargeTimeDiv[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chargeTimer") chargeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chargedWeaponCost") chargedWeaponCost[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "charging") charging[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chase") chase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chaseMegaman") chaseMegaman[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chaseObj") chaseObj[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chaseTimer") chaseTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chaseWait") chaseWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chasing") chasing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "check") check[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkPosX") checkPosX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkPosY") checkPosY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkPosYList") checkPosYList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkPositionX") checkPositionX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkPositionY") checkPositionY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkRange") checkRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkTopSolids") checkTopSolids[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkX") checkX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkY") checkY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "checkpoint") checkpoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chgPhases") chgPhases[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chibee") chibee[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "child") child[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "childCount") childCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "childLimit") childLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "childMovementType") childMovementType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "childObject") childObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "childOffsetX") childOffsetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "childOffsetY") childOffsetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "childStore") childStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "children") children[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chooseJumpX") chooseJumpX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chooseJumpY") chooseJumpY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "choosePhase") choosePhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chosenPipe") chosenPipe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "chunco") chunco[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cid") cid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "circle") circle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cl") cl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "clampTime") clampTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "clearSource") clearSource[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "clearedBossX") clearedBossX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "clearedBossY") clearedBossY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "climbLock") climbLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "climbShootXscale") climbShootXscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "climbSlope") climbSlope[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "climbSpeed") climbSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "climbSpriteTimer") climbSpriteTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "climbedUp") climbedUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "climbing") climbing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "clone") clone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cloneAddedDelay") cloneAddedDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cloneDelayOffset") cloneDelayOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cloneId") cloneId[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "closeBlastDoors") closeBlastDoors[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "closing") closing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cloud") cloud[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cloudSpeed") cloudSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cloudTimer") cloudTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "clst") clst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cmp") cmp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "code") code[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "code_on_talk_end") code_on_talk_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "code_on_talk_start") code_on_talk_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "code_str") code_str[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "col") col[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "col1") col1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "col2") col2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "col3") col3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "colScript") colScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "colXPoint") colXPoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "colYPoint") colYPoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collapse") collapse[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collapsePhase") collapsePhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collapseTimer") collapseTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collapsed") collapsed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collectMe") collectMe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collectPlayer") collectPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collide") collide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collided") collided[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collider") collider[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "collisionDamage") collisionDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "colonIndex") colonIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "color") color[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "colour") colour[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "colourBlock") colourBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "combineDir") combineDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "combineObject") combineObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "comeBack") comeBack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "commonAvailability") commonAvailability[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cond") cond[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "condition") condition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "conditionCode") conditionCode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "conditionScript") conditionScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "conditionScriptArgC") conditionScriptArgC[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "conditionScriptArgV") conditionScriptArgV[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "const") const[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "contactDamage") contactDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "contactDamageMultiplier") contactDamageMultiplier[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "contactStart") contactStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "container") container[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "continues") continues[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "controller") controller[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "controllerExists") controllerExists[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "controllerTargets") controllerTargets[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "controlsLocked") controlsLocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "convertIsSolid") convertIsSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "convertObject") convertObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "converted") converted[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "coolDown") coolDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "coolDownTime") coolDownTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldown") cooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownImageMax") cooldownImageMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownImageTimer") cooldownImageTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownMax") cooldownMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownSmashed") cooldownSmashed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownTimer") cooldownTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownTimerMax") cooldownTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownTimerMax1") cooldownTimerMax1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cooldownTimerMax2") cooldownTimerMax2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "coord") coord[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "coordH") coordH[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "coordW") coordW[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "copy") copy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cosCounter") cosCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cosX") cosX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cost") cost[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "costume") costume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "costumeID") costumeID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "count") count[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "countDown") countDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "countOwn") countOwn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "countTimer") countTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "countdown") countdown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "countdownToDestruction") countdownToDestruction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "counter") counter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cover") cover[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cp") cp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "crab") crab[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "createTime") createTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "creditsPosition") creditsPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "creditsText") creditsText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "crosshairFrame") crosshairFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "crushedPlayer") crushedPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cs") cs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "csplit") csplit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cube") cube[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "curSunLevel") curSunLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "curX") curX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "curY") curY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "curYOffset") curYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currX") currX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currY") currY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "curr_count") curr_count[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "current") current[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentAngle") currentAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentBoulder") currentBoulder[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentEnemy") currentEnemy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentExtraHealthBar") currentExtraHealthBar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentFrame") currentFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentImg") currentImg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentKeys") currentKeys[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentObj") currentObj[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentPlatformOffset") currentPlatformOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentPullSpd") currentPullSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentReward") currentReward[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentRotateSpeed") currentRotateSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentRotation") currentRotation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentShootCount") currentShootCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentTime") currentTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "currentWeapon") currentWeapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cursorDown") cursorDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cursorImageIndex") cursorImageIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cursorImageTimer") cursorImageTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cursorImgIndex") cursorImgIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cursorImgSpd") cursorImgSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cursorX") cursorX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cursorY") cursorY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "customDrop") customDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "customPose") customPose[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "customSprite") customSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cutscene") cutscene[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cutsceneScript") cutsceneScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cutsceneTimer") cutsceneTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cutter") cutter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cutterFrame") cutterFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cx") cx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cy") cy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "cycleHold") cycleHold[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'd'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "d") d[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dLU") dLU[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dLV") dLV[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dPad") dPad[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "da") da[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "damage") damage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "damageEnemies") damageEnemies[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "damageOffset") damageOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "damagePlayer") damagePlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "darken") darken[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "darkenAlpha") darkenAlpha[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "darksp") darksp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dashJumped") dashJumped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dashSlide") dashSlide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dashSpeed") dashSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dashTimer") dashTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dashspeed") dashspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "date") date[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "db") db[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ddY") ddY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deTimer") deTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deac") deac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deactivationDistance") deactivationDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dead") dead[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deadTimer") deadTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deadlyShadowClones") deadlyShadowClones[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deathByPit") deathByPit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deathOnDrop") deathOnDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deathSFX") deathSFX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deathTime") deathTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deathTimer") deathTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deathTimerMax") deathTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "debris") debris[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "debug") debug[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "debugABSX") debugABSX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "debugABSY") debugABSY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "decay") decay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deccel") deccel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "decel") decel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "decendSpeed") decendSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "decimal_pos") decimal_pos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "decreaseAmmoTimer") decreaseAmmoTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "decreaseAmmoTimerMax") decreaseAmmoTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "decrementedCount") decrementedCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ded") ded[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "def") def[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "defaultMotion") defaultMotion[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "defaultSpeed") defaultSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "defaultValue") defaultValue[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "del") del[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delay") delay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayContact") delayContact[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayDetection") delayDetection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayDisplay") delayDisplay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayMove") delayMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayOriginalBird") delayOriginalBird[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayPipe") delayPipe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayRock") delayRock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayTimer") delayTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayTimerMax") delayTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayTurn") delayTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delayUse") delayUse[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delete") delete[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deleteIndex") deleteIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deleteMap") deleteMap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deleteOriginals") deleteOriginals[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "delta") delta[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deltaX") deltaX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deltaY") deltaY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "deltaYSpeed") deltaYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "demoTimer") demoTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "den") den[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "depth") depth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "depthAlter") depthAlter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "depthstart") depthstart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "desDst") desDst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "desU") desU[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "desV") desV[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "desX") desX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "desY") desY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "descendGrav") descendGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "descendSpeed") descendSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "descriptionXOffset") descriptionXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "descriptionYOffset") descriptionYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "despawn") despawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "despawnRange") despawnRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "despawnTimer") despawnTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "despawnType") despawnType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destLX") destLX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destLY") destLY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destRX") destRX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destRY") destRY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destX") destX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destY") destY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destination") destination[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroy") destroy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyCheck") destroyCheck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyClockArm") destroyClockArm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyCounter") destroyCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyDelay") destroyDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyEntities") destroyEntities[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyIfUnlocked") destroyIfUnlocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyObjects") destroyObjects[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyOnDeath") destroyOnDeath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroySolids") destroySolids[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyTerrain") destroyTerrain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyTiles") destroyTiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyTilesDepth") destroyTilesDepth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "destroyTimer") destroyTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detach") detach[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectAnimation") detectAnimation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectRoof") detectRoof[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorL") detectorL[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorM") detectorM[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorMOffset") detectorMOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorMXOffset") detectorMXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorMXScale") detectorMXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorMYScale") detectorMYScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorR") detectorR[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorXOffset") detectorXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectorYOffset") detectorYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "detectsShot") detectsShot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dev_split_frac") dev_split_frac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "df") df[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dialogueBoxLightOffset") dialogueBoxLightOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dialogueLock") dialogueLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "didLoop") didLoop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "didShoot") didShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "didit") didit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "die") die[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dieOnHit") dieOnHit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dieTime") dieTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dieToPit") dieToPit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dieToPits") dieToPits[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dieToSpikes") dieToSpikes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "diff") diff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "difference") difference[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dipTimer") dipTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dir") dir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dirdir") dirdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "direc") direc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "direct") direct[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "directObject") directObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "directX") directX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "direction") direction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "directionMax") directionMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "directionPersist") directionPersist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "directionSpd") directionSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "directionStore") directionStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dirphase") dirphase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dis") dis[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "disM") disM[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "disappear") disappear[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "disappearTime") disappearTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "disappearTimer") disappearTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "disclaimerText") disclaimerText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "disp") disp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dispenseOffScreen") dispenseOffScreen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "display") display[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "displayBolts") displayBolts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "displayMessage") displayMessage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "displayResults") displayResults[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dist") dist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dist1") dist1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dist2") dist2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "distToPlayer") distToPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "distance") distance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "distanceMod") distanceMod[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "distanceTimer") distanceTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "distanceYToFish") distanceYToFish[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dives") dives[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dll") dll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dmg") dmg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dmgMax") dmgMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dmgTimer") dmgTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doDamage") doDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doFlash") doFlash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doIt") doIt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doJump") doJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doPickUpAction") doPickUpAction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doPlayerExplosion") doPlayerExplosion[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doQuake") doQuake[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doSFX") doSFX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doThing") doThing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doThrowAction") doThrowAction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "do_collision") do_collision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doesIntro") doesIntro[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doesLightning") doesLightning[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doesTransition") doesTransition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doesTransitionPreIce") doesTransitionPreIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "donate") donate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "donators") donators[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doneCritSwing") doneCritSwing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dontDieToScreenTransitions") dontDieToScreenTransitions[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "door") door[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doorHeight") doorHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doorOpenMax") doorOpenMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doorWait") doorWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dot") dot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dotrad") dotrad[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dots") dots[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dotx") dotx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doty") doty[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doubleJump") doubleJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "down") down[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "downtag") downtag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dox") dox[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "doy") doy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dpsTimer") dpsTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drainCooldown") drainCooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drainDelay") drainDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "draw") draw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawBoss") drawBoss[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawChar") drawChar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawDir") drawDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawFlame") drawFlame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawHealthBar") drawHealthBar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawInit") drawInit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawItem") drawItem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawLSpark") drawLSpark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawMe") drawMe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawString") drawString[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawTimer") drawTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawWeaponIcon") drawWeaponIcon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawX") drawX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawXPosition") drawXPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawY") drawY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawYPosition") drawYPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "draw_indent") draw_indent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "draw_spacing") draw_spacing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "draw_x") draw_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "draw_y") draw_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawarrow") drawarrow[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawingPlayer") drawingPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawrail") drawrail[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawspath") drawspath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawtext") drawtext[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawx") drawx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drawy") drawy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drew") drew[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "drop") drop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropBlockCollision") dropBlockCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropCount") dropCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropDisappearTime") dropDisappearTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropDown") dropDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropGrav") dropGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropHoney") dropHoney[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropIn") dropIn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropInterval") dropInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropMax") dropMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropOnce") dropOnce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropRock") dropRock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropTime") dropTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropTimer") dropTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropTimerMax") dropTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropWait") dropWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropXspeed") dropXspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropY") dropY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropYspeed") dropYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dropped") dropped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "droptimer") droptimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dsID") dsID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dsType") dsType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dsid") dsid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dsm") dsm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dstAngle") dstAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dstTag") dstTag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dstX") dstX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dstXSolid") dstXSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dstY") dstY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dstYSolid") dstYSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dst_x") dst_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dummyLogic") dummyLogic[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dummyTimer") dummyTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dustTimer") dustTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dx") dx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dxx") dxx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dy") dy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "dying") dying[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'e'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "e") e[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eTankTimer") eTankTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "earJiggle") earJiggle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "effect") effect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "effectSpace") effectSpace[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "egg1") egg1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "egg2") egg2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "egg3") egg3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eggArray") eggArray[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eggID") eggID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "elecDirec") elecDirec[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "electricityList") electricityList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "elementCode") elementCode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "elementName") elementName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "elementScript") elementScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "elt") elt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "en") en[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ename") ename[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "encounteredBracket") encounteredBracket[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endFrame") endFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endInitTimer") endInitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endOfStageBoss") endOfStageBoss[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endReached") endReached[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endRef") endRef[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endTarget") endTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endTimer") endTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endXoffset") endXoffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endY") endY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endit") endit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endquote_pos") endquote_pos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endx") endx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "endy") endy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enemiesDefeated") enemiesDefeated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enemiesOnScreen") enemiesOnScreen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enemiesToDefeat") enemiesToDefeat[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enemy") enemy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enemyLock") enemyLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enemyObject") enemyObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "energy") energy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "energyElementLock") energyElementLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "energyElements") energyElements[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entity") entity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityHeight") entityHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityN") entityN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityObject") entityObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityPop") entityPop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entitySprite") entitySprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityWidth") entityWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityX") entityX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityXScale") entityXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityXSpeed") entityXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityY") entityY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityYSpeed") entityYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityx") entityx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "entityy") entityy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enumb") enumb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "enx") enx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eny") eny[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ep") ep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "epCanCrush") epCanCrush[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "epDir") epDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "epImmprecition") epImmprecition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "epIsOnPlat") epIsOnPlat[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "epIsPassenger") epIsPassenger[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "epWillCollide") epWillCollide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eqPos") eqPos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "error") error[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "errors") errors[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "etankPositionX") etankPositionX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "etankPositionY") etankPositionY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "event") event[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eventtype") eventtype[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ex") ex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exception") exception[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "executeLocked") executeLocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exgrid") exgrid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exitConfirm") exitConfirm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exitPositionX") exitPositionX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exitPositionY") exitPositionY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exitTimer") exitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exitType") exitType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exp_tol") exp_tol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "expand") expand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "expectedEnergy") expectedEnergy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "expl") expl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explod") explod[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explode") explode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explodeDelay") explodeDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explodeOnContact") explodeOnContact[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explodeOnDeath") explodeOnDeath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explodeRadius") explodeRadius[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explodeTimer") explodeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explodeWait") explodeWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explodeWaitExtra") explodeWaitExtra[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explosion") explosion[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explosionID") explosionID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explosionLenght") explosionLenght[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "explosionSFX") explosionSFX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "expr") expr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "expr_value") expr_value[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exprlen") exprlen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exrm") exrm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exsp") exsp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "exspd") exspd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extendSpeed") extendSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extendX") extendX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extended") extended[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "externalRoomFilename") externalRoomFilename[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extraBirdTurn") extraBirdTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extraBirds") extraBirds[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extraChoice") extraChoice[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extraDamage") extraDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "extraLock") extraLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ey") ey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eye") eye[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eyeIndex") eyeIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eyeOffset") eyeOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "eyeTimer") eyeTimer[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'f'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "f") f[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fX") fX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fY") fY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "facePlayer") facePlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "facePlayerOnSpawn") facePlayerOnSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "face_player") face_player[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "face_player_distance") face_player_distance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "face_player_on_talk") face_player_on_talk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "faction") faction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fadeAlpha") fadeAlpha[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fadeInTimer") fadeInTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fadeOut") fadeOut[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fade_in_time") fade_in_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fadeinterval") fadeinterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fadephase") fadephase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fadestep") fadestep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fadetimer") fadetimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "failTolerancy") failTolerancy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fall") fall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fallMomentum") fallMomentum[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fallOnPlayer") fallOnPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fallSpeed") fallSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fallTime") fallTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fallTimer") fallTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fallen") fallen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "falling") falling[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fanoutDistance") fanoutDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fastSpeed") fastSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fc") fc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "file") file[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fileCount") fileCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fileDifficulty") fileDifficulty[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fileName") fileName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fileType") fileType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "file_contents") file_contents[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "file_hash") file_hash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "filename") filename[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "filepath") filepath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fillingHealthBar") fillingHealthBar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "finalFadeOut") finalFadeOut[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "finalTeleportX") finalTeleportX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "finalTeleportY") finalTeleportY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "findMegaman") findMegaman[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "findPartner") findPartner[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "findWall") findWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "findYSpeed") findYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fire") fire[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fireExists") fireExists[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fireSource") fireSource[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fireTimer") fireTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "first") first[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "firstFrame") firstFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "firstPlatform") firstPlatform[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "firstSlideMask") firstSlideMask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "firstStep") firstStep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "firsttime") firsttime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fish") fish[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fishCreated") fishCreated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fishDirection") fishDirection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fishSpawnX") fishSpawnX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fishSpawnY") fishSpawnY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fishToggle") fishToggle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fishYDistance") fishYDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flag") flag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flag0") flag0[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flagImage") flagImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flagOffLength") flagOffLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flagOnLength") flagOnLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flagYO") flagYO[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flags") flags[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flameCleared") flameCleared[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flameFrame") flameFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flameImg") flameImg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flameIndex") flameIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flameSpawned") flameSpawned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flameTimer") flameTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flash") flash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flashInterval") flashInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flashOffset") flashOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flashOpacity") flashOpacity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flashScreen") flashScreen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flashTimer") flashTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flashcol") flashcol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flea") flea[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flightTimer") flightTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flip") flip[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flipDir") flipDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flipOverTimer") flipOverTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flipped") flipped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flipperIndex") flipperIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "floatTimer") floatTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "floating") floating[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flower") flower[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flowerNumber") flowerNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flr") flr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fluffytheironicallynamedfish") fluffytheironicallynamedfish[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flyAwayTimer") flyAwayTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flySpeed") flySpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "flyTimer") flyTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fn") fn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fn_id") fn_id[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fn_str") fn_str[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fname") fname[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fnsolid") fnsolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "followPlayer") followPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "followWood") followWood[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "forceMove") forceMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "forceReset") forceReset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "forceSpreadSettings") forceSpreadSettings[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "form") form[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "forming") forming[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "found") found[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "foundCollision") foundCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "foundMachine") foundMachine[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "foundSolid") foundSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fpcount") fpcount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frame") frame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frameOffset") frameOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frameX") frameX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frameY") frameY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frameswitch") frameswitch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "freeFalling") freeFalling[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "freeMegaman") freeMegaman[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "free_time") free_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "freezeTimer") freezeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fric") fric[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frogAnimTimer") frogAnimTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frogFrame") frogFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "front") front[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frostTimer") frostTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "frozen") frozen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ft") ft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "full") full[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "fullTestSuiteSet") fullTestSuiteSet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "full_code") full_code[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "futureGrav") futureGrav[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'g'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "gameTimer") gameTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gamepadStick") gamepadStick[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gearActive") gearActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "generated") generated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getAngle") getAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getLastXspeed") getLastXspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getLastY") getLastY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getLastYspeed") getLastYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getLength") getLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getListNumber") getListNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getNum") getNum[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getPlayer") getPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getPlayerX") getPlayerX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getPlayerY") getPlayerY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getWidth") getWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getX") getX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "getY") getY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "globCount") globCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.BounceXVel") global.BounceXVel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.MeBounce") global.MeBounce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.aliveBosses") global.aliveBosses[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.alwaysHealth") global.alwaysHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.ammo") global.ammo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.automapper") global.automapper[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.beginHubOnRoomBegin") global.beginHubOnRoomBegin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.beginStageOnRoomBegin") global.beginStageOnRoomBegin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.bolts") global.bolts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.borderLockBottom") global.borderLockBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.borderLockLeft") global.borderLockLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.borderLockRight") global.borderLockRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.borderLockTop") global.borderLockTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.borderlist") global.borderlist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.bossTextShown") global.bossTextShown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.cachedXView") global.cachedXView[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.cachedYView") global.cachedYView[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.castleStagesBeaten") global.castleStagesBeaten[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.characterSelected") global.characterSelected[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.chargeBar") global.chargeBar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.chargeUpgrade") global.chargeUpgrade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.checkpoint") global.checkpoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.checkpointX") global.checkpointX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.checkpointY") global.checkpointY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.coloredTextOverlaysBlue") global.coloredTextOverlaysBlue[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.coloredTextOverlaysGreen") global.coloredTextOverlaysGreen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.coloredTextOverlaysOpacity") global.coloredTextOverlaysOpacity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.coloredTextOverlaysRed") global.coloredTextOverlaysRed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.consoleColour") global.consoleColour[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.consoleMessage") global.consoleMessage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.consoleN") global.consoleN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.consoleTimer") global.consoleTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.converter") global.converter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.coop") global.coop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.costumeRequirement") global.costumeRequirement[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.damage") global.damage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.damagePopup") global.damagePopup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.deathEffect") global.deathEffect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.debugEnabled") global.debugEnabled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.debugSkipStageMode") global.debugSkipStageMode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.decrementLivesOnRoomEnd") global.decrementLivesOnRoomEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.defaultLives") global.defaultLives[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.difficulty") global.difficulty[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.disableChargeUpgrade") global.disableChargeUpgrade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.disableConverter") global.disableConverter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.disableDropUpgrade") global.disableDropUpgrade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.disableShotUpgrade") global.disableShotUpgrade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.disableSkullAmulet") global.disableSkullAmulet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.disableSturdyHelmet") global.disableSturdyHelmet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODAllStop") global.dll_FMODAllStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerAdd") global.dll_FMODBlockerAdd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerGetEnabled") global.dll_FMODBlockerGetEnabled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerGetStrength") global.dll_FMODBlockerGetStrength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerSet3dOrientation") global.dll_FMODBlockerSet3dOrientation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerSet3dPosition") global.dll_FMODBlockerSet3dPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerSet3dScale") global.dll_FMODBlockerSet3dScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerSetEnabled") global.dll_FMODBlockerSetEnabled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockerSetStrength") global.dll_FMODBlockerSetStrength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockersFree") global.dll_FMODBlockersFree[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODBlockersInit") global.dll_FMODBlockersInit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODCreateSoundFromMicInput") global.dll_FMODCreateSoundFromMicInput[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectFree") global.dll_FMODEffectFree[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetActive") global.dll_FMODEffectGetActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetBypass") global.dll_FMODEffectGetBypass[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetDefaultFr") global.dll_FMODEffectGetDefaultFr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetDefaultPan") global.dll_FMODEffectGetDefaultPan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetDefaultVol") global.dll_FMODEffectGetDefaultVol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetNumParams") global.dll_FMODEffectGetNumParams[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetParamDesc") global.dll_FMODEffectGetParamDesc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetParamLabel") global.dll_FMODEffectGetParamLabel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetParamMax") global.dll_FMODEffectGetParamMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetParamMin") global.dll_FMODEffectGetParamMin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetParamName") global.dll_FMODEffectGetParamName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetParamValue") global.dll_FMODEffectGetParamValue[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetParamValueStr") global.dll_FMODEffectGetParamValueStr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectGetSpeakerActive") global.dll_FMODEffectGetSpeakerActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectReset") global.dll_FMODEffectReset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectSetActive") global.dll_FMODEffectSetActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectSetBypass") global.dll_FMODEffectSetBypass[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectSetDefaultFr") global.dll_FMODEffectSetDefaultFr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectSetDefaultPan") global.dll_FMODEffectSetDefaultPan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectSetDefaultVol") global.dll_FMODEffectSetDefaultVol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectSetParamValue") global.dll_FMODEffectSetParamValue[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEffectSetSpeakerActive") global.dll_FMODEffectSetSpeakerActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODEncryptFile") global.dll_FMODEncryptFile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGetLastError") global.dll_FMODGetLastError[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGetNumInstances") global.dll_FMODGetNumInstances[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGetSnapshotEntry") global.dll_FMODGetSnapshotEntry[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGetSpectrumBuffer") global.dll_FMODGetSpectrumBuffer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGetTagData") global.dll_FMODGetTagData[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGetTagName") global.dll_FMODGetTagName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGetWaveBuffer") global.dll_FMODGetWaveBuffer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupAddEffect") global.dll_FMODGroupAddEffect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetMuted") global.dll_FMODGroupGetMuted[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetPaused") global.dll_FMODGroupGetPaused[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetPitch") global.dll_FMODGroupGetPitch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetSpectrumSnapshot") global.dll_FMODGroupGetSpectrumSnapshot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetSpectrumSnapshot2") global.dll_FMODGroupGetSpectrumSnapshot2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetVolume") global.dll_FMODGroupGetVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetWaveSnapshot") global.dll_FMODGroupGetWaveSnapshot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupGetWaveSnapshot2") global.dll_FMODGroupGetWaveSnapshot2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupSetFrequency") global.dll_FMODGroupSetFrequency[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupSetMuted") global.dll_FMODGroupSetMuted[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupSetPan") global.dll_FMODGroupSetPan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupSetPaused") global.dll_FMODGroupSetPaused[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupSetPitch") global.dll_FMODGroupSetPitch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupSetVolume") global.dll_FMODGroupSetVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODGroupStop") global.dll_FMODGroupStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceAddEffect") global.dll_FMODInstanceAddEffect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceAsyncOK") global.dll_FMODInstanceAsyncOK[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGet3DPanLevel") global.dll_FMODInstanceGet3DPanLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGet3DSpread") global.dll_FMODInstanceGet3DSpread[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetAudibility") global.dll_FMODInstanceGetAudibility[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetFrequency") global.dll_FMODInstanceGetFrequency[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetLoopCount") global.dll_FMODInstanceGetLoopCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetMaxDist") global.dll_FMODInstanceGetMaxDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetMuted") global.dll_FMODInstanceGetMuted[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetNextTag") global.dll_FMODInstanceGetNextTag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetPan") global.dll_FMODInstanceGetPan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetPaused") global.dll_FMODInstanceGetPaused[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetPitch") global.dll_FMODInstanceGetPitch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetPosition") global.dll_FMODInstanceGetPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetSound") global.dll_FMODInstanceGetSound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetSpectrumSnapshot") global.dll_FMODInstanceGetSpectrumSnapshot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetSpectrumSnapshot2") global.dll_FMODInstanceGetSpectrumSnapshot2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetVolume") global.dll_FMODInstanceGetVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetWaveSnapshot") global.dll_FMODInstanceGetWaveSnapshot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceGetWaveSnapshot2") global.dll_FMODInstanceGetWaveSnapshot2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceIsPlaying") global.dll_FMODInstanceIsPlaying[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSet3DPanLevel") global.dll_FMODInstanceSet3DPanLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSet3DSpread") global.dll_FMODInstanceSet3DSpread[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSet3dCone") global.dll_FMODInstanceSet3dCone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSet3dConeOrientation") global.dll_FMODInstanceSet3dConeOrientation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSet3dDopplerMax") global.dll_FMODInstanceSet3dDopplerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSet3dMinMaxDistance") global.dll_FMODInstanceSet3dMinMaxDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSet3dPosition") global.dll_FMODInstanceSet3dPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetFrequency") global.dll_FMODInstanceSetFrequency[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetLoopCount") global.dll_FMODInstanceSetLoopCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetLoopPoints") global.dll_FMODInstanceSetLoopPoints[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetMuted") global.dll_FMODInstanceSetMuted[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetPan") global.dll_FMODInstanceSetPan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetPaused") global.dll_FMODInstanceSetPaused[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetPitch") global.dll_FMODInstanceSetPitch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetPosition") global.dll_FMODInstanceSetPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetSpeakerMix") global.dll_FMODInstanceSetSpeakerMix[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSetVolume") global.dll_FMODInstanceSetVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceSoundGetLength") global.dll_FMODInstanceSoundGetLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODInstanceStop") global.dll_FMODInstanceStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODListenerHearsDistanceOnly") global.dll_FMODListenerHearsDistanceOnly[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODListenerSet3dPosition") global.dll_FMODListenerSet3dPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODListenerSet3dPositionEx") global.dll_FMODListenerSet3dPositionEx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODListenerSetNumber") global.dll_FMODListenerSetNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODMasterSetVolume") global.dll_FMODMasterSetVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODNormalizeSpectrumData") global.dll_FMODNormalizeSpectrumData[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODNormalizeWaveData") global.dll_FMODNormalizeWaveData[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODRecordStart") global.dll_FMODRecordStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODRecordStop") global.dll_FMODRecordStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSetDopplerFPS") global.dll_FMODSetDopplerFPS[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSetPassword") global.dll_FMODSetPassword[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSetWorldScale") global.dll_FMODSetWorldScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSnapShotToDsList") global.dll_FMODSnapShotToDsList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundAdd") global.dll_FMODSoundAdd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundAddAsyncStream") global.dll_FMODSoundAddAsyncStream[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundAddEffect") global.dll_FMODSoundAddEffect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundAsyncReady") global.dll_FMODSoundAsyncReady[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundFree") global.dll_FMODSoundFree[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundGetLength") global.dll_FMODSoundGetLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundGetLoopCount") global.dll_FMODSoundGetLoopCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundGetMaxDist") global.dll_FMODSoundGetMaxDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundGetMaxVolume") global.dll_FMODSoundGetMaxVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundGetMusicChannelVolume") global.dll_FMODSoundGetMusicChannelVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundGetMusicNumChannels") global.dll_FMODSoundGetMusicNumChannels[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundGetNumChannels") global.dll_FMODSoundGetNumChannels[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundInstanciate") global.dll_FMODSoundInstanciate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundIs3d") global.dll_FMODSoundIs3d[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundIsStreamed") global.dll_FMODSoundIsStreamed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundLoop") global.dll_FMODSoundLoop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundLoop3d") global.dll_FMODSoundLoop3d[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundPlay") global.dll_FMODSoundPlay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundPlay3d") global.dll_FMODSoundPlay3d[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSet3dCone") global.dll_FMODSoundSet3dCone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSet3dDopplerMax") global.dll_FMODSoundSet3dDopplerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSet3dMinMaxDistance") global.dll_FMODSoundSet3dMinMaxDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSetEffects") global.dll_FMODSoundSetEffects[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSetGroup") global.dll_FMODSoundSetGroup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSetLoopCount") global.dll_FMODSoundSetLoopCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSetLoopPoints") global.dll_FMODSoundSetLoopPoints[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSetMaxVolume") global.dll_FMODSoundSetMaxVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSoundSetMusicChannelVolume") global.dll_FMODSoundSetMusicChannelVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODSpectrumSetSnapshotType") global.dll_FMODSpectrumSetSnapshotType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODUpdate") global.dll_FMODUpdate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODUpdateTakeOverDone") global.dll_FMODUpdateTakeOverDone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODUpdateTakeOverWhileLocked") global.dll_FMODUpdateTakeOverWhileLocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODfree") global.dll_FMODfree[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dll_FMODinit") global.dll_FMODinit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.downKey") global.downKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.dropUpgrade") global.dropUpgrade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.eTanks") global.eTanks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.eddieisdead") global.eddieisdead[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.elementsCollected") global.elementsCollected[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.enableCharge") global.enableCharge[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.enableSlide") global.enableSlide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.endStageOnRoomEnd") global.endStageOnRoomEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.energyElements") global.energyElements[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.energySaver") global.energySaver[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.escapeBehavior") global.escapeBehavior[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.eventArgs") global.eventArgs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.execute_gml_function_ERR") global.execute_gml_function_ERR[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.factionStance") global.factionStance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.familyFriendlyText") global.familyFriendlyText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.flag") global.flag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.flagParent") global.flagParent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.flashTimer") global.flashTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.font") global.font[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.freeMovement") global.freeMovement[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.frozen") global.frozen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gameSpeed") global.gameSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gameTimer") global.gameTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gml_fn_retval") global.gml_fn_retval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gravityLiftBulletMap") global.gravityLiftBulletMap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gravityLiftLockJumpMap") global.gravityLiftLockJumpMap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gravityLiftLockMap") global.gravityLiftLockMap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gravityLiftXSpeedMap") global.gravityLiftXSpeedMap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.gunshot") global.gunshot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.hasTeleported") global.hasTeleported[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.healthEffect") global.healthEffect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.inGame") global.inGame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.infiniteEnergy") global.infiniteEnergy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.inkSurface") global.inkSurface[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.isInvincible") global.isInvincible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.joystick_jumpKey") global.joystick_jumpKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.joystick_pauseKey") global.joystick_pauseKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.joystick_shootKey") global.joystick_shootKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.joystick_slideKey") global.joystick_slideKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.joystick_weaponSwitchLeftKey") global.joystick_weaponSwitchLeftKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.joystick_weaponSwitchRightKey") global.joystick_weaponSwitchRightKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.jumpKey") global.jumpKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.jumpSound") global.jumpSound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyCoinCollected") global.keyCoinCollected[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyCoinTotal") global.keyCoinTotal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyDown") global.keyDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyDownPressed") global.keyDownPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyJump") global.keyJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyJumpPressed") global.keyJumpPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyLeft") global.keyLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyLeftPressed") global.keyLeftPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyNumber") global.keyNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyPause") global.keyPause[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyPausePressed") global.keyPausePressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyRight") global.keyRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyRightPressed") global.keyRightPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyShoot") global.keyShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyShootPressed") global.keyShootPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keySlide") global.keySlide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keySlidePressed") global.keySlidePressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyUp") global.keyUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyUpPressed") global.keyUpPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyWeaponSwitchLeft") global.keyWeaponSwitchLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyWeaponSwitchLeftPressed") global.keyWeaponSwitchLeftPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyWeaponSwitchRight") global.keyWeaponSwitchRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.keyWeaponSwitchRightPressed") global.keyWeaponSwitchRightPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lastBackground") global.lastBackground[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lastTeleporterX") global.lastTeleporterX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lastTeleporterY") global.lastTeleporterY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.leftKey") global.leftKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelLoop") global.levelLoop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelLoopEnd") global.levelLoopEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelLoopStart") global.levelLoopStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelReward") global.levelReward[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelRunInvalidReason") global.levelRunInvalidReason[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelRunValid") global.levelRunValid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelSong") global.levelSong[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelSongType") global.levelSongType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelTrackNumber") global.levelTrackNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.levelVolume") global.levelVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.leverPropagated") global.leverPropagated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.livesEnabled") global.livesEnabled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.livesRemaining") global.livesRemaining[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockAvailable") global.lockAvailable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockBuster") global.lockBuster[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockPoolAvailable") global.lockPoolAvailable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockPoolLockCount") global.lockPoolLockCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockPoolLockTable") global.lockPoolLockTable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockPoolN") global.lockPoolN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockPoolTombstone") global.lockPoolTombstone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.lockTransition") global.lockTransition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.mTanks") global.mTanks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.maxBolts") global.maxBolts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.maxETanks") global.maxETanks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.maxLives") global.maxLives[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.maxMTanks") global.maxMTanks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.maxWTanks") global.maxWTanks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.mmColor") global.mmColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.musicvolume") global.musicvolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.nesPalette") global.nesPalette[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.newLine") global.newLine[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.nextRoom") global.nextRoom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.outlineCol") global.outlineCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.pauseKey") global.pauseKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.pickupGraphics") global.pickupGraphics[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playerCount") global.playerCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playerFrozen") global.playerFrozen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playerHealth") global.playerHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playerLock") global.playerLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playerProjectileCreator") global.playerProjectileCreator[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playerSprite") global.playerSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playerSpriteMax") global.playerSpriteMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.playingcustommusic") global.playingcustommusic[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.prevXView") global.prevXView[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.prevYView") global.prevYView[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.previousRoom") global.previousRoom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.primaryCol") global.primaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.quadHeight") global.quadHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.quadMarginBottom") global.quadMarginBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.quadMarginTop") global.quadMarginTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.quadWidth") global.quadWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputActive") global.recordInputActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputAmmo") global.recordInputAmmo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputAppendMarker") global.recordInputAppendMarker[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputBegin") global.recordInputBegin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputDeath") global.recordInputDeath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputEnd") global.recordInputEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputFidelity") global.recordInputFidelity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputFidelityMessageBuffer") global.recordInputFidelityMessageBuffer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputFidelityMessageCompare") global.recordInputFidelityMessageCompare[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputFile") global.recordInputFile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputFrame") global.recordInputFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputGravDir") global.recordInputGravDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputGravFactor") global.recordInputGravFactor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputMessage") global.recordInputMessage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputMode") global.recordInputMode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputPlayerHealth") global.recordInputPlayerHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputPlayerX") global.recordInputPlayerX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputPlayerY") global.recordInputPlayerY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputRandomSeed") global.recordInputRandomSeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputRespawnTimer") global.recordInputRespawnTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputReturnRoom") global.recordInputReturnRoom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputRoom") global.recordInputRoom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputSaveData") global.recordInputSaveData[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputScriptOverride") global.recordInputScriptOverride[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputSkipSpawn") global.recordInputSkipSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputWeapon") global.recordInputWeapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputXScale") global.recordInputXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordInputYScale") global.recordInputYScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.recordPlayerCount") global.recordPlayerCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.respawnAllowed") global.respawnAllowed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.respawnAnimation") global.respawnAnimation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.respawnDonateThreshold") global.respawnDonateThreshold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.respawnGravityAngle") global.respawnGravityAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.respawnTime") global.respawnTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.respawnTimeBoss") global.respawnTimeBoss[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.respawnTimer") global.respawnTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.retval") global.retval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.retval_error") global.retval_error[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.retval_exprlen") global.retval_exprlen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.retval_exprval") global.retval_exprval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.rightKey") global.rightKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.roomExternalCache") global.roomExternalCache[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.roomExternalFileName") global.roomExternalFileName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.roomExternalSetupMap") global.roomExternalSetupMap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.roomReturn") global.roomReturn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.roomReturnIsHub") global.roomReturnIsHub[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.roomReturnIsStage") global.roomReturnIsStage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.roomTimer") global.roomTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.saveFile") global.saveFile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.screenHeight") global.screenHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.screenWidth") global.screenWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.screensize") global.screensize[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.secondaryCol") global.secondaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sectionBottom") global.sectionBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sectionLeft") global.sectionLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sectionRight") global.sectionRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sectionTop") global.sectionTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.shakeFactorX") global.shakeFactorX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.shakeFactorY") global.shakeFactorY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.shakeTimer") global.shakeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sheepBlockStack") global.sheepBlockStack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sheepBlockStack_n") global.sheepBlockStack_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.shootKey") global.shootKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.shotUpgrade") global.shotUpgrade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showColoredTextOverlays") global.showColoredTextOverlays[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showColoredTextOverlaysBlue") global.showColoredTextOverlaysBlue[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showColoredTextOverlaysGreen") global.showColoredTextOverlaysGreen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showColoredTextOverlaysOpacity") global.showColoredTextOverlaysOpacity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showColoredTextOverlaysRed") global.showColoredTextOverlaysRed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showControllerOverlay") global.showControllerOverlay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showFPS") global.showFPS[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.showMovingText") global.showMovingText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sinTableID") global.sinTableID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.skullAmulet") global.skullAmulet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sl_error") global.sl_error[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sl_filename") global.sl_filename[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sl_map") global.sl_map[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sl_save") global.sl_save[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sl_varcounter") global.sl_varcounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.slideKey") global.slideKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.songMemory") global.songMemory[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.soundvolume") global.soundvolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.stageStartRoom") global.stageStartRoom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.sturdyHelmet") global.sturdyHelmet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.superArmInterface") global.superArmInterface[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.switchingSections") global.switchingSections[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.telTelWeather") global.telTelWeather[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.teleportSound") global.teleportSound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.teleportX") global.teleportX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.teleportY") global.teleportY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.tempSongData") global.tempSongData[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.tileLayers") global.tileLayers[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.tileLayersN") global.tileLayersN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.timeStopped") global.timeStopped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.totalWeapons") global.totalWeapons[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitSuiteName") global.unitSuiteName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitSuiteScript") global.unitSuiteScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestAbortAll") global.unitTestAbortAll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestAction") global.unitTestAction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestCase") global.unitTestCase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestCaseNames") global.unitTestCaseNames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestCritical") global.unitTestCritical[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestErrors") global.unitTestErrors[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestGlobalErrorSummaryResult") global.unitTestGlobalErrorSummaryResult[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestRandSeed") global.unitTestRandSeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestRun") global.unitTestRun[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestSeedCmp") global.unitTestSeedCmp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestSuiteResults") global.unitTestSuiteResults[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestTestInstance") global.unitTestTestInstance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestWarns") global.unitTestWarns[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.unitTestsRun") global.unitTestsRun[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.upKey") global.upKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.vsync") global.vsync[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.wTanks") global.wTanks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.warningLevel") global.warningLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.waveManWarpLock") global.waveManWarpLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weapon") global.weapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponHotbar") global.weaponHotbar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponID") global.weaponID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponIcon") global.weaponIcon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponLocked") global.weaponLocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponName") global.weaponName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponObject") global.weaponObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponPrimaryColor") global.weaponPrimaryColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponSecondaryColor") global.weaponSecondaryColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponSwitchLeftKey") global.weaponSwitchLeftKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "global.weaponSwitchRightKey") global.weaponSwitchRightKey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "globalDir") globalDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "globalYHighOffset") globalYHighOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "globalYLowOffset") globalYLowOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "globalescapeBehavior") globalescapeBehavior[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gloopLock") gloopLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "go") go[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "goForth") goForth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "goHere") goHere[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "goToMercury") goToMercury[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "goToX") goToX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "goingDown") goingDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "goingUp") goingUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gotomega") gotomega[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "goup") goup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grabable") grabable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grabbedObject") grabbedObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grabbedPlayer") grabbedPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "graceWait") graceWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grav") grav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravDir") gravDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravMultiplier") gravMultiplier[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravPreIce") gravPreIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravStart") gravStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravStr") gravStr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravWater") gravWater[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravfactor") gravfactor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravityDir") gravityDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravityFlip") gravityFlip[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gravitySet") gravitySet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "greenSprite") greenSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gremlinArray") gremlinArray[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gremlinDir") gremlinDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gremlinSpawn") gremlinSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grid") grid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gridWidth") gridWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gridX") gridX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gridY") gridY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grid_height") grid_height[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grid_width") grid_width[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grid_x") grid_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grid_y") grid_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ground") ground[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "groundXDir") groundXDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "groundYDir") groundYDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "growing") growing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "grv") grv[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "gt") gt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "guard") guard[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "guardCancel") guardCancel[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'h'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "h") h[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hacks") hacks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "half") half[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "halfAttack") halfAttack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "halfScreen") halfScreen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hand") hand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hangCountdown") hangCountdown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hardcodeSpeed") hardcodeSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "harmEnemies") harmEnemies[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasAttacked") hasAttacked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasBelt") hasBelt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasBlinked") hasBlinked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasBomb") hasBomb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasBossSpawned") hasBossSpawned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasCannon") hasCannon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasCentaurFlashed") hasCentaurFlashed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasCol") hasCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasController") hasController[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasCostume") hasCostume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasCutter") hasCutter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasDoneGrav") hasDoneGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasEgg") hasEgg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasFired") hasFired[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasGravity") hasGravity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasGuides") hasGuides[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasInit") hasInit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasItem") hasItem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasKnockback") hasKnockback[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasLooped") hasLooped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasParent") hasParent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasPath") hasPath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasPopped") hasPopped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasRock") hasRock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasShell") hasShell[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasShield") hasShield[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasShot") hasShot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasSpawned") hasSpawned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasSwitch") hasSwitch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasSwitched") hasSwitched[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasTarget") hasTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasTriggered") hasTriggered[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasTriggeredFall") hasTriggeredFall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasTriggeredQuake") hasTriggeredQuake[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasTurned") hasTurned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hasWeight") hasWeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "has_fired") has_fired[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "has_honked") has_honked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hashStrSin") hashStrSin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatFrame") hatFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatOffset") hatOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch1") hatch1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch1Health") hatch1Health[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch1IFrames") hatch1IFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch1Index") hatch1Index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch2") hatch2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch2Health") hatch2Health[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch2IFrames") hatch2IFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatch2Index") hatch2Index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hatchIndex") hatchIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "headID") headID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "headShark") headShark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "headSprite") headSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "headUp") headUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "headX") headX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "headerEnd") headerEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "headerString") headerString[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarColorSkip") healthBarColorSkip[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarHealth") healthBarHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarPrimaryColor") healthBarPrimaryColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarSecondaryColor") healthBarSecondaryColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarTimer") healthBarTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarTimerMax") healthBarTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarTimerSpeed") healthBarTimerSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthBarTimerSpeedExtra") healthBarTimerSpeedExtra[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthIndex") healthIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthParent") healthParent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthpoints") healthpoints[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "healthpointsStart") healthpointsStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "heathpointsStart") heathpointsStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "heavy") heavy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "height") height[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hideTimer") hideTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hideWhileHanging") hideWhileHanging[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "high") high[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "highJump") highJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "high_shot_yspeed") high_shot_yspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "higher") higher[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hingeX") hingeX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hingeY") hingeY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitByBear") hitByBear[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitFloor") hitFloor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitInvun") hitInvun[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitLock") hitLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitRoof") hitRoof[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitTime") hitTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitTimer") hitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitWall") hitWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitboxOffset") hitboxOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hitterID") hitterID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hive") hive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hl") hl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hlth") hlth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hmdir") hmdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "holdTime") holdTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "homeX") homeX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "homeY") homeY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "homing") homing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "homingTimer") homingTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "honeyLock") honeyLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hops") hops[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "horM") horM[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "horSpeed") horSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "horVer") horVer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "horizontal") horizontal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "horizontalCollision1") horizontalCollision1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "horizontalCollision2") horizontalCollision2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "horizontalQuickScrollTimer") horizontalQuickScrollTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "host") host[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hotBarArrangeMode") hotBarArrangeMode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hovering") hovering[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hp") hp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hpmax") hpmax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hspeed") hspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "htiles") htiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "hurtMega") hurtMega[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'i'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "i") i[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iD") iD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iFrames") iFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iWantToDie") iWantToDie[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iaction") iaction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iceBlinkTime") iceBlinkTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iceDec") iceDec[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iceDecWalk") iceDecWalk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iceGraphicStyle") iceGraphicStyle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iceMultiplier") iceMultiplier[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "icePhysics") icePhysics[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iceSolid") iceSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iceTimer") iceTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "icedLock") icedLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "icon") icon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iconsXOffset") iconsXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iconsXSpacing") iconsXSpacing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iconsYOffset") iconsYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iconsYSpacing") iconsYSpacing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iconx") iconx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "idleSprite") idleSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "idle_end") idle_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "idle_speed") idle_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "idle_sprite") idle_sprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "idle_start") idle_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ids") ids[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ignore") ignore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ignoreBullet") ignoreBullet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ignoreCollision") ignoreCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ignores_pits") ignores_pits[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iid") iid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageCountDir") imageCountDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageIndex") imageIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageMax") imageMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageNoMin") imageNoMin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageOffser") imageOffser[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageOffset") imageOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imagePhaseDir") imagePhaseDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageReset") imageReset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageSpd") imageSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageSpeed") imageSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageSpeedPreIce") imageSpeedPreIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageTimer") imageTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageTimerEndpoint") imageTimerEndpoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imageTimerMax") imageTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_alpha") image_alpha[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_angle") image_angle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_blend") image_blend[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_index") image_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_single") image_single[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_sped") image_sped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_speed") image_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_xscale") image_xscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "image_yscale") image_yscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "img") img[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgIndex") imgIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgIndex2") imgIndex2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgInterval") imgInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgOffset") imgOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgSpd") imgSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgSpeed") imgSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgTimer") imgTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgadd") imgadd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgalarm") imgalarm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgdelay") imgdelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgs") imgs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgscl") imgscl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgsp") imgsp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgspalarm") imgspalarm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgx") imgx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imgy") imgy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imheight") imheight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "imwidth") imwidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inAir") inAir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inArr") inArr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inQuicksand") inQuicksand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inShell") inShell[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inShop") inShop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inStr") inStr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inWall") inWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inWater") inWater[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "in_pos") in_pos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "increaseAmmo") increaseAmmo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "increaseHealth") increaseHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "increasePID") increasePID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "increaseTimer") increaseTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "increaseWeapon") increaseWeapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "indL") indL[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "indent") indent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "index") index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "indexA") indexA[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "indexB") indexB[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "indexOffset") indexOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "indices") indices[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "indx") indx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "infiniteCrashBombs") infiniteCrashBombs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "infiniteEnergy") infiniteEnergy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "init") init[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initChargeTime") initChargeTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initChargeTimer") initChargeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initImageIndex") initImageIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initStepBoost") initStepBoost[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initStepBoostDir") initStepBoostDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initYspeed") initYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "init_time") init_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initalSpawn") initalSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initialAttack") initialAttack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initialDelay") initialDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initialPattern") initialPattern[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initp") initp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "initxoffset") initxoffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inked") inked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inst") inst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inst_id") inst_id[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inst_restore") inst_restore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inst_restore_n") inst_restore_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "instance") instance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "instance_place_time") instance_place_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "instance_placed_n") instance_placed_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "instantLeave") instantLeave[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "insufficientAmmo") insufficientAmmo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "integrate_shot") integrate_shot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "interactionCache") interactionCache[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "interactionCacheCount") interactionCacheCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "interactionCacheSort") interactionCacheSort[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "interval") interval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introDone") introDone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introFade") introFade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introFakeGrav") introFakeGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introFakeYspeed") introFakeYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introLock") introLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introProp") introProp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introSprite") introSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introTimer") introTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "introType") introType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inverse") inverse[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "invincible") invincible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "inx") inx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iny") iny[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iphase") iphase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "is1Up") is1Up[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isActive") isActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isArray") isArray[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isBlock") isBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isBomb") isBomb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isBouncy") isBouncy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isCharge") isCharge[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isCharging") isCharging[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isController") isController[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isCyclic") isCyclic[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isDancing") isDancing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isDei") isDei[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isDoor") isDoor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isDrop") isDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isDropTimer") isDropTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isEnd") isEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isExternal") isExternal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isFalling") isFalling[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isFight") isFight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isFlying") isFlying[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isFree") isFree[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isFromMiniboss") isFromMiniboss[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isFrozen") isFrozen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isGlobalLocked") isGlobalLocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isGonnaHurt") isGonnaHurt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isGround") isGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isHard") isHard[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isHit") isHit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isHoming") isHoming[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isIntro") isIntro[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isJumping") isJumping[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isLightning") isLightning[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isLine") isLine[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isMaster") isMaster[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isOnGround") isOnGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isPhaseDifferent") isPhaseDifferent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isRandom") isRandom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isShocked") isShocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isShoot") isShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isSlide") isSlide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isSmall") isSmall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isSolid") isSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isSpawned") isSpawned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isStart") isStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isStationary") isStationary[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isStep") isStep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isTargetable") isTargetable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isTile") isTile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isVisible") isVisible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isWave") isWave[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iscl") iscl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "isfree") isfree[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ispushed") ispushed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "item") item[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemCode") itemCode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDescription") itemDescription[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawBottom") itemDrawBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawBoxHeight") itemDrawBoxHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawBoxWidth") itemDrawBoxWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawLeft") itemDrawLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawOffsetX") itemDrawOffsetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawOffsetY") itemDrawOffsetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawRight") itemDrawRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrawTop") itemDrawTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemDrop") itemDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemIcon") itemIcon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemName") itemName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemPrice") itemPrice[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemPurchaseAction") itemPurchaseAction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemScript") itemScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemSpawnOffsetX") itemSpawnOffsetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemSpawnOffsetY") itemSpawnOffsetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itemUnavailable") itemUnavailable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "itext") itext[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ix") ix[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ixs") ixs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ixsc") ixsc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "iy") iy[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'j'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "j") j[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jID") jID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jellyfishTimer") jellyfishTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jetIndex") jetIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jetTimer") jetTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jitter") jitter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jitterFrame") jitterFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jitterTime") jitterTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "joeFrame") joeFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "joystick_connected") joystick_connected[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jp") jp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_center_x") js_center_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_center_y") js_center_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_drag_radius_frac") js_drag_radius_frac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_h") js_h[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_jump") js_jump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_jump_v_dampening") js_jump_v_dampening[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_null_radius_frac") js_null_radius_frac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_shoot_x") js_shoot_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_shoot_y") js_shoot_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "js_v") js_v[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump") jump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpAmount") jumpAmount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpCooldown") jumpCooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpCount") jumpCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpCountMax") jumpCountMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpCounter") jumpCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpCounterMax") jumpCounterMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpDist") jumpDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpDistance") jumpDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpHeight") jumpHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpHeightFor") jumpHeightFor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpPower") jumpPower[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpSpd") jumpSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpSpeed") jumpSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpSpeedWater") jumpSpeedWater[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpTime") jumpTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpTimer") jumpTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpTimes") jumpTimes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpToWall") jumpToWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpToX") jumpToX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpType") jumpType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpTypes") jumpTypes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpWait") jumpWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpWaitTimer") jumpWaitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpXSpd") jumpXSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpXSpeed") jumpXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpY") jumpY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump_count") jump_count[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump_frac") jump_frac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump_speed") jump_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump_sprite") jump_sprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump_start") jump_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump_type") jump_type[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jump_x_offset") jump_x_offset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumped") jumped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumping") jumping[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumps") jumps[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpsIn") jumpsIn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpsMade") jumpsMade[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumpsMax") jumpsMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "jumps_pits") jumps_pits[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "junkBlockSprite") junkBlockSprite[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'k'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "k") k[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "kD") kD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "kF") kF[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "kamapot") kamapot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "kamapotDelay") kamapotDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "kamapotSpeed") kamapotSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "kamegoroDead") kamegoroDead[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "kaonaSize") kaonaSize[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keptXSpd") keptXSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keptYSpeed") keptYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key") key[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyDownHold") keyDownHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyID") keyID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyJumpHold") keyJumpHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyLeftHold") keyLeftHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyPauseHold") keyPauseHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyPressed") keyPressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyRightHold") keyRightHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyShoot") keyShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyShootHold") keyShootHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keySlideHold") keySlideHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyUpHold") keyUpHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyWeaponSwitchLeftHold") keyWeaponSwitchLeftHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyWeaponSwitchRightHold") keyWeaponSwitchRightHold[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_bg") key_bg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_height") key_height[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_left") key_left[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_lookup_x") key_lookup_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_lookup_y") key_lookup_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_top") key_top[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_width") key_width[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_x") key_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "key_y") key_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keyboard_key") keyboard_key[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "keylock") keylock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "killMega") killMega[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "killOverride") killOverride[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "killTimer") killTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "killed") killed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "knockbackTimer") knockbackTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "knocked") knocked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "knuckleDusterPlatform") knuckleDusterPlatform[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "komaeSize") komaeSize[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'l'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "l") l[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lT") lT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "l_side") l_side[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ladder") ladder[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ladderDown") ladderDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ladderXScale") ladderXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "landAnimSpeed") landAnimSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "landTimer") landTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "landingWait") landingWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "landingWaitTimer") landingWaitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lands") lands[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "landtimer") landtimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "landy") landy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "laser") laser[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "laserCount") laserCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "laserFormed") laserFormed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "laserSpeed") laserSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "last") last[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastDrop") lastDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastFrame") lastFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastHeightFrame") lastHeightFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastLocationX") lastLocationX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastLocationY") lastLocationY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastPhase") lastPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastPlayerCount") lastPlayerCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastPlayerX") lastPlayerX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastRail") lastRail[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastShot0") lastShot0[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastShot1") lastShot1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastShot2") lastShot2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastXScale") lastXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastXscale") lastXscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "last_space") last_space[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lastanimation") lastanimation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "launchTimer") launchTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "launchX") launchX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "launchY") launchY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "launched") launched[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lay_time") lay_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lay_timer") lay_timer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "layer") layer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "layerIndex") layerIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "layerOffset") layerOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "layers") layers[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lb") lb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leafTimer") leafTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leaveTime") leaveTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leaving") leaving[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "left") left[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftBound") leftBound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftD") leftD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftHand") leftHand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftLimit") leftLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftReturn") leftReturn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftShark") leftShark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftStuck") leftStuck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftTower") leftTower[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "leftbutton") leftbutton[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "len") len[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lenSQ") lenSQ[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lenght") lenght[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "length") length[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "level") level[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "levelEndScript") levelEndScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "levelReward") levelReward[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "levelStartScript") levelStartScript[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lhand") lhand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lifeTime") lifeTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "liftAccel") liftAccel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "liftOff") liftOff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "liftSpeed") liftSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "light") light[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightFrame") lightFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightImage") lightImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightImg") lightImg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightOffset") lightOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightSource") lightSource[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightSprite") lightSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightTimer") lightTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightingColor") lightingColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightingLevel") lightingLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightingRetain") lightingRetain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightingSemi") lightingSemi[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightingSwitchSpeed") lightingSwitchSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lighting_active") lighting_active[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lighting_semi_desired") lighting_semi_desired[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightsp") lightsp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightt") lightt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lightx") lightx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lighty") lighty[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "limit") limit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "limitX") limitX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "line") line[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "linelength") linelength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "linem") linem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lines") lines[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "linex") linex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "liney") liney[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "list") list[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "livesText") livesText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lmark") lmark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "loadTimer") loadTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "localPlayerLock") localPlayerLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "location") location[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "locationX") locationX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "locationY") locationY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lock") lock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockBuster") lockBuster[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockControls") lockControls[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockID") lockID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockMovement") lockMovement[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockOn") lockOn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockPool") lockPool[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockPoolID") lockPoolID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockToWeapon") lockToWeapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockTransition") lockTransition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockTransitions") lockTransitions[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lockWeapon") lockWeapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "locked") locked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lookFired") lookFired[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lookup") lookup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "loopAnim") loopAnim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "loopCount") loopCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "loopPoint") loopPoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "loopPosition") loopPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "loopTimes") loopTimes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "looped") looped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "loops") loops[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lowGrav") lowGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "low_shot_yspeed") low_shot_yspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lp") lp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lr") lr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lv") lv[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lvi") lvi[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "lx") lx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ly") ly[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'm'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "m") m[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mAngle") mAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mIndx") mIndx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "magnetDir") magnetDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "magnetJunkTarget") magnetJunkTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "magnetPlayerTarget") magnetPlayerTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "magnetState") magnetState[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "magnetizing") magnetizing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mainShot") mainShot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "makeClones") makeClones[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "manualColors") manualColors[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "manualPartnerX") manualPartnerX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "manualPartnerY") manualPartnerY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "map") map[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mapX") mapX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mapY") mapY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mask") mask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mask_index") mask_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "master") master[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "masterPhase") masterPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "masterTimer") masterTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxBlowSpeed") maxBlowSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxClones") maxClones[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxDist") maxDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxEnergy") maxEnergy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxFanOutDistance") maxFanOutDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxHealth") maxHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxIndex") maxIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxLoops") maxLoops[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxRadius") maxRadius[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxSize") maxSize[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxSpd") maxSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxSpeed") maxSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxTarget") maxTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxTellies") maxTellies[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxTimer") maxTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxVspeed") maxVspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxWindSpeed") maxWindSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxX") maxX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxXSpd") maxXSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxY") maxY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxYDelta") maxYDelta[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxYspeed") maxYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "max_alive") max_alive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxi") maxi[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "maxplayers") maxplayers[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mdir") mdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "meg") meg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "megaDir") megaDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "megaX") megaX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "megaman") megaman[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "megax") megax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "megay") megay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "memYspeed") memYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "menuHeight") menuHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "menuWidth") menuWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "message") message[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "messageN") messageN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "messedUp") messedUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "met") met[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "met1") met1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "met2") met2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "met3") met3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "met4") met4[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "metallTimer") metallTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "midD") midD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mid_1") mid_1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mid_2") mid_2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mid_3") mid_3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mid_4") mid_4[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "middlePlatform") middlePlatform[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "middleSprite") middleSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minDist") minDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minDistReject") minDistReject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minId") minId[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minIndex") minIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minVal") minVal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minX") minX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minY") minY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "min_count") min_count[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mini") mini[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minoanID") minoanID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "minusX") minusX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missile") missile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missile1") missile1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missile2") missile2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missile3") missile3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missileArray") missileArray[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missileCol") missileCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missileDrop") missileDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missileID") missileID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missileInterval") missileInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missilesCreated") missilesCreated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missle") missle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "missleDir") missleDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mm") mm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mm1Stun") mm1Stun[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mode") mode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mode_timer") mode_timer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mode_timer_end") mode_timer_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "modi") modi[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mole") mole[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "molelimit") molelimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mountID") mountID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mouthOpen") mouthOpen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveAmmount") moveAmmount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveAmount") moveAmount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveAtSpeed") moveAtSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveCount") moveCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveCounter") moveCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveDecceleration") moveDecceleration[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveDelay") moveDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveDir") moveDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveDist") moveDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveDistX") moveDistX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveDistY") moveDistY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveDistance") moveDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveSpeed") moveSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveSpeedX") moveSpeedX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveSpeedY") moveSpeedY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveSprite") moveSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveTarget") moveTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveTime") moveTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveTimer") moveTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveToLocation") moveToLocation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveToY") moveToY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveTowardsPlayer") moveTowardsPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveType") moveType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveV") moveV[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveWait") moveWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moveY") moveY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "move_distance") move_distance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "move_speed") move_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "move_time") move_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moved") moved[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "movementLock") movementLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "movementXScale") movementXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moves") moves[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "movey") movey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "moving") moving[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "movingPlat") movingPlat[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mp3_1") mp3_1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mrc") mrc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "msg") msg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "msk") msk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mtank") mtank[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mtankPositionX") mtankPositionX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mtankPositionY") mtankPositionY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshotIndex") mugshotIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshotIndexEnd") mugshotIndexEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshotIndexStart") mugshotIndexStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshotSpeed") mugshotSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshot_end") mugshot_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshot_speed") mugshot_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshot_sprite") mugshot_sprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mugshot_start") mugshot_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "multiJumpDashCancel") multiJumpDashCancel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mus") mus[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "music") music[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicLoop") musicLoop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicLoopEndStore") musicLoopEndStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicLoopSecondsEnd") musicLoopSecondsEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicLoopSecondsStart") musicLoopSecondsStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicLoopStartStore") musicLoopStartStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicLoopStore") musicLoopStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicStore") musicStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicTrackNumber") musicTrackNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicTrackNumberStore") musicTrackNumberStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicType") musicType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicTypeStore") musicTypeStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicVolume") musicVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "musicVolumeStore") musicVolumeStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mv") mv[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mview") mview[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mx") mx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "my") my[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myAttack") myAttack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myBG") myBG[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myBall") myBall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myBlock") myBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myBolts") myBolts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myBoulder") myBoulder[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myCloud") myCloud[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myDir") myDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myEnemy") myEnemy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myFlag") myFlag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myGrav") myGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myGravity") myGravity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myGround") myGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myHat") myHat[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myID") myID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myItem") myItem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myKaona") myKaona[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myKomae") myKomae[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myLasers") myLasers[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myLock") myLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myMagnet") myMagnet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myMissile") myMissile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myParent") myParent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myPartner") myPartner[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myPiledan") myPiledan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myPixel") myPixel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myPlatform") myPlatform[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myPlayer") myPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myPrimaryColor") myPrimaryColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myRad") myRad[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myRoom") myRoom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myScore") myScore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mySecondaryColor") mySecondaryColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mySolid") mySolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mySound") mySound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mySpeed") mySpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mySpeedMax") mySpeedMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myTag") myTag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myTile") myTile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myTileDepth") myTileDepth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myTopSpeed") myTopSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myWater") myWater[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myX") myX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myXSpeed") myXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myYSpeed") myYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "my_x") my_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "my_y") my_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mydoor") mydoor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myfuse") myfuse[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mygear") mygear[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mygrav") mygrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myid") myid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myindex") myindex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myinstance") myinstance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mylayer") mylayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myobj") myobj[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mypillar") mypillar[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mypower") mypower[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myroom") myroom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mysolid") mysolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mytext") mytext[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "mytop") mytop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myxspeed") myxspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "myyspeed") myyspeed[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'n'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "n") n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nComplete") nComplete[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "n_connected") n_connected[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "n_tries") n_tries[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "name") name[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nameCol") nameCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nameXOffset") nameXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nameYOffset") nameYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "name_color") name_color[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "names") names[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nangl") nangl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ndmg") ndmg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nearInst") nearInst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nearSolid") nearSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nearest") nearest[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nearest_id") nearest_id[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "negOffset") negOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "negative") negative[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "neverDespawn") neverDespawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newAngle") newAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newControls") newControls[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newDamage") newDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newDir") newDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newDist") newDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newLine") newLine[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newLinePos") newLinePos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newParent") newParent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newShot") newShot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newStage") newStage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newX") newX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newXSpeed") newXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newY") newY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newYSpeed") newYSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newline") newline[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "newlineIndex") newlineIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "next") next[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextAnim") nextAnim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextBoulder") nextBoulder[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextFrameMarker") nextFrameMarker[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextPhase") nextPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextPos") nextPos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextPosOffset") nextPosOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextSet") nextSet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextShark") nextShark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextTarget") nextTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextX") nextX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextXdir") nextXdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextY") nextY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextYdir") nextYdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "next_char") next_char[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextgrav") nextgrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextline") nextline[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nextobjSolid") nextobjSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noCollision") noCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noConsole") noConsole[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noFlicker") noFlicker[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noRain") noRain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noShatter") noShatter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noSlopeConditions") noSlopeConditions[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noSlopeEffect") noSlopeEffect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "noSpeedException") noSpeedException[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nogo") nogo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nonLevels") nonLevels[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nonPreciseMask") nonPreciseMask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "norespawn") norespawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "norm") norm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "normal") normal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "normalSpd") normalSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "notDashing") notDashing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nothingStruck") nothingStruck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "notme") notme[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "npcID") npcID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nrm") nrm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ns") ns[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nsteps") nsteps[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "num") num[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "numA") numA[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "numCur") numCur[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "number") number[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "numberOfRounder") numberOfRounder[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "nutton") nutton[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'o'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "o") o[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "o_event") o_event[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "obj") obj[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objId") objId[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objName") objName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "obj_embed") obj_embed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "obj_embed_n") obj_embed_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "obj_found") obj_found[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "obj_id") obj_id[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "obj_n") obj_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "object") object[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectCheck") objectCheck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectCopy") objectCopy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectIndex") objectIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectName") objectName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectPlace") objectPlace[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectThrown") objectThrown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectToDrop") objectToDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectToSpawn") objectToSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objectToStop") objectToStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "objects") objects[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "obstacleList") obstacleList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "of") of[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offRoof") offRoof[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offYD") offYD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offYU") offYU[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offs") offs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offset") offset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offsetMet") offsetMet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offsetTimer") offsetTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offsetX") offsetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "offsetY") offsetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ogContactDamage") ogContactDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oil") oil[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oilSlider") oilSlider[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oilWalk") oilWalk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "olc") olc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "old") old[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldAttack") oldAttack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldCol") oldCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldLocation") oldLocation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldMask") oldMask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldOption") oldOption[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldPhase") oldPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldShot") oldShot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldTiles") oldTiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldWeapon") oldWeapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldX") oldX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldY") oldY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldYSet") oldYSet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oldmask") oldmask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "on") on[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onBigBubble") onBigBubble[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onBlock") onBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onCeiling") onCeiling[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onFloor") onFloor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onGround") onGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onLimit") onLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onOrOff") onOrOff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onWall") onWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oneShot") oneShot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onlyDamageMines") onlyDamageMines[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onlyDamagePlayer") onlyDamagePlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onlyShiftTiles") onlyShiftTiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "onlyUnlockOnLevelEnd") onlyUnlockOnLevelEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "only_jumps") only_jumps[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ontop") ontop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "op") op[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "open") open[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "opening") opening[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "operand") operand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "opt") opt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option") option[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionCount") optionCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionOffset") optionOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionPos") optionPos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableDescription") optionTableDescription[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableImageBought") optionTableImageBought[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableImageInStock") optionTableImageInStock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableImageIndexBought") optionTableImageIndexBought[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableImageIndexInStock") optionTableImageIndexInStock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableName") optionTableName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableVariable") optionTableVariable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableX") optionTableX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionTableY") optionTableY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionText") optionText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionXDist") optionXDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionXOrigin") optionXOrigin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionYDist") optionYDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionYOrigin") optionYOrigin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option_chosen") option_chosen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option_code_on_talk_end") option_code_on_talk_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option_code_on_talk_start") option_code_on_talk_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option_script_on_talk_end") option_script_on_talk_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option_script_on_talk_start") option_script_on_talk_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option_spoken") option_spoken[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "option_text") option_text[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "options") options[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionsPositionX") optionsPositionX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "optionsPositionY") optionsPositionY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "orbit") orbit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "order") order[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ordr") ordr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "orgID") orgID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "origX") origX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "origY") origY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "origin") origin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "originToBBoxBottom") originToBBoxBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "originToBBoxCenter") originToBBoxCenter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "originToBBoxTop") originToBBoxTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "original") original[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "otherFan") otherFan[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "otherID") otherID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "otherLock") otherLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "otherX") otherX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "othersGrabbed") othersGrabbed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "otherstate") otherstate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "otheruptag") otheruptag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "out") out[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "outtaWaterTimer") outtaWaterTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "overall") overall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "overlapping") overlapping[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "overrideX") overrideX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "overrideY") overrideY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "overwriteAnimation") overwriteAnimation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "owner") owner[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ox") ox[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oy") oy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oy1") oy1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oy2") oy2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "oy3") oy3[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'p'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "p") p[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pDistX") pDistX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pDistY") pDistY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pDst") pDst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pID") pID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pSrc") pSrc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "paletteRefresh") paletteRefresh[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pangle") pangle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "panicTimer") panicTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pao") pao[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "par") par[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "parallaxX") parallaxX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "parallaxY") parallaxY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "paren_match") paren_match[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "parent") parent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "parentID") parentID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "partH") partH[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "partW") partW[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "partX") partX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "partY") partY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "particleSprite") particleSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "partner") partner[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "partnerItemDrop") partnerItemDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "passedTarget") passedTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "path") path[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "path_position") path_position[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "path_speed") path_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pattern") pattern[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pause") pause[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pauseEndStep") pauseEndStep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pauseFrac") pauseFrac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pauseGravity") pauseGravity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pauseLock") pauseLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pausePressed") pausePressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pauseStep") pauseStep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pauseY") pauseY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pc") pc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pcol") pcol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pd") pd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pdA") pdA[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pdB") pdB[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pdist") pdist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pdx") pdx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pdy") pdy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "peakTimer") peakTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "penRate") penRate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "penetrate") penetrate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "penetrateNoDamage") penetrateNoDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "penpen") penpen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "period") period[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "permalock") permalock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "permanent") permanent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "persist") persist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "persistent") persistent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ph") ph[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phase") phase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phaseMultiple") phaseMultiple[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phaseRepeatCount") phaseRepeatCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phaseShieldTimer") phaseShieldTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phaseShieldTimerStart") phaseShieldTimerStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phaseTimer") phaseTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phaseWaitTimer") phaseWaitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phaseWaitTimerStart") phaseWaitTimerStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phasetime") phasetime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phasetimer") phasetimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "phw") phw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "physicsLock") physicsLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pick") pick[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pickup") pickup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pickups") pickups[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pickx") pickx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "picky") picky[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pid") pid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pieceGap") pieceGap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pierces") pierces[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pindx") pindx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pit") pit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pivot") pivot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pivot_index") pivot_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pixelPrecise") pixelPrecise[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pixelsMoved") pixelsMoved[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "place") place[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "place_time") place_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "placed") placed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "placed_instances") placed_instances[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "plantXS") plantXS[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "plat") plat[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platEndX") platEndX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platHeight") platHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platTarget") platTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platformCalc") platformCalc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platformOffset") platformOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platformSpeed") platformSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platformSprite") platformSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platv") platv[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platx") platx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "platy") platy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "play") play[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playLandSound") playLandSound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playSound") playSound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playUFOSounds") playUFOSounds[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playedSFX") playedSFX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playedSound") playedSound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "player") player[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerDir") playerDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerID") playerID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerMet") playerMet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerMod") playerMod[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerOnTank") playerOnTank[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerProjectiles") playerProjectiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerRef") playerRef[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerXDistance") playerXDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playerYDistance") playerYDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "player_costume_id") player_costume_id[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "player_yspeed") player_yspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "players") players[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playersXOffset") playersXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playersXSpacing") playersXSpacing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playersYOffset") playersYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "playing") playing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "plt") plt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "plzTarget") plzTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pmi") pmi[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pole") pole[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "poolHasLock") poolHasLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pop") pop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popDelay") popDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popDelayStart") popDelayStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popEntity") popEntity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popIndex") popIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popList") popList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popN") popN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popTime") popTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popUporDown") popUporDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popX") popX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popY") popY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "popped") popped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "poppedUp") poppedUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pos") pos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "posCount") posCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "posOffset") posOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "posT") posT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "posX") posX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "posY") posY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pos_n") pos_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pos_x") pos_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pos_y") pos_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pose") pose[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "poseImgSpeed") poseImgSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "positive") positive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "postRotate") postRotate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "powerSource") powerSource[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prc") prc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pre") pre[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preDSpikes") preDSpikes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preDir") preDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preDirection") preDirection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preGround") preGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preImgSpeed") preImgSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preMsk") preMsk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preSpeed") preSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preTZ") preTZ[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preWater") preWater[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preX") preX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preY") preY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pre_hsp") pre_hsp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pre_isp") pre_isp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pre_spe") pre_spe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pre_vsp") pre_vsp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prec") prec[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preciseMask") preciseMask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "predir") predir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pref_xspeed") pref_xspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preferredDistance") preferredDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pregrav") pregrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "premask") premask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prepareCollision") prepareCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preplace_time") preplace_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prepremask") prepremask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prespace") prespace[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "press") press[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pressUp") pressUp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pressed") pressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prev") prev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevAnim") prevAnim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevAnimFrame") prevAnimFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevBoulder") prevBoulder[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevCanShoot") prevCanShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevCollision") prevCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevDead") prevDead[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevDepth") prevDepth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevDir") prevDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevDrop") prevDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevEndTarget") prevEndTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevFrame") prevFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevGrav") prevGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevGravDir") prevGravDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevGround") prevGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevHealth") prevHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevMoveTarget") prevMoveTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevP0Timer") prevP0Timer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevPhase") prevPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevRail") prevRail[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevSplit") prevSplit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevStartTarget") prevStartTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevVelx") prevVelx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevVely") prevVely[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevWaitTime") prevWaitTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevWeather") prevWeather[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevX") prevX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevXScale") prevXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevXSpeed") prevXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevXView") prevXView[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevXdir") prevXdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevXspeed") prevXspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevY") prevY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevYdir") prevYdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevYspeed") prevYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prev_checkpoint") prev_checkpoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prev_index") prev_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prev_state") prev_state[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preventDeath") preventDeath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preventFiring") preventFiring[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preventFiringMax") preventFiringMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preventRepeating") preventRepeating[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "previousShotType") previousShotType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevx") prevx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prevy") prevy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prexs") prexs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prexscale") prexscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prey") prey[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preys") preys[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "preyy") preyy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "priceTable") priceTable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "priceXOffset") priceXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "priceYOffset") priceYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "primarycol") primarycol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "priority") priority[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "proceed") proceed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "progress") progress[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "proj") proj[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "projectile") projectile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "projectileDirection") projectileDirection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "projectileX") projectileX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "projectileY") projectileY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_background") prop_background[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_bg_n") prop_bg_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_colour") prop_colour[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_copy") prop_copy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_copy_n") prop_copy_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_height") prop_height[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_inst") prop_inst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_inst_n") prop_inst_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_tile") prop_tile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_tile_n") prop_tile_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prop_width") prop_width[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "propagated") propagated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "propellerStatus") propellerStatus[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "propellerTimer") propellerTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "protoLock") protoLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "protoShieldCreate") protoShieldCreate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "protoShieldCreated") protoShieldCreated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "prvY") prvY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "psign") psign[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pt") pt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pullDir") pullDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pullDuration") pullDuration[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pullDurationExtra") pullDurationExtra[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pullSpd") pullSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pullTimer") pullTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pushList") pushList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pushed") pushed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pushout") pushout[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pux") pux[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "puy") puy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "puyoBrickIndex") puyoBrickIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "puyoBrickList") puyoBrickList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "puyoBrickN") puyoBrickN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "puyoBrickPriorities") puyoBrickPriorities[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pxd") pxd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pxs") pxs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pyd") pyd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "pys") pys[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'q'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "q") q[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "q1Pos") q1Pos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "q2Pos") q2Pos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quarterAttack") quarterAttack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quickScrollStutter") quickScrollStutter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quickScrollTimer") quickScrollTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quickScrollWait") quickScrollWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quickSpawn") quickSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quickWeaponScrollTimer") quickWeaponScrollTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quit") quit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "quotchar") quotchar[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'r'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "r") r[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rAng") rAng[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "r_side") r_side[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rad") rad[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "radical") radical[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "radius") radius[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "radiusSquare") radiusSquare[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rainSuns") rainSuns[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "raining") raining[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "raiseTimer") raiseTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rand") rand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randBy") randBy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randItem") randItem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randList") randList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randitem") randitem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randomList") randomList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randomMissiles") randomMissiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randomOffset") randomOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randomSpawn") randomSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "randomiser") randomiser[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "range") range[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rangeActive") rangeActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rb") rb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rdir") rdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reDirTimer") reDirTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reac") reac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reactTrigger") reactTrigger[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "readableXAngle") readableXAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "readyIndicator") readyIndicator[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "readyText") readyText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "readyTimer") readyTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "readyToSwitch") readyToSwitch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "realAngle") realAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "realContactDamage") realContactDamage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "realX") realX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "realXSpeed") realXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "realY") realY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rebuildTimerMax") rebuildTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "recoil") recoil[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "recurseDepth") recurseDepth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "redSprite") redSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "redetectRoof") redetectRoof[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "redetectWall") redetectWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "redo") redo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ref") ref[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "refX") refX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "refY") refY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reflectProjectiles") reflectProjectiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reflectable") reflectable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "refs") refs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "regionHeight") regionHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "regionLeft") regionLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "regionTop") regionTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "regionWidth") regionWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reimg") reimg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "release") release[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "remaining") remaining[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "remask") remask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rememberDepth") rememberDepth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "removed") removed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "repeatAmount") repeatAmount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "repeatIsHigh") repeatIsHigh[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "repeatedCounter") repeatedCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resawn") resawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rescursiveExplosion") rescursiveExplosion[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reset") reset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetAngle") resetAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetCooldown") resetCooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetDelay") resetDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetDepth") resetDepth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetDir") resetDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetExtraBirds") resetExtraBirds[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetGrav") resetGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetMe") resetMe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetSpriteChange") resetSpriteChange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetWeapon") resetWeapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetX") resetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resetY") resetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resolid") resolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "resourceType") resourceType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "respawn") respawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "respawnAnimation") respawnAnimation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "respawnRange") respawnRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "respawn_health") respawn_health[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "respawnupondeath") respawnupondeath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rest") rest[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "restX") restX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "restore") restore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "restoreMusic") restoreMusic[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "restoreObjects") restoreObjects[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "restore_tile") restore_tile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "restore_tile_n") restore_tile_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "result") result[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ret") ret[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "retreatSpeed") retreatSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "retryConfirm") retryConfirm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "returnArray") returnArray[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "returnHere") returnHere[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "returnTimer") returnTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "returnToHub") returnToHub[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rev") rev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reveal") reveal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "revealed") revealed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "revealers") revealers[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "revealersN") revealersN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reverse") reverse[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reversePath") reversePath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reward") reward[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rewardN") rewardN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rewardText") rewardText[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rewardTimer") rewardTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rexsc") rexsc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "reysc") reysc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rhand") rhand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rideFrame") rideFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rider") rider[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "riderPhysicsAllowed") riderPhysicsAllowed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "right") right[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightBound") rightBound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightD") rightD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightHand") rightHand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightLimit") rightLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightShark") rightShark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightStuck") rightStuck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightTower") rightTower[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rightbutton") rightbutton[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ring") ring[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rippleAnimationInterval") rippleAnimationInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rippleAnimationSprite") rippleAnimationSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rippleN") rippleN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rippleTime") rippleTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rippleX") rippleX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rippleXScale") rippleXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rippleY") rippleY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rise") rise[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "riseAndFallWait") riseAndFallWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rm") rm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rmExt") rmExt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rmUnitTestRecordBasic") rmUnitTestRecordBasic[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rn") rn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rnd") rnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rng") rng[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rock") rock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rockDrop") rockDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rockPrimaryCol") rockPrimaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rockSecondaryCol") rockSecondaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rollerFrame") rollerFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "room") room[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "roomInternalName") roomInternalName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "room_speed") room_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "roomlist") roomlist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "roomnames") roomnames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotDir") rotDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateAccel") rotateAccel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateChange") rotateChange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateDir") rotateDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateEndRange") rotateEndRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateEndRangeTurn") rotateEndRangeTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotatePause") rotatePause[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateSpd") rotateSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateSpeed") rotateSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateStartDir") rotateStartDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateStartRange") rotateStartRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotateStartRangeTurn") rotateStartRangeTurn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotationSpeed") rotationSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotationTimer") rotationTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rotorTimer") rotorTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "roundAlt") roundAlt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "roundedLightingLevel") roundedLightingLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rounder") rounder[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "route") route[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "route_combined") route_combined[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "route_progress") route_progress[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "route_tile") route_tile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "route_tile_n") route_tile_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rpts") rpts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rr") rr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rubble") rubble[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "runCycleBack") runCycleBack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "runSpd") runSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "runSpeed") runSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "runTests") runTests[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "run_speed") run_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "run_time") run_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rushJetLock") rushJetLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rushPrimaryCol") rushPrimaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rushSecondaryCol") rushSecondaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rval") rval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "rx") rx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ry") ry[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 's'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "s") s[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sB") sB[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sL") sL[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sLength") sLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sR") sR[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sT") sT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "safeTimer") safeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "safeToAdjust") safeToAdjust[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "safety") safety[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sakugarnePrimaryCol") sakugarnePrimaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sakugarneSecondaryCol") sakugarneSecondaryCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sample_rate") sample_rate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sand") sand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sandWidth") sandWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sandstormed") sandstormed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "saveFrame") saveFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "saveTimer") saveTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "saveXSpeed") saveXSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "savedXspeed") savedXspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "savedYspeed") savedYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "savedgrav") savedgrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scaleWall") scaleWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scaleX") scaleX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scalegrav") scalegrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scalespeed") scalespeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scanned") scanned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scc") scc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scol") scol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "screenFixSpeed") screenFixSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "screenMargin") screenMargin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "screenSpeed") screenSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "screenX") screenX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "screenYBottom") screenYBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "screenshotNum") screenshotNum[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "screenshotTimer") screenshotTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "script") script[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "script_on_talk_end") script_on_talk_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "script_on_talk_start") script_on_talk_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scroll") scroll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "scrollX") scrollX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sd") sd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "searchlight") searchlight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "searchyImage") searchyImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "secX") secX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "secY") secY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sec_left") sec_left[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sec_right") sec_right[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "secondPlatform") secondPlatform[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "secondSlideMask") secondSlideMask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "secondarycol") secondarycol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionArea") sectionArea[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionBottom") sectionBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionHeight") sectionHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionLeft") sectionLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionRight") sectionRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionSurface") sectionSurface[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionSurfaceMask") sectionSurfaceMask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionTop") sectionTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sectionWidth") sectionWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "segmentCount") segmentCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "segmentLimit") segmentLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "segmentRange") segmentRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "select") select[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "selectFlash") selectFlash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "selectTime") selectTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "selected") selected[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "selectedCharacter") selectedCharacter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "selection") selection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "selectionCount") selectionCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "setCamera") setCamera[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "setMega") setMega[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "setSide") setSide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "setX") setX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "setY") setY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "setfrozen") setfrozen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "settingTransplant") settingTransplant[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "settle_dist") settle_dist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "setup") setup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sfc") sfc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sfcx") sfcx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sfcy") sfcy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sfx") sfx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sfxloop") sfxloop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sg") sg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sgn") sgn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shImg") shImg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shT") shT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shadowClones") shadowClones[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shake") shake[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shakeDir") shakeDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shakeHorizontal") shakeHorizontal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shakeSpeed") shakeSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shakeTime") shakeTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shakeTimer") shakeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shakeVertical") shakeVertical[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shaketimer") shaketimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shardTime") shardTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shards") shards[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shardsCreated") shardsCreated[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shareMode") shareMode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sheetX") sheetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sheetY") sheetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shell") shell[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shellTimer") shellTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shield") shield[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shieldDPS") shieldDPS[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shieldDamageCount") shieldDamageCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shielded") shielded[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shift") shift[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shiftDist") shiftDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shiftEdgeHorizontal") shiftEdgeHorizontal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shiftEdgeVertical") shiftEdgeVertical[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shiftTime") shiftTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shiftVisible") shiftVisible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shockLock") shockLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shockedTime") shockedTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shoot") shoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootAfter") shootAfter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootAmount") shootAmount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootAmountMax") shootAmountMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootAngle") shootAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootCooldown") shootCooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootCount") shootCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootCountMax") shootCountMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootCounter") shootCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootDelay") shootDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootEnd") shootEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootFrame") shootFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootID") shootID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootImage") shootImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootLimit") shootLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootLock") shootLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootMax") shootMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootPattern") shootPattern[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootStandStillLock") shootStandStillLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTime") shootTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTimer") shootTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTimer1") shootTimer1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTimer2") shootTimer2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTimerInterval") shootTimerInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTimerInterval2") shootTimerInterval2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTimerMax") shootTimerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTimerStart") shootTimerStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootTotal") shootTotal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootWait") shootWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootWaitTimer") shootWaitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootWaitTimerStart") shootWaitTimerStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootY") shootY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shootYOffset") shootYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shoot_time") shoot_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shooter") shooter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shooting") shooting[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shooting2") shooting2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shoottimer") shoottimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shot") shot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shot1") shot1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shot2") shot2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shot3") shot3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shot4") shot4[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotCharge") shotCharge[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotCount") shotCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotDir") shotDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotIndex") shotIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotLimit") shotLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotMax") shotMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotTimer") shotTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotType") shotType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotX") shotX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotY") shotY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shot_xspeed") shot_xspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shots") shots[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotsFired") shotsFired[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotsLeft") shotsLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shotsToFire") shotsToFire[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "showArrow") showArrow[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "showDuringReady") showDuringReady[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "showReady") showReady[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "showarrow") showarrow[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "showhealth") showhealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shownumber") shownumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "showtext") showtext[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "shuntedIntoRoof") shuntedIntoRoof[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "si") si[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "side") side[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sideShot") sideShot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "siloIndex") siloIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "simjump") simjump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "simshot") simshot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sinCounter") sinCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sinTableFile") sinTableFile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sinTimer") sinTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sinY") sinY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sinc") sinc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sineCounter") sineCounter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sineCounter2") sineCounter2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sineWave") sineWave[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "singleTrigger") singleTrigger[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sink") sink[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sinkin") sinkin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sint") sint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sinx") sinx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "size") size[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skewerPhase") skewerPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skip") skip[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skipCount") skipCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skipDraw") skipDraw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skipStop") skipStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skipbuffer") skipbuffer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skipped") skipped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skitime") skitime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "skullHeight") skullHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slamTimer") slamTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slash") slash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slashLock") slashLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sld") sld[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sledRef") sledRef[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sleds") sleds[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slide") slide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slideChargeLock") slideChargeLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slideFrames") slideFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slideLock") slideLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slideSpeed") slideSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slideTimer") slideTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slide_frac") slide_frac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slowSpeed") slowSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slowdeath_timer") slowdeath_timer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "slp") slp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "smallBubbleTimer") smallBubbleTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "smallJumpHeight") smallJumpHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "smallJumps") smallJumps[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "smg") smg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "smokeTimer") smokeTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "snakeBoss") snakeBoss[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "snap") snap[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "snaptogrid") snaptogrid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "snd_queue") snd_queue[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "snowSource") snowSource[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "solid") solid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "solidBlock") solidBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "solidList") solidList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "solidPreIce") solidPreIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "solids") solids[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "songLength") songLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "songVolume") songVolume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "song_tracks") song_tracks[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "song_voices") song_voices[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sound") sound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "soundEffect") soundEffect[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "soundPlay") soundPlay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sound_index") sound_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sourceX") sourceX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sourceY") sourceY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sp") sp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sp1") sp1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sp2") sp2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spSolid") spSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "space") space[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spacing") spacing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spadd") spadd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spark") spark[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sparkblock") sparkblock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sparkindex") sparkindex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sparkleTimer") sparkleTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sparkles") sparkles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sparkletimer") sparkletimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawn") spawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnAfter") spawnAfter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnAlpha") spawnAlpha[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnConditionNegate") spawnConditionNegate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnDelay") spawnDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnDelayMax") spawnDelayMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnDensity") spawnDensity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnEgg") spawnEgg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnEggReset") spawnEggReset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnEnabled") spawnEnabled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnFire") spawnFire[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnHead") spawnHead[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnHeadReset") spawnHeadReset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnHeightOffset") spawnHeightOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnID") spawnID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnList") spawnList[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnMax") spawnMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnN") spawnN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnOffset") spawnOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnRange") spawnRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnSize") spawnSize[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnTimer") spawnTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnWait") spawnWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnX") spawnX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnXOffset") spawnXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnYOffset") spawnYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawn_interval") spawn_interval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawn_timer") spawn_timer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawn_x") spawn_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawn_y") spawn_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawndelay") spawndelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawned") spawned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawnedCount") spawnedCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawner") spawner[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spawntime") spawntime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spcount") spcount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spd") spd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spdB") spdB[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spdF") spdF[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spdY") spdY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spear") spear[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "specialDamageValues") specialDamageValues[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "specialDamageValuesTotal") specialDamageValuesTotal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "specialObjects") specialObjects[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "specialShop") specialShop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speed") speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speed1") speed1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speed2") speed2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedExtendBegin") speedExtendBegin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedExtendEnd") speedExtendEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedLimit") speedLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedMultiplier") speedMultiplier[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedRestore") speedRestore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedRetractBegin") speedRetractBegin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedRetractEnd") speedRetractEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedSet") speedSet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "speedToMove") speedToMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spike") spike[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spinDir") spinDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spinFrame") spinFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spinMod") spinMod[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spinRate") spinRate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spinSpeed") spinSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spinTimer") spinTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spineKiller") spineKiller[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spinesToKill") spinesToKill[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spitSpeed") spitSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spl") spl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "splash") splash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "split") split[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "splitWithSpawn") splitWithSpawn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "split_dist") split_dist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "split_dist_x") split_dist_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "split_dist_y") split_dist_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "split_jump_x") split_jump_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "split_jump_y") split_jump_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "split_n") split_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spot") spot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spr") spr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprHeight") sprHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprLeft") sprLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprTop_") sprTop_[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprWidth") sprWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spreadAttack") spreadAttack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spreadYspeed") spreadYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "springTimer") springTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprite") sprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteAlt") spriteAlt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteBack") spriteBack[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteFrame") spriteFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteHeight") spriteHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteIDX") spriteIDX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteIDY") spriteIDY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteIndexReset") spriteIndexReset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteJump") spriteJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteLoopEnd") spriteLoopEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteLoopID") spriteLoopID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteLoopPoint") spriteLoopPoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteLoopSpeed") spriteLoopSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteLoopStart") spriteLoopStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteOffset") spriteOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteRun") spriteRun[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteShoot") spriteShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteStand") spriteStand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteTimer") spriteTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteWidth") spriteWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteX") spriteX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteXOffset") spriteXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteY") spriteY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spriteYOffset") spriteYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprite_index") sprite_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprites") sprites[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sprx") sprx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "spry") spry[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sq") sq[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "squareSize") squareSize[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sr") sr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "srcX") srcX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "srcY") srcY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "st") st[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stackRetValExprVal") stackRetValExprVal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stackRetValExprlen") stackRetValExprlen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageBeaten") stageBeaten[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageBossIntroSpeed") stageBossIntroSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageBossIntroSprite") stageBossIntroSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageBossJumpIndex") stageBossJumpIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageBossJumpSprite") stageBossJumpSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageBossObject") stageBossObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageBossObjectIntroType") stageBossObjectIntroType[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageIcon") stageIcon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageLock") stageLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageName") stageName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageRoom") stageRoom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageTextXOffset") stageTextXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stageTextYOffset") stageTextYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "standSpeed") standSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "standardPhysics") standardPhysics[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "star") star[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "starbg") starbg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "starshift") starshift[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "starspeed") starspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "start") start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startAngle") startAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startCheck") startCheck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startDir") startDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startDirection") startDirection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startDistance") startDistance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startFacingPlayer") startFacingPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startFight") startFight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startFiring") startFiring[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startFull") startFull[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startHigh") startHigh[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startHops") startHops[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startIntro") startIntro[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startLeftPos") startLeftPos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startLen") startLen[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startMode") startMode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startMoving") startMoving[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startPhase") startPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startRef") startRef[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startRightPos") startRightPos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startSpeed") startSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startTarget") startTarget[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startTime") startTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startTimer") startTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startWait") startWait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startWaitTimer") startWaitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startWindAccel") startWindAccel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startWindSpeed") startWindSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startXDir") startXDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startXScale") startXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startXscale") startXscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startXspeed") startXspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startY") startY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startYSet") startYSet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startYscale") startYscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startYspeed") startYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "started") started[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "starterBomb") starterBomb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "starterBombX") starterBombX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "starterBombY") starterBombY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startingDirection") startingDirection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startingRotateSpeed") startingRotateSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startingY") startingY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startup") startup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "startupTime") startupTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "starty") starty[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "state") state[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stateTimer") stateTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "staticImgIndex") staticImgIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "staticImgSpd") staticImgSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "status") status[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusCanClimb") statusCanClimb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusCanJump") statusCanJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusCanShoot") statusCanShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusCanSlide") statusCanSlide[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusChangedJump") statusChangedJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusChangedWalk") statusChangedWalk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusJumpSpeed") statusJumpSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusObject") statusObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusOnIce") statusOnIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusSliding") statusSliding[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "statusWalkSpeed") statusWalkSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stay") stay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stayActive") stayActive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "step") step[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stepFrames") stepFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stepInit") stepInit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stepSpeed") stepSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stepTimer") stepTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stepend") stepend[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stop") stop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopAtSolid") stopAtSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopDist") stopDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopHere") stopHere[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopOnFlash") stopOnFlash[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopRange") stopRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopTimer") stopTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopX") stopX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopXScale") stopXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopYScale") stopYScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopit") stopit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stopped") stopped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storageObjID") storageObjID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "store0ID") store0ID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeDir") storeDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeDirection") storeDirection[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeID") storeID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeImageIndex") storeImageIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeJumpSpeed") storeJumpSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeMCol") storeMCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeMetVal") storeMetVal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeNum") storeNum[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeSpd") storeSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeSpeed") storeSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeSprite") storeSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeWalkSpeed") storeWalkSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeX") storeX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeXOffset") storeXOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeXScale") storeXScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeY") storeY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeYOffset") storeYOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storeYScale") storeYScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "storealpha") storealpha[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stormdelay") stormdelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "str") str[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "strInit") strInit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "strMMX") strMMX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "strMMY") strMMY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stretchX") stretchX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stretchY") stretchY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "strict") strict[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "strictPoolCheck") strictPoolCheck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "strpos") strpos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stunLock") stunLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stunLockP") stunLockP[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stunTime") stunTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "stunTimer") stunTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "style") style[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subEvent") subEvent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subGroup") subGroup[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subPhase") subPhase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subX") subX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subY") subY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subYspeed") subYspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subimage") subimage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subimg") subimg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "substitution") substitution[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "substr") substr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "subtext") subtext[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "success") success[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "succframe") succframe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "succx") succx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "succy") succy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "suckSpeed") suckSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "suckTimer") suckTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "suiteBegin") suiteBegin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "suiteName") suiteName[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "suiteResult") suiteResult[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sunLevel") sunLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sunY") sunY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmDeathOnDrop") superArmDeathOnDrop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmDesiredX") superArmDesiredX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmDesiredY") superArmDesiredY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmFlashInterval") superArmFlashInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmFlashOwner") superArmFlashOwner[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmFlashTimer") superArmFlashTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmHeldObject") superArmHeldObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmHoldOwner") superArmHoldOwner[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmPreBlockCollision") superArmPreBlockCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmPreCanHit") superArmPreCanHit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmPreGrav") superArmPreGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmPreIsSolid") superArmPreIsSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmSquirmTimer") superArmSquirmTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "superArmThrown") superArmThrown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "surf") surf[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "surface") surface[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sview") sview[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sw") sw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "swapped") swapped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "swimSprite") swimSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "swingCooldown") swingCooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "switchSprites") switchSprites[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "swooceIn") swooceIn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "swoop") swoop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sx") sx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sy") sy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "syncIFrames") syncIFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "sz") sz[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 't'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "t") t[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tT") tT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_grav") t_grav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_impact_x") t_impact_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_impact_y") t_impact_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_new_xspeed") t_new_xspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_spawn_x") t_spawn_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_spawn_y") t_spawn_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_speed_limit") t_speed_limit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_y") t_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_yprev") t_yprev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "t_yspeed") t_yspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tackleFire") tackleFire[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tackleFireFlightTime") tackleFireFlightTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tackleFireInterval") tackleFireInterval[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tackleFireN") tackleFireN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tackleFireWarmupTime") tackleFireWarmupTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tag") tag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tail") tail[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tail0Length") tail0Length[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tail30Length") tail30Length[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tail45Length") tail45Length[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tailIndex") tailIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tailTimer") tailTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tailWag") tailWag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "talk_distance") talk_distance[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "talk_end") talk_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "talk_speed") talk_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "talk_sprite") talk_sprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "talk_start") talk_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "talkable") talkable[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tanspeed") tanspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tarX") tarX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targX") targX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targY") targY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "target") target[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetBolts") targetBolts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetCID") targetCID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetHasGround") targetHasGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetLeft") targetLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetMode") targetMode[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetPID") targetPID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetPlayer") targetPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetX") targetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetY") targetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "target_x") target_x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "target_y") target_y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "targetsToIgnore") targetsToIgnore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "task") task[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tauntCount") tauntCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tb") tb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "td") td[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tel") tel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportImg") teleportImg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportIndex") teleportIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportLock") teleportLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportOnce") teleportOnce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportSakugarne") teleportSakugarne[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportTimer") teleportTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportX") teleportX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleportY") teleportY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "teleporting") teleporting[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tempHand") tempHand[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tempNear") tempNear[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "test") test[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "testAngle") testAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "testResultsFile") testResultsFile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "testSuiteCurrent") testSuiteCurrent[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "testSuiteN") testSuiteN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "testSuiteSet") testSuiteSet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "testingBegin") testingBegin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tetherSpacing") tetherSpacing[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "text") text[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "textLength") textLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "textTick") textTick[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "textTimer") textTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "textlength") textlength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tgt") tgt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tgx") tgx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "th") th[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "thDst") thDst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "thSrc") thSrc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "that") that[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "theirX") theirX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "theta") theta[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "throwRange") throwRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "throwTimer") throwTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "thrown") thrown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "thrownSign") thrownSign[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tid") tid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tid_all") tid_all[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tid_all_n") tid_all_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tid_n") tid_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile") tile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileBG") tileBG[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileBackground") tileBackground[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileCheckEnd") tileCheckEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileCheckStart") tileCheckStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileChild") tileChild[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileCount") tileCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileDistanceCheck") tileDistanceCheck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileHeight") tileHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileID") tileID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileIn") tileIn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileLayer") tileLayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileLeft") tileLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileN") tileN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileNumber") tileNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileOffset") tileOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileOffsetX") tileOffsetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileOffsetY") tileOffsetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileSurface") tileSurface[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileTop") tileTop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileTotal") tileTotal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileWidth") tileWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileX") tileX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tileY") tileY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_bg") tile_bg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_depth") tile_depth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_h") tile_h[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_height") tile_height[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_layer") tile_layer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_left") tile_left[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_list") tile_list[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_split_time") tile_split_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_top") tile_top[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_w") tile_w[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tile_width") tile_width[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tiles") tiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "time") time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeOut") timeOut[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeRestExtend") timeRestExtend[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeRestRetract") timeRestRetract[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeSlow") timeSlow[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeStopLock") timeStopLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeToJump") timeToJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeUntilDeath") timeUntilDeath[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timer") timer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerAdd") timerAdd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerEnd") timerEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerInitial") timerInitial[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerMax") timerMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerN") timerN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerReset") timerReset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerShoot") timerShoot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerWarning") timerWarning[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timeri") timeri[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timerstart") timerstart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timesFired") timesFired[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timesMoved") timesMoved[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timescale") timescale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "timezone") timezone[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tl") tl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tmp") tmp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tmpTimer") tmpTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "toWall") toWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "toggle") toggle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tokElse") tokElse[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "token") token[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "top") top[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "topLock") topLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "topSolid") topSolid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "topblock") topblock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tornado") tornado[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "total") total[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "totalChange") totalChange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "totalHealth") totalHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "totalPickups") totalPickups[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "totalTimer") totalTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "touchblock") touchblock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "touched") touched[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "touchedStopper") touchedStopper[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "touching") touching[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "touchingPlayer") touchingPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "towerBlock") towerBlock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "toxin") toxin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "toxinTimer") toxinTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tpk") tpk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tr") tr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trackNumber") trackNumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trackRange") trackRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trackStop") trackStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "track_number") track_number[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trailTimer") trailTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trainlength") trainlength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "transition_anim") transition_anim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "travel") travel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "travelSpeed") travelSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trigBlob") trigBlob[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trigWall") trigWall[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "triggerDestroy") triggerDestroy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "triggerPlayer") triggerPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "triggered") triggered[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trim") trim[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "truckSpeed") truckSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trueBottom") trueBottom[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trueGrav") trueGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trueHeight") trueHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trueRight") trueRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trueWidth") trueWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trueX") trueX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "trueY") trueY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ts") ts[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tsrc") tsrc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tugDefer") tugDefer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tugDist") tugDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tugLock") tugLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tugSpeed") tugSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turn") turn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnAfter") turnAfter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnAround") turnAround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnAroundBrightEyes") turnAroundBrightEyes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnAroundDelay") turnAroundDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnAroundOffset") turnAroundOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnAroundWaitDiff") turnAroundWaitDiff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnCheck") turnCheck[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnDelay") turnDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnOffset") turnOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnRange") turnRange[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnRoundLeft") turnRoundLeft[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnRoundLong") turnRoundLong[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnRoundRight") turnRoundRight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnRoundShort") turnRoundShort[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnSet") turnSet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnSpeed") turnSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnSprite") turnSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnTimer") turnTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnTimerStart") turnTimerStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnTimes") turnTimes[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnTrigger") turnTrigger[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turned") turned[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnerTimerL") turnerTimerL[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turnerTimerR") turnerTimerR[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turning") turning[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "turningFrames") turningFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tw") tw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "twinCooldown") twinCooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "tx") tx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "txt") txt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "txtEffectCol") txtEffectCol[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "txtEffectMove") txtEffectMove[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ty") ty[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "type") type[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'u'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "uncoverWaitTimer") uncoverWaitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "unitTestCaseResults") unitTestCaseResults[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "unitTestFullResults") unitTestFullResults[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "unlockBounds") unlockBounds[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "unlocktext") unlocktext[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "upDown") upDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "upOrDown") upOrDown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "updateTimer") updateTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "upordown") upordown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "upperBound") upperBound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "uptag") uptag[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "useAllButtons") useAllButtons[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "useAngle") useAngle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "useEndStageBehavior") useEndStageBehavior[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "useImage") useImage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "usePlayerColor") usePlayerColor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "usePositionCollision") usePositionCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "useRails") useRails[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "useTileAsTileset") useTileAsTileset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "usesRng") usesRng[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'v'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "v") v[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vDir") vDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "valid") valid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "value") value[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "variant") variant[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "variation") variation[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vdir") vdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vecUx") vecUx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vecUy") vecUy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vecVx") vecVx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vecVy") vecVy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vehicle") vehicle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "velocity") velocity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "velx") velx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vely") vely[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "verM") verM[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "version") version[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vertical") vertical[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "verticalCollision") verticalCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "verticalQuickScrollTimer") verticalQuickScrollTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "viewPlayer") viewPlayer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "viewX") viewX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "viewY") viewY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "view_enabled") view_enabled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "view_hview") view_hview[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "view_visible") view_visible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "view_wview") view_wview[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "view_xview") view_xview[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "view_yview") view_yview[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "viewobjects") viewobjects[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "visible") visible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "visibleOptions") visibleOptions[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "visibleWeapons") visibleWeapons[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "visisble") visisble[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vn") vn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "volley_n") volley_n[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "volume") volume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vspeed") vspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vtiles") vtiles[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vx") vx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "vy") vy[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'w'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "w") w[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wSep") wSep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wac") wac[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wait") wait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitCount") waitCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitDiff") waitDiff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitFrames") waitFrames[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitLength") waitLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitMemory") waitMemory[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitStart") waitStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitTime") waitTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waitTimer") waitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wait_time") wait_time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walk") walk[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walkAccel") walkAccel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walkDestination") walkDestination[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walkSound") walkSound[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walkSpeed") walkSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walkStore") walkStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walkX") walkX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walk_end") walk_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walk_speed") walk_speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walk_sprite") walk_sprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "walk_start") walk_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wallCooldown") wallCooldown[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wallwait") wallwait[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "warningLevel") warningLevel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "warningTime") warningTime[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "warnings") warnings[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "warp") warp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "warpDelay") warpDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "warpInSFX") warpInSFX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "warpOutSFX") warpOutSFX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wasHidden") wasHidden[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wasHit") wasHit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wasKilled") wasKilled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "water") water[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waterDelay") waterDelay[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waterGrav") waterGrav[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waterPlat") waterPlat[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waterTimer") waterTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waterY") waterY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waveHeight") waveHeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waveSpeed") waveSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "waveWidth") waveWidth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weakSun") weakSun[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weakToRain") weakToRain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weakness") weakness[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weapon") weapon[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weaponCost") weaponCost[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weaponID") weaponID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weaponObject") weaponObject[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weaponOffset") weaponOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weaponVisible") weaponVisible[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weaponVisibleN") weaponVisibleN[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weapon_name") weapon_name[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weaponsAllowed") weaponsAllowed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "weatherImg") weatherImg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wheelFrame") wheelFrame[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wheelTimer") wheelTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wheelVal") wheelVal[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "whereto") whereto[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "whitespaceDropped") whitespaceDropped[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "whview") whview[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "width") width[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "widths") widths[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "willStop") willStop[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "windAccel") windAccel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "windObj") windObj[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "windSpeed") windSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "windowDir") windowDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wireLock") wireLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wireY") wireY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wireimg") wireimg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wirelength") wirelength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wname") wname[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wobj") wobj[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "woption") woption[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wpn") wpn[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "writeToFile") writeToFile[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wtank") wtank[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wtankPositionX") wtankPositionX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wtankPositionY") wtankPositionY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "wtr") wtr[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'x'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "x") x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "x1") x1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "x2") x2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xCont") xCont[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xCross") xCross[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xDelta") xDelta[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xDiff") xDiff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xDir") xDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xDirt") xDirt[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xDistanceTravelled") xDistanceTravelled[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xDraw") xDraw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xDrawBase") xDrawBase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xFlip") xFlip[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xJump") xJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xLock") xLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xMain") xMain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xMax") xMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xMin") xMin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xOff") xOff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xOffset") xOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xPosition") xPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xPrev") xPrev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xProvLength") xProvLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xSOffset") xSOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xScaleOverride") xScaleOverride[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xScaleStart") xScaleStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xSpd") xSpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xSpdConst") xSpdConst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xSpeed") xSpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "x_displacement") x_displacement[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "x_end") x_end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "x_offset") x_offset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "x_start") x_start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xa") xa[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xb") xb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xcenter") xcenter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xcoll") xcoll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xd") xd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xdir") xdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xdis") xdis[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xdist") xdist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ximg") ximg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xinputDeviceCount") xinputDeviceCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xm") xm[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xoff") xoff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xoffset") xoffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xpeed") xpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xplX") xplX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xplY") xplY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xpos") xpos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xprev") xprev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xprevious") xprevious[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xs") xs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xsc") xsc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xscale") xscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xscaleStart") xscaleStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xscaleStorage") xscaleStorage[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xscl") xscl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xshift") xshift[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xsize") xsize[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xsl") xsl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xsp") xsp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspd") xspd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeed") xspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeed1") xspeed1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeed2") xspeed2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeedCM") xspeedCM[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeedMain") xspeedMain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeedPlatform") xspeedPlatform[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeedPreIce") xspeedPreIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xspeedSave") xspeedSave[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xst") xst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xstart") xstart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xstep") xstep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xtarg") xtarg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xtravel") xtravel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xvs") xvs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xw") xw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xx") xx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xxs") xxs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xy") xy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "xypre") xypre[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'y'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "y") y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "y1") y1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "y2") y2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yCont") yCont[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yCount") yCount[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yCurrOffset") yCurrOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yCutoff") yCutoff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yDelta") yDelta[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yDiff") yDiff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yDir") yDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yDist") yDist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yDraw") yDraw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yDrawBase") yDrawBase[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yFlip") yFlip[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yHighOffset") yHighOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yJump") yJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yLock") yLock[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yLowOffset") yLowOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yMain") yMain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yMax") yMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yMin") yMin[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yMoveDir") yMoveDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yOUwILLgIVEmEaNeGG") yOUwILLgIVEmEaNeGG[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yOff") yOff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yOffset") yOffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yOffsetMax") yOffsetMax[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yPivot") yPivot[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yPosition") yPosition[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yPrev") yPrev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yProvLength") yProvLength[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yScale") yScale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ySeRe") ySeRe[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ySet") ySet[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yShift") yShift[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ySpd") ySpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ySpePrev") ySpePrev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ySpeed") ySpeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yStart") yStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yStore") yStore[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "y_offset") y_offset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "y_route") y_route[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ya") ya[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yb") yb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ycenter") ycenter[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ycoll") ycoll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yd") yd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ydir") ydir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ydis") ydis[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ydiv") ydiv[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yellowSprite") yellowSprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yend") yend[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yh") yh[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yimg") yimg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ym") ym[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ymem") ymem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yo") yo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yoff") yoff[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yoffset") yoffset[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yp") yp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ypos") ypos[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yprevious") yprevious[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ys") ys[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ysc") ysc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yscale") yscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yscaleStart") yscaleStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yscalestart") yscalestart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yshift") yshift[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ysize") ysize[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ysp") ysp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspd") yspd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeed") yspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeed1") yspeed1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeed2") yspeed2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeedJump") yspeedJump[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeedMain") yspeedMain[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeedPlatform") yspeedPlatform[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeedPreIce") yspeedPreIce[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yspeed_map") yspeed_map[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yst") yst[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ystart") ystart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ystep") ystep[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ytravel") ytravel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yvs") yvs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yw") yw[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yy") yy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "yyspeed") yyspeed[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'z'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "z") z[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "zapLength") zapLength[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'A'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "AnimID") AnimID[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'B'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "B") B[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'C'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "C0") C0[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "C1") C1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "C2") C2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "C3") C3[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "CONSOLE_MAX") CONSOLE_MAX[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'D'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "DEFAULT_SPAWN_LIST") DEFAULT_SPAWN_LIST[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'E'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "ERROR_MESSAGE") ERROR_MESSAGE[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "ERR_HEAD") ERR_HEAD[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'F'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "False") False[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'H'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "HEADER_MARKER") HEADER_MARKER[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'I'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "ID") ID[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'M'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "MAX_LINE_WIDTH") MAX_LINE_WIDTH[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "MET") MET[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "MIN_LINE_WIDTH") MIN_LINE_WIDTH[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "MMID") MMID[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "MVT_DIRECT") MVT_DIRECT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "MVT_SPAWNONLY") MVT_SPAWNONLY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "MVT_SPAWNSHIFT") MVT_SPAWNSHIFT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "MVT_SPEED") MVT_SPEED[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'N'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "No") No[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'O'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "Other") Other[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'R'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "RAND_MAX") RAND_MAX[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'S'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "SPEED") SPEED[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "SWD") SWD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "SquareSize") SquareSize[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'T'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "TILE_DEPTH_UNSET") TILE_DEPTH_UNSET[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "True") True[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'V'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "VRD") VRD[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "VS") VS[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "Vf") Vf[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'W'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "WS") WS[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "WTF") WTF[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'X'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "X") X[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, 'Y'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "Y") Y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "Yes") Yes[_____i_____, _____j_____] = _____val_____;
    else return false;
}
else if (stringStartsWith(_____vs_____, '_'))
{
    if (_____vs_____ == "") return false;
    else if (_____vs_____ == "_IgnoreGround") _IgnoreGround[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_X") _X[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_Y") _Y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "__x") __x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "__y") __y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_a") _a[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_accel") _accel[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_angle") _angle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_angle1") _angle1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_angle2") _angle2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_angleInDegrees") _angleInDegrees[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_arg") _arg[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_cleanmem") _cleanmem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_cleanmem_get_mem") _cleanmem_get_mem[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_coll") _coll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_cor") _cor[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_costume") _costume[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_currentHealth") _currentHealth[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_d") _d[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_dir") _dir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_dist") _dist[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_e") _e[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_end") _end[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_endPoint") _endPoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_endStageBehavior") _endStageBehavior[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_endy") _endy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_ex") _ex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_filename") _filename[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_global") _global[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_graphics") _graphics[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_gravDir") _gravDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_groundDir") _groundDir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_h") _h[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_hasWeight") _hasWeight[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_height") _height[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_hitTimer") _hitTimer[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_i") _i[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_id") _id[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_im") _im[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_init") _init[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_inked") _inked[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_interpolate") _interpolate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_js_drag_radius") _js_drag_radius[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_js_null_radius") _js_null_radius[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_mask") _mask[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_maxx") _maxx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_maxy") _maxy[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_middle") _middle[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_minx") _minx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_miny") _miny[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_mute") _mute[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_name") _name[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_name_col") _name_col[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_obj1") _obj1[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_obj2") _obj2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_on") _on[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_option") _option[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_originX") _originX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_originY") _originY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_overlappingEntity") _overlappingEntity[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_pause") _pause[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_pch") _pch[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_penetrate") _penetrate[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_physics") _physics[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_pid") _pid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_pressed") _pressed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_prevCollision") _prevCollision[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_prevX") _prevX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_prevY") _prevY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_prev_direction") _prev_direction[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_queue_index") _queue_index[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_rad_actual") _rad_actual[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_rangeEnd") _rangeEnd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_rangeEndInclusive") _rangeEndInclusive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_rangeStart") _rangeStart[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_rangeStartInclusive") _rangeStartInclusive[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_re") _re[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_regPosX") _regPosX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_regPosY") _regPosY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_regT") _regT[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_return") _return[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_rr") _rr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_rrl") _rrl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_s") _s[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_sb") _sb[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_size") _size[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_sl") _sl[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_solid") _solid[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_speed") _speed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_speedLimit") _speedLimit[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_sprite") _sprite[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_sr") _sr[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_st") _st[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_start") _start[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_startPoint") _startPoint[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_str") _str[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_success") _success[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_tableIndex") _tableIndex[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_targ") _targ[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_targetX") _targetX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_targetY") _targetY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_tempo") _tempo[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_text") _text[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_time") _time[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_tracknumber") _tracknumber[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_tx") _tx[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_velX") _velX[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_velY") _velY[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_voice") _voice[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_w") _w[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_width") _width[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_x") _x[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_xcoll") _xcoll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_xdir") _xdir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_xs") _xs[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_xscale") _xscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_xsp") _xsp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_xspeed") _xspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_xsub") _xsub[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_y") _y[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_y2") _y2[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_ySpd") _ySpd[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_yc") _yc[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_ycoll") _ycoll[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_ydir") _ydir[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_yprev") _yprev[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_ys") _ys[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_yscale") _yscale[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_ysp") _ysp[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_yspeed") _yspeed[_____i_____, _____j_____] = _____val_____;
    else if (_____vs_____ == "_ysub") _ysub[_____i_____, _____j_____] = _____val_____;
    else return false;
}


// success
return true;

//@noformat

